name: Build with analysis tools
on:
  workflow_dispatch:

  push:
    branches:
        - "analysis_workflow"
jobs:
  code_coverage:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores
      - name: Install Python Deps
        shell: bash -l {0}
        run: |
          npm install -g azurite
          python -m pip install arcticdb[Testing] pytest-split coverage
          python -m pip uninstall -y pytest-cpp || true # No longer works on 3.6
          python -m pip list
      - name: Prepare C++ compilation env
        run: . build_tooling/prep_cpp_build.sh # Also applies to Windows
      - name: CMake compile
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: ${{github.workspace}}/cpp/CMakeLists.txt
          configurePreset: linux-debug
          buildPreset: linux-debug
        env:
          ARCTICDB_CODE_COVERAGE_BUILD: 1
      - name: Run C++ Tests
        shell: bash -l {0}
        run: |
          cd cpp/out/linux-debug-build/
          make -j ${{ steps.cpu-cores.outputs.count }} arcticdb_rapidcheck_tests
          make -j ${{ steps.cpu-cores.outputs.count }} test_unit_arcticdb
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          cd python
          coverage run -m pytest tests
      - name: Generate a code coverage report
        uses: threeal/gcovr-action@latest
