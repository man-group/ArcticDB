name: "__Automated Release: calculate next version"

on:
  workflow_call:
    inputs:
      regex:
        required: true
        type: string
        description: "Regex to match tags to compare with"
      regex_match_only_releases:
        required: false
        default: false
        type: boolean
        description: "Whether regex to match only releases or all tags"
      from_branch:
        required: true
        type: string
    outputs:
      version:
        description: "Calculated next version"
        value: ${{ jobs.calculate-next-version.outputs.next_version }}
jobs:
  calculate-next-version:
    name: Calculate next version
    runs-on: ubuntu-latest
    outputs:
      next_version: ${{ steps.get-next-version.outputs[steps.get_increment_type.outputs.increment_type] }}
    steps:
      - name: Get latest released tag
        id: latest_tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          regex: ${{ inputs.regex }}
          sort-tags: true
          releases-only: ${{ inputs.regex_match_only_releases }}

      - name: Get PRs between ${{ inputs.from_branch }} and ${{ steps.latest_tag.outputs.tag }}
        uses: VanOns/get-merged-pull-requests-action@master
        id: pull_requests
        with:
          github_token: ${{ github.token }}
          current_tag: ${{ inputs.from_branch }}
          previous_tag: ${{ steps.latest_tag.outputs.tag }}
          return_type: "all"
      
      - name: Get labels of PRs and determine increment type
        id: get_increment_type
        uses: actions/github-script@v6
        with:
          script: |
            const pullRequests = JSON.parse('${{ steps.pull_requests.outputs.pull_requests }}');

            if (!pullRequests || pullRequests.length === 0) {
              core.setFailed("Error: No PRs found between branches");
              return;
            }

            const labels = pullRequests.flatMap(pr => pr.labels.map(label => label.name));
            console.log(`Labels: ${labels.join(', ')}`);

            const MAJOR_LABEL = "major";
            const MINOR_LABEL = "minor";
            const PATCH_LABEL = "patch";

            let incrementType = 'patch';
            if (labels.includes(MAJOR_LABEL)) {
              incrementType = 'major';
              console.log("Major changes found! Should increase major version.");
            } else if (labels.includes(MINOR_LABEL)) {
              incrementType = 'minor';
              console.log("Minor changes found! Should increase minor version.");
            } else if (labels.includes(PATCH_LABEL)) {
              console.log("Patch changes found! Should increase patch version.");
            } else {
              console.log("No PRs labeled patch, minor or major found! Defaulting to 'patch'.");
            }

            core.setOutput('increment_type', incrementType);

            const tag = '${{ steps.latest_tag.outputs.tag }}';
            core.setOutput('tag', tag.replace(/rc.*/, ''));

      - name: Calculate next version. Increment type - ${{ steps.get_increment_type.outputs.increment_type }}
        id: get-next-version
        uses: WyriHaximus/github-action-next-semvers@v1.2.1
        with:
          version: ${{ steps.get_increment_type.outputs.tag }}
