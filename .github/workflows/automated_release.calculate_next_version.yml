name: "__Automated Release: calculate next version"

on:
  workflow_call:
    inputs:
      regex:
        required: true
        type: string
        description: "Regex to match tags to compare with"
      regex_match_only_releases:
        required: false
        default: false
        type: boolean
        description: "Whether regex to match only releases or all tags"
      from_branch:
        required: true
        type: string
    outputs:
      version:
        description: "Calculated next version"
        value: ${{ jobs.calculate-next-version.outputs.next_version }}
jobs:
  calculate-next-version:
    name: Calculate next version
    runs-on: ubuntu-latest
    outputs:
      next_version: ${{ steps.get-next-version.outputs[steps.get_increment_type.outputs.increment_type] }}
    steps:
      - name: Get latest released tag
        id: latest_tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          regex: ${{ inputs.regex }}
          sort-tags: true
          releases-only: ${{ inputs.regex_match_only_releases }}

      - name: Get PRs between ${{ inputs.from_branch }} and ${{ steps.latest_tag.outputs.tag }}
        uses: VanOns/get-merged-pull-requests-action@v1.3.0
        id: pull_requests
        with:
          github_token: ${{ github.token }}
          current_tag: ${{ inputs.from_branch }}
          previous_tag: ${{ steps.latest_tag.outputs.tag }}

      - name: Get labels of PRs and determine increment type
        id: get_increment_type
        env:
          PULL_REQUESTS: ${{ steps.pull_requests.outputs.pull_requests_file }}
          MAJOR_LABEL: "major"
          MINOR_LABEL: "minor"
          PATCH_LABEL: "patch"
        run: |
          if [ -z "$PULL_REQUESTS" ] || [ ! -f "$PULL_REQUESTS" ]; then
            echo "Error: No PRs found between branches" && exit 1
          fi
          labels=$(jq -r '.[] | select(.pull_request.merged_at) | .labels[].name' "$PULL_REQUESTS")
          echo Labels: $labels
          increment_type="patch"
          case "$labels" in
            *"${{ env.MAJOR_LABEL }}"*) increment_type="major"; echo "Major changes found! Should increase major version." ;;
            *"${{ env.MINOR_LABEL }}"*) increment_type="minor"; echo "Minor changes found! Should increase minor version." ;;
            *"${{ env.PATCH_LABEL }}"*) echo "Patch changes found! Should increase patch version." ;;
            *) echo "No PRs labeled patch, minor or major found! Defaulting to 'patch'." ;;
          esac
          echo "increment_type=$increment_type" >> $GITHUB_OUTPUT
          TAG=${{ steps.latest_tag.outputs.tag }}
          echo "tag=${TAG%${{ vars.RC_SUFFIX }}*}" >> $GITHUB_OUTPUT

      - name: Calculate next version. Increment type - ${{ steps.get_increment_type.outputs.increment_type }}
        id: get-next-version
        uses: WyriHaximus/github-action-next-semvers@v1.2.1
        with:
          version: ${{ steps.get_increment_type.outputs.tag }}
