---
  name: Coverity Static Analysis
  on: [pull_request]
  jobs:
    polaris-scan:
      runs-on: [ ubuntu-latest]
      env:
        VCPKG_NUGET_USER: ${{secrets.VCPKG_NUGET_USER || github.repository_owner}}
        VCPKG_NUGET_TOKEN: ${{secrets.VCPKG_NUGET_TOKEN || secrets.GITHUB_TOKEN}}
        VCPKG_MAN_NUGET_USER: ${{secrets.VCPKG_MAN_NUGET_USER}}
        VCPKG_MAN_NUGET_TOKEN: ${{secrets.VCPKG_MAN_NUGET_TOKEN}}
      steps:
        - name: Checkout Source
          uses: actions/checkout@v4
          with:
            submodules: recursive

        - name: Setup build dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y gcc-10 g++10 make mono-complete

        - name: Setup VCPKG cache
          run: |
            . build_tooling/vcpkg_caching.sh
            echo -e "VCPKG_BINARY_SOURCES=$VCPKG_BINARY_SOURCES
            VCPKG_ROOT=$PLATFORM_VCPKG_ROOT" | tee -a $GITHUB_ENV

        - name: Prepare C++ compilation env
          run: . build_tooling/prep_cpp_build.sh

        - name: Get CMake
          uses: lukka/get-cmake@latest

        - name: CMake configure
          uses: lukka/run-cmake@v10.8
          with:
            cmakeListsTxtPath: ${{github.workspace}}/cpp/CMakeLists.txt
            configurePreset: linux-debug
            configurePresetAdditionalArgs: "['-DVCPKG_INSTALL_OPTIONS=--clean-after-build', '-DCMAKE_CXX_COMPILER=g++-10', '-DCMAKE_C_COMPILER=gcc-10', '-DVCPKG_INSTALL_OPTIONS=--debug']"

        - name: Polaris PR Scan
          if: ${{ github.event_name == 'pull_request' }}
          uses: synopsys-sig/synopsys-action@v1.13.0
          with:
            polaris_server_url: ${{ vars.POLARIS_SERVER_URL }}
            polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
            polaris_application_name: "ArcticDB"
            polaris_project_name: "ArcticDB-core"
            polaris_assessment_types: "SAST"
            polaris_prComment_enabled: true
            polaris_waitForScan: true
            github_token: ${{ secrets.GITHUB_TOKEN }}
            project_directory: ${{github.workspace}}/cpp/out/linux-debug-build