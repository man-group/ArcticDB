name: Run ASV Tests Check Python Script

on:
  push:
    branches-ignore:
      - 'master'
    paths:
      - 'python/benchmarks/**'
      - 'python/.asv/results/**'
      - 'asv.conf.json'
  pull_request:
    branches-ignore:
      - 'master'
    paths:
      - 'python/benchmarks/**'
      - 'python/.asv/results/**'
      - 'asv.conf.json'
  workflow_call:

jobs:
  run-asv-check-script:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    container: ghcr.io/man-group/arcticdb-dev:latest
    defaults:
      run: {shell: bash}
    steps:  
      - uses: actions/checkout@v3.3.0
        with:
          lfs: 'true'
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.ARCTICDB_TEST_PAT }}
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Configure sccache
        uses: mozilla-actions/sccache-action@v0.0.3
        with:
          version: "v0.4.0"
          
      - name: Extra envs
        shell: bash -l {0}
        run: |
          . build_tooling/vcpkg_caching.sh # Linux follower needs another call in CIBW
          echo -e "VCPKG_BINARY_SOURCES=$VCPKG_BINARY_SOURCES
          VCPKG_ROOT=$PLATFORM_VCPKG_ROOT" | tee -a $GITHUB_ENV
          cmake -P cpp/CMake/CpuCount.cmake | sed 's/^-- //' | tee -a $GITHUB_ENV
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: ${{vars.CMAKE_BUILD_PARALLEL_LEVEL}}          

      - name: Install ASV
        shell: bash -el {0}
        run: |
            git config --global --add safe.directory .
            python -m pip install --upgrade pip
            pip install asv 

      - name: Build project for ASV
        run: |
          python -m pip install -ve .

      - name: Run ASV Tests Check script
        run: |
          python -m pip install -ve .
          python python/utils/asv_checks.py
        continue-on-error: false