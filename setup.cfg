[metadata]
name = arcticdb
version = 1.4.1.dev0
description = ArcticDB DataFrame Database
author = Man Alpha Technology
author_email = arcticdb@man.com
license=Business Source License 1.1 (See LICENSE.txt)
keywords =
classifiers =
    Programming Language :: Python :: 3
    Operating System :: POSIX :: Linux
    Operating System :: Microsoft :: Windows
    Topic :: Database
    Topic :: Database :: Database Engines/Servers
url = https://github.com/man-group/arcticdb

[options]
setup_requires =
    # Setup dependencies
    wheel

install_requires =
    # Runtime dependencies
    #
    # This list MUST be kept in sync with the list of runtime dependencies
    # of ArcticDB's feedstock on conda-forge.
    #
    # See: https://github.com/conda-forge/arcticdb-feedstock/blob/main/recipe/meta.yaml#L61
    #
    # Note that the names of python package on PyPI (such as the ones here) might be
    # different that their conda-forge equivalents' (especially if the piece of software
    # is also distributed for other languages like C++). Python packages' names on conda-forge
    # might be suffixed or preffixed by "python", and one better double check using
    # conda-forge's package and feedstock browser.
    #
    # See: https://conda-forge.org/feedstock-outputs/
    numpy
    pandas
    attrs
    dataclasses ; python_version < '3.7'
    grpcio-tools
    protobuf >=3.5.0.post1 # Per https://github.com/grpc/grpc/blob/v1.45.3/requirements.txt
    xxhash
    six
    msgpack
    psutil
    pyyaml
    decorator
    prometheus_client
    packaging
    pymongo

[flake8]
# max line length for black
max-line-length = 120
target-version = ['py37']
# Default flake8 3.5 ignored flags
ignore=
    # check ignored by default in flake8. Meaning unclear.
    E24,
    # space before : (needed for how black formats slicing)
    E203,
    # do not assign a lambda expression, use a def
    E731,
    # do not use variables named 'l', 'O', or 'I'
    E741,
    # line break before binary operator
    W503,
    # line break after binary operator
    W504
    # E501 is handled by black
    E501
    # TODO: adapt the code-base not to ignore the following checks
    # E402: remove module imports at the top of the file
    E402
    # E711: change check against None
    E711
    # E712: simplify assertions
    E712
    # E722: do not use bare 'except'
    E722
    # F401: remove unused imports
    F401
    # F402: remove shadowing of symbols
    F402
    # F403: need to remove * and include all symbols explicitly
    F403
    # F405: indirectly imported symbols are present due to * imports
    F405
    # F523: inspect if the first format is needed
    F523
    # F541: adapt f-strings
    F541
    # F811: remove redefinition of unused symbols
    F811
    # F821: flake8 catches symbols in comment where it shouldn't
    F821
    # F841: remove unused variables
    F841
    # W391: remove blank lines at the end of the file
    W391

# This must be kept in sync with the black config in pyproject.toml.
exclude=
    .git,
    .github
    .mypy_cache
    .vscode
    .idea
    build_tooling
    cpp
    docs
    static

[options.extras_require]
Testing =
    pytest
    pyarrow
    pytest-cpp
    pytest-timeout
    packaging
    future
    pytest-server-fixtures
    mock
    boto3
    moto
    flask  # Used by moto
    flask-cors
    hypothesis <6.73
    azure-storage-blob
    azure-identity
    coverage

[options.entry_points]
console_scripts =
    arcticdb_update_storage = arcticdb.scripts.update_storage:main
