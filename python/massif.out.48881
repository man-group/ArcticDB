desc: (none)
cmd: python test_mem_finalize.py
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=65784893073
mem_heap_B=572716714
mem_heap_extra_B=968294
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=2
#-----------
time=113937742147
mem_heap_B=572819966
mem_heap_extra_B=970426
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=3
#-----------
time=146873185851
mem_heap_B=568946292
mem_heap_extra_B=967788
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=4
#-----------
time=194301035340
mem_heap_B=559112158
mem_heap_extra_B=965962
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=5
#-----------
time=256329537915
mem_heap_B=569174162
mem_heap_extra_B=972430
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=6
#-----------
time=294825557316
mem_heap_B=561952189
mem_heap_extra_B=970923
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=7
#-----------
time=331115596853
mem_heap_B=1234928193
mem_heap_extra_B=1106751
mem_stacks_B=0
heap_tree=peak
n3: 1234928193 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 675892454 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 675892454 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 675474526 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 653809502 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 651531532 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 445218604 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 67201504 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67201504 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 67201504 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67201504 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67201504 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67201504 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67201504 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67201504 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67201504 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 67201504 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 67201504 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 67201504 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 32000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 32000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 32000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 32000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 32000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 32000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 32000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 32000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 32000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 32000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 3200480 in 1 place, below massif's threshold (1.00%)
       n1: 67201504 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67201504 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 67201504 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67201504 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67201504 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67201504 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67201504 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67201504 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67201504 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 67201504 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 67201504 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 67201504 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 32000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 32000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 32000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 32000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 32000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 32000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 32000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 32000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 32000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 32000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 3200480 in 1 place, below massif's threshold (1.00%)
       n1: 67201504 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67201504 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 67201504 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67201504 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67201504 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67201504 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67201504 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67201504 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67201504 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 67201504 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 67201504 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 67201504 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 32000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 32000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 32000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 32000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 32000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 32000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 32000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 32000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 32000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 32000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 3200480 in 1 place, below massif's threshold (1.00%)
       n1: 67201504 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67201504 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 67201504 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67201504 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67201504 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67201504 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67201504 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67201504 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67201504 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 67201504 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 67201504 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 67201504 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 32000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 32000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 32000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 32000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 32000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 32000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 32000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 32000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 32000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 32000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 3200480 in 1 place, below massif's threshold (1.00%)
       n1: 33601520 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33601520 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 33601520 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33601520 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33601520 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33601520 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33601520 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33601520 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33601520 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 33601520 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 33601520 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 33601520 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 16000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 16000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 16000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 16000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 16000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 16000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 16000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 16000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 16000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 16000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 1600496 in 1 place, below massif's threshold (1.00%)
       n1: 33601520 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33601520 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 33601520 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33601520 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33601520 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33601520 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33601520 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33601520 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33601520 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 33601520 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 33601520 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 33601520 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 16000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 16000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 16000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 16000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 16000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 16000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 16000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 16000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 16000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 16000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 1600496 in 1 place, below massif's threshold (1.00%)
       n1: 33601520 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33601520 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 33601520 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33601520 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33601520 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33601520 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33601520 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33601520 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33601520 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 33601520 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 33601520 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 33601520 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 16000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 16000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 16000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 16000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 16000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 16000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 16000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 16000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 16000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 16000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 1600496 in 1 place, below massif's threshold (1.00%)
       n0: 25204596 in 3 places, all below massif's threshold (1.00%)
       n1: 16801528 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16801528 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 16801528 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16801528 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16801528 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16801528 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16801528 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16801528 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16801528 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16801528 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16801528 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 16801528 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 16801528 in 3 places, all below massif's threshold (1.00%)
       n1: 16801528 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16801528 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 16801528 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16801528 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16801528 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16801528 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16801528 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16801528 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16801528 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16801528 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16801528 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 16801528 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 16801528 in 3 places, all below massif's threshold (1.00%)
       n1: 16800376 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800376 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 16800376 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800376 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800376 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800376 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800376 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800376 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800376 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800376 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800376 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 16800376 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 16800376 in 3 places, all below massif's threshold (1.00%)
      n1: 206312928 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 206312928 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 206312928 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 206312928 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 206312928 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 206312928 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 206312928 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 206312928 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 206312928 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 206312928 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 206312928 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 206312928 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 206312928 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 206312928 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 98241012 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                     n1: 98241012 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                      n1: 98241012 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                       n1: 98241012 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                        n1: 98241012 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                         n1: 98241012 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                          n1: 98241012 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                           n1: 98241012 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                            n1: 98241012 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                             n1: 98241012 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                              n0: 98241012 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                    n1: 98240712 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 98240712 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 98240712 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 98240712 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 98240712 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 98240712 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 98240712 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 98240712 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 98240712 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 98240712 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 98240712 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n0: 9831204 in 1 place, below massif's threshold (1.00%)
     n0: 2277970 in 1 place, below massif's threshold (1.00%)
    n2: 21210368 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21206272 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 21206272 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 4096 in 1 place, below massif's threshold (1.00%)
    n0: 454656 in 2 places, all below massif's threshold (1.00%)
   n0: 417928 in 1 place, below massif's threshold (1.00%)
 n1: 536926840 0x758E86C: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 536926840 0x758ECA7: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 536926840 0x59F9B82: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n2: 536926840 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n1: 536845288 0x7B8AFE8: arcticdb::storage::s3::S3StreamBuffer::xsputn(char const*, long) (s3_real_client.cpp:82)
      n1: 536845288 0xAAA6375: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
       n1: 536845288 0x8DB8FFC: WriteData(char*, unsigned long, unsigned long, void*) (CurlHttpClient.cpp:226)
        n1: 536845288 0x8EDA6A4: chop_write (sendf.c:321)
         n1: 536845288 0x8EDAA49: Curl_client_write (sendf.c:415)
          n1: 536845288 0x8EEA7D2: readwrite_data (transfer.c:709)
           n1: 536845288 0x8EEB500: Curl_readwrite (transfer.c:1133)
            n1: 536845288 0x8ED365E: multi_runsingle (multi.c:2443)
             n1: 536845288 0x8ED3F84: curl_multi_perform (multi.c:2740)
              n1: 536845288 0x8EC2C87: easy_transfer (easy.c:679)
               n1: 536845288 0x8EC2F0C: easy_perform (easy.c:769)
                n1: 536845288 0x8EC2F77: curl_easy_perform (easy.c:788)
                 n1: 536845288 0x8DBC890: Aws::Http::CurlHttpClient::MakeRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const (CurlHttpClient.cpp:865)
                  n1: 536845288 0x8E39C05: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}::operator()() const (AWSClient.cpp:567)
                   n1: 536845288 0x8E50CAE: std::shared_ptr<Aws::Http::HttpResponse> std::__invoke_impl<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(std::__invoke_other, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:61)
                    n1: 536845288 0x8E4D824: std::enable_if<std::__and_<std::__not_<std::is_void<std::shared_ptr<Aws::Http::HttpResponse> > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>::type, std::shared_ptr<Aws::Http::HttpResponse> > >::value, std::shared_ptr<Aws::Http::HttpResponse> >::type std::__invoke_r<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:143)
                     n1: 536845288 0x8E49C3A: std::_Function_handler<std::shared_ptr<Aws::Http::HttpResponse> (), Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                      n1: 536845288 0x8E7D9D3: std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>::operator()() const (std_function.h:590)
                       n1: 536845288 0x8E6E006: std::shared_ptr<Aws::Http::HttpResponse> smithy::components::tracing::TracingUtils::MakeCallWithTiming<std::shared_ptr<Aws::Http::HttpResponse> >(std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                        n1: 536845288 0x8E3A8B0: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:571)
                         n1: 536845288 0x8E3631B: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:293)
                          n1: 536845288 0x8E3C045: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:665)
                           n1: 536845288 0x8E3C533: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:715)
                            n1: 536845288 0x8C66920: Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}::operator()() const (S3Client.cpp:2251)
                             n1: 536845288 0x8CE9E6C: Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:61)
                              n0: 536845288 0x8CD9B3A: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:143)
     n0: 81552 in 2 places, all below massif's threshold (1.00%)
 n0: 22108899 in 1124 places, all below massif's threshold (1.00%)
#-----------
snapshot=8
#-----------
time=366927386933
mem_heap_B=697449951
mem_heap_extra_B=1051817
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=9
#-----------
time=399404012833
mem_heap_B=697540714
mem_heap_extra_B=1055254
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=10
#-----------
time=439570273641
mem_heap_B=697099807
mem_heap_extra_B=1054633
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=11
#-----------
time=507511793327
mem_heap_B=697235960
mem_heap_extra_B=1055896
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=12
#-----------
time=547680312890
mem_heap_B=697326407
mem_heap_extra_B=1056185
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=580159031530
mem_heap_B=697940099
mem_heap_extra_B=1059845
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=620326857379
mem_heap_B=697770195
mem_heap_extra_B=1062533
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=15
#-----------
time=680578480197
mem_heap_B=698168051
mem_heap_extra_B=1061685
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=16
#-----------
time=740830577831
mem_heap_B=698038894
mem_heap_extra_B=1064394
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=808771572582
mem_heap_B=698177831
mem_heap_extra_B=1067833
mem_stacks_B=0
heap_tree=detailed
n2: 698177831 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 674626010 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 674626010 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 362941080 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 341284248 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 341284248 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 233212332 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 35200992 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n0: 13203060 in 3 places, all below massif's threshold (1.00%)
       n1: 8801016 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8801016 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 8801016 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8801016 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8801016 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8801016 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8801016 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8801016 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8801016 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8801016 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8801016 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8801016 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800504 in 2 places, all below massif's threshold (1.00%)
       n1: 8801016 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8801016 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 8801016 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8801016 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8801016 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8801016 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8801016 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8801016 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8801016 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8801016 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8801016 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8801016 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800504 in 2 places, all below massif's threshold (1.00%)
       n1: 8800248 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800248 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 8800248 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800248 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800248 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800248 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800248 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800248 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800248 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800248 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800248 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800248 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800120 in 2 places, all below massif's threshold (1.00%)
      n1: 108071916 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 108071916 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 108071916 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 108071916 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 108071916 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 108071916 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 108071916 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 108071916 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 108071916 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 108071916 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 108071916 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 108071916 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 108071916 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 108071916 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 98240712 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 98240712 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 98240712 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 98240712 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 98240712 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 98240712 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 98240712 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 98240712 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 98240712 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 98240712 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 98240712 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n1: 9831204 0x7741D46: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1626)
                     n1: 9831204 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                      n1: 9831204 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831204 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831204 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831204 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831204 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831204 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831204 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831204 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831204 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 21206272 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21206272 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 21206272 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 450560 in 2 places, all below massif's threshold (1.00%)
   n1: 311684930 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 311684930 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 311467026 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 311464282 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 311464282 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 311464282 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 311464282 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 311464282 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 311464282 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 311464282 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 311464282 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 311464282 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 311464282 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n1: 311464282 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 311464282 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n1: 311464282 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 311464282 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 311464282 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 311464282 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 311464282 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 311464282 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 311464282 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 311464282 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 311464282 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 311464282 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 311464282 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 311464282 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 311464282 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 311464282 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 311464282 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
      n0: 2744 in 2 places, all below massif's threshold (1.00%)
     n0: 217904 in 5 places, all below massif's threshold (1.00%)
 n0: 23551821 in 1128 places, all below massif's threshold (1.00%)
#-----------
snapshot=18
#-----------
time=841250778423
mem_heap_B=698072368
mem_heap_extra_B=1068992
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=19
#-----------
time=889108584936
mem_heap_B=698095053
mem_heap_extra_B=1067195
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=20
#-----------
time=929276247022
mem_heap_B=698143056
mem_heap_extra_B=1070584
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=21
#-----------
time=961752402567
mem_heap_B=1008592986
mem_heap_extra_B=1126598
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=22
#-----------
time=1001921563532
mem_heap_B=698214592
mem_heap_extra_B=1068832
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=23
#-----------
time=1029695626735
mem_heap_B=698216441
mem_heap_extra_B=1067599
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=24
#-----------
time=1069863770927
mem_heap_B=698151141
mem_heap_extra_B=1070763
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=25
#-----------
time=1102342387157
mem_heap_B=698281988
mem_heap_extra_B=1069276
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=26
#-----------
time=1142509812974
mem_heap_B=698283769
mem_heap_extra_B=1068567
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=1193263007671
mem_heap_B=938392267
mem_heap_extra_B=1073653
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=28
#-----------
time=1230536403783
mem_heap_B=698153316
mem_heap_extra_B=1067380
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=1270704628029
mem_heap_B=698417417
mem_heap_extra_B=1068911
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=30
#-----------
time=1310871861672
mem_heap_B=698156228
mem_heap_extra_B=1067564
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=1371123725118
mem_heap_B=698680852
mem_heap_extra_B=1070004
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=32
#-----------
time=1411292664506
mem_heap_B=698290619
mem_heap_extra_B=1072173
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=1451461411177
mem_heap_B=698158995
mem_heap_extra_B=1068125
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=34
#-----------
time=1491629041042
mem_heap_B=698159874
mem_heap_extra_B=1068318
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=35
#-----------
time=1524108588850
mem_heap_B=698292260
mem_heap_extra_B=1068988
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=36
#-----------
time=1564277255603
mem_heap_B=698161830
mem_heap_extra_B=1068570
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=37
#-----------
time=1619053515577
mem_heap_B=1008597696
mem_heap_extra_B=1129048
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=1664699513479
mem_heap_B=698180751
mem_heap_extra_B=1070777
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=39
#-----------
time=1712558839469
mem_heap_B=698163770
mem_heap_extra_B=1070150
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=1762450944640
mem_heap_B=1008629566
mem_heap_extra_B=1124538
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=41
#-----------
time=1812979610326
mem_heap_B=698445711
mem_heap_extra_B=1069745
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=42
#-----------
time=1873232649329
mem_heap_B=698447215
mem_heap_extra_B=1069649
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=1933482730764
mem_heap_B=698185186
mem_heap_extra_B=1068382
mem_stacks_B=0
heap_tree=detailed
n2: 698185186 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 674625468 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 674625468 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 362941080 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 341284248 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 341284248 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 233212332 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 35200992 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n0: 13203060 in 3 places, all below massif's threshold (1.00%)
       n1: 8801016 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8801016 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 8801016 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8801016 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8801016 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8801016 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8801016 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8801016 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8801016 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8801016 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8801016 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8801016 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800504 in 2 places, all below massif's threshold (1.00%)
       n1: 8801016 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8801016 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 8801016 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8801016 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8801016 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8801016 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8801016 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8801016 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8801016 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8801016 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8801016 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8801016 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800504 in 2 places, all below massif's threshold (1.00%)
       n1: 8800248 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800248 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 8800248 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800248 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800248 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800248 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800248 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800248 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800248 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800248 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800248 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800248 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800120 in 2 places, all below massif's threshold (1.00%)
      n1: 108071916 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 108071916 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 108071916 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 108071916 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 108071916 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 108071916 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 108071916 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 108071916 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 108071916 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 108071916 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 108071916 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 108071916 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 108071916 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 108071916 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 98240712 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 98240712 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 98240712 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 98240712 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 98240712 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 98240712 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 98240712 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 98240712 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 98240712 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 98240712 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 98240712 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n1: 9831204 0x7741D46: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1626)
                     n1: 9831204 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                      n1: 9831204 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831204 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831204 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831204 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831204 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831204 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831204 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831204 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831204 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 21206272 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21206272 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 21206272 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 450560 in 2 places, all below massif's threshold (1.00%)
   n1: 311684388 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 311684388 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 311466484 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 311463740 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 311463740 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 311463740 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 311463740 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 311463740 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 311463740 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 311463740 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 311463740 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 311463740 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 311463740 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n1: 311463740 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 311463740 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n1: 311463740 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 311463740 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 311463740 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 311463740 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 311463740 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 311463740 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 311463740 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 311463740 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 311463740 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 311463740 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 311463740 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 311463740 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 311463740 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 311463740 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 311463740 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
      n0: 2744 in 2 places, all below massif's threshold (1.00%)
     n0: 217904 in 5 places, all below massif's threshold (1.00%)
 n0: 23559718 in 1128 places, all below massif's threshold (1.00%)
#-----------
snapshot=44
#-----------
time=1965960317852
mem_heap_B=698184240
mem_heap_extra_B=1070136
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=45
#-----------
time=2016723322095
mem_heap_B=938426732
mem_heap_extra_B=1074764
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=2046297903175
mem_heap_B=698187560
mem_heap_extra_B=1068576
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=47
#-----------
time=2086466627446
mem_heap_B=698320236
mem_heap_extra_B=1070364
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=2134323899005
mem_heap_B=698190711
mem_heap_extra_B=1068969
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=49
#-----------
time=2184212042154
mem_heap_B=1008612201
mem_heap_extra_B=1123831
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=2186884364789
mem_heap_B=698190091
mem_heap_extra_B=1069693
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=51
#-----------
time=2194574679453
mem_heap_B=698190218
mem_heap_extra_B=1069734
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=52
#-----------
time=2196578947104
mem_heap_B=934498540
mem_heap_extra_B=1071108
mem_stacks_B=0
heap_tree=detailed
n3: 934498540 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 537966688 0x758E86C: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 537966688 0x758ECA7: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 537966688 0x59F9B82: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n2: 537966688 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n1: 537886720 0x7B8AFE8: arcticdb::storage::s3::S3StreamBuffer::xsputn(char const*, long) (s3_real_client.cpp:82)
      n1: 537886720 0xAAA6375: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
       n1: 537886720 0x8DB8FFC: WriteData(char*, unsigned long, unsigned long, void*) (CurlHttpClient.cpp:226)
        n1: 537886720 0x8EDA6A4: chop_write (sendf.c:321)
         n1: 537886720 0x8EDAA49: Curl_client_write (sendf.c:415)
          n1: 537886720 0x8EEA7D2: readwrite_data (transfer.c:709)
           n1: 537886720 0x8EEB500: Curl_readwrite (transfer.c:1133)
            n1: 537886720 0x8ED365E: multi_runsingle (multi.c:2443)
             n1: 537886720 0x8ED3F84: curl_multi_perform (multi.c:2740)
              n1: 537886720 0x8EC2C87: easy_transfer (easy.c:679)
               n1: 537886720 0x8EC2F0C: easy_perform (easy.c:769)
                n1: 537886720 0x8EC2F77: curl_easy_perform (easy.c:788)
                 n1: 537886720 0x8DBC890: Aws::Http::CurlHttpClient::MakeRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const (CurlHttpClient.cpp:865)
                  n1: 537886720 0x8E39C05: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}::operator()() const (AWSClient.cpp:567)
                   n1: 537886720 0x8E50CAE: std::shared_ptr<Aws::Http::HttpResponse> std::__invoke_impl<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(std::__invoke_other, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:61)
                    n1: 537886720 0x8E4D824: std::enable_if<std::__and_<std::__not_<std::is_void<std::shared_ptr<Aws::Http::HttpResponse> > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>::type, std::shared_ptr<Aws::Http::HttpResponse> > >::value, std::shared_ptr<Aws::Http::HttpResponse> >::type std::__invoke_r<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:143)
                     n1: 537886720 0x8E49C3A: std::_Function_handler<std::shared_ptr<Aws::Http::HttpResponse> (), Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                      n1: 537886720 0x8E7D9D3: std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>::operator()() const (std_function.h:590)
                       n1: 537886720 0x8E6E006: std::shared_ptr<Aws::Http::HttpResponse> smithy::components::tracing::TracingUtils::MakeCallWithTiming<std::shared_ptr<Aws::Http::HttpResponse> >(std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                        n1: 537886720 0x8E3A8B0: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:571)
                         n1: 537886720 0x8E3631B: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:293)
                          n1: 537886720 0x8E3C045: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:665)
                           n1: 537886720 0x8E3C533: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:715)
                            n1: 537886720 0x8C66920: Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}::operator()() const (S3Client.cpp:2251)
                             n1: 537886720 0x8CE9E6C: Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:61)
                              n0: 537886720 0x8CD9B3A: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:143)
     n0: 79968 in 2 places, all below massif's threshold (1.00%)
 n1: 363148256 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 363148256 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 362928792 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 341284248 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 341284248 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n8: 233212332 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 39605340 in 6 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
      n1: 108071916 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 108071916 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 108071916 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 108071916 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 108071916 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 108071916 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 108071916 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 108071916 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 108071916 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 108071916 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 108071916 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 108071916 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 108071916 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 108071916 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 98240712 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 98240712 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 98240712 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 98240712 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 98240712 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 98240712 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 98240712 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 98240712 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 98240712 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 98240712 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 98240712 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n1: 9831204 0x7741D46: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1626)
                     n1: 9831204 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                      n1: 9831204 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831204 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831204 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831204 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831204 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831204 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831204 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831204 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831204 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 21206272 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21206272 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 21206272 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 438272 in 2 places, all below massif's threshold (1.00%)
   n0: 219464 in 1 place, below massif's threshold (1.00%)
 n0: 33383596 in 1127 places, all below massif's threshold (1.00%)
#-----------
snapshot=53
#-----------
time=2198616301585
mem_heap_B=1237128276
mem_heap_extra_B=1128076
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=54
#-----------
time=2201491150708
mem_heap_B=1008609096
mem_heap_extra_B=1123120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=2204297374176
mem_heap_B=1008613240
mem_heap_extra_B=1123160
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=56
#-----------
time=2206969637804
mem_heap_B=698191882
mem_heap_extra_B=1069414
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=2214659824897
mem_heap_B=698192009
mem_heap_extra_B=1069439
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=58
#-----------
time=2216664100266
mem_heap_B=934498983
mem_heap_extra_B=1071145
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=59
#-----------
time=2218701799961
mem_heap_B=1237127577
mem_heap_extra_B=1129335
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=60
#-----------
time=2221576783512
mem_heap_B=1008607253
mem_heap_extra_B=1125523
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=2224381109259
mem_heap_B=1008611397
mem_heap_extra_B=1125563
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=62
#-----------
time=2227053421775
mem_heap_B=698191178
mem_heap_extra_B=1070550
mem_stacks_B=0
heap_tree=detailed
n2: 698191178 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 674623962 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 674623962 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 362941080 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 341284248 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 341284248 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 233212332 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 35200992 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n0: 13203060 in 3 places, all below massif's threshold (1.00%)
       n1: 8801016 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8801016 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 8801016 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8801016 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8801016 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8801016 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8801016 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8801016 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8801016 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8801016 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8801016 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8801016 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800504 in 2 places, all below massif's threshold (1.00%)
       n1: 8801016 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8801016 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 8801016 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8801016 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8801016 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8801016 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8801016 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8801016 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8801016 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8801016 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8801016 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8801016 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800504 in 2 places, all below massif's threshold (1.00%)
       n1: 8800248 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800248 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 8800248 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800248 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800248 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800248 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800248 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800248 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800248 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800248 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800248 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800248 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800120 in 2 places, all below massif's threshold (1.00%)
      n1: 108071916 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 108071916 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 108071916 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 108071916 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 108071916 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 108071916 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 108071916 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 108071916 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 108071916 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 108071916 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 108071916 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 108071916 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 108071916 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 108071916 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 98240712 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 98240712 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 98240712 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 98240712 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 98240712 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 98240712 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 98240712 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 98240712 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 98240712 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 98240712 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 98240712 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n1: 9831204 0x7741D46: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1626)
                     n1: 9831204 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                      n1: 9831204 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831204 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831204 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831204 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831204 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831204 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831204 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831204 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831204 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 21206272 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21206272 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 21206272 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 450560 in 2 places, all below massif's threshold (1.00%)
   n1: 311682882 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 311682882 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 311464978 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 311462234 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 311462234 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 311462234 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 311462234 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 311462234 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 311462234 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 311462234 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 311462234 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 311462234 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 311462234 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n1: 311462234 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 311462234 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n1: 311462234 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 311462234 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 311462234 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 311462234 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 311462234 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 311462234 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 311462234 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 311462234 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 311462234 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 311462234 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 311462234 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 311462234 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 311462234 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 311462234 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 311462234 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
      n0: 2744 in 2 places, all below massif's threshold (1.00%)
     n0: 217904 in 5 places, all below massif's threshold (1.00%)
 n0: 23567216 in 1128 places, all below massif's threshold (1.00%)
#-----------
snapshot=63
#-----------
time=2234743759123
mem_heap_B=698191305
mem_heap_extra_B=1070591
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=64
#-----------
time=2236748028531
mem_heap_B=934499422
mem_heap_extra_B=1071138
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=2238785468129
mem_heap_B=1237128436
mem_heap_extra_B=1128796
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=66
#-----------
time=2241662409632
mem_heap_B=1008634280
mem_heap_extra_B=1125984
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=67
#-----------
time=2244468693743
mem_heap_B=1008638344
mem_heap_extra_B=1125992
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=68
#-----------
time=2247138748189
mem_heap_B=698190994
mem_heap_extra_B=1069910
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=69
#-----------
time=2254828860585
mem_heap_B=698191121
mem_heap_extra_B=1069999
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=70
#-----------
time=2256833121536
mem_heap_B=934499871
mem_heap_extra_B=1071121
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=71
#-----------
time=2258870638197
mem_heap_B=1237128994
mem_heap_extra_B=1128654
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=72
#-----------
time=2261747790957
mem_heap_B=1008634959
mem_heap_extra_B=1125737
mem_stacks_B=0
heap_tree=detailed
n2: 1008634959 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 985070640 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 985070640 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 673189144 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 651532312 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 651532312 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 445218604 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 67201504 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67201504 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 67201504 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67201504 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67201504 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67201504 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67201504 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67201504 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67201504 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 67201504 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 67201504 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 67201504 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 32000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 32000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 32000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 32000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 32000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 32000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 32000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 32000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 32000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 32000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 3200480 in 1 place, below massif's threshold (1.00%)
       n1: 67201504 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67201504 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 67201504 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67201504 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67201504 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67201504 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67201504 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67201504 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67201504 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 67201504 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 67201504 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 67201504 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 32000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 32000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 32000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 32000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 32000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 32000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 32000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 32000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 32000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 32000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 3200480 in 1 place, below massif's threshold (1.00%)
       n1: 67201504 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67201504 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 67201504 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67201504 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67201504 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67201504 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67201504 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67201504 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67201504 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 67201504 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 67201504 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 67201504 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 32000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 32000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 32000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 32000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 32000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 32000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 32000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 32000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 32000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 32000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 3200480 in 1 place, below massif's threshold (1.00%)
       n1: 67201504 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 67201504 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 67201504 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 67201504 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 67201504 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 67201504 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 67201504 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 67201504 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 67201504 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 67201504 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 67201504 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 67201504 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 32000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 32000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 32000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 32000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 32000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 32000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 32000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 32000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 32000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 32000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 3200480 in 1 place, below massif's threshold (1.00%)
       n1: 33601520 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33601520 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 33601520 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33601520 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33601520 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33601520 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33601520 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33601520 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33601520 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 33601520 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 33601520 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 33601520 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 16000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 16000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 16000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 16000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 16000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 16000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 16000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 16000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 16000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 16000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 1600496 in 1 place, below massif's threshold (1.00%)
       n1: 33601520 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33601520 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 33601520 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33601520 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33601520 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33601520 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33601520 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33601520 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33601520 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 33601520 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 33601520 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 33601520 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 16000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 16000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 16000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 16000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 16000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 16000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 16000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 16000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 16000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 16000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 1600496 in 1 place, below massif's threshold (1.00%)
       n1: 33601520 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 33601520 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 33601520 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 33601520 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 33601520 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 33601520 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 33601520 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 33601520 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 33601520 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 33601520 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 33601520 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 33601520 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 16000512 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 16000512 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 16000512 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 16000512 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 16000512 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 16000512 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 16000512 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 16000512 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 16000512 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 16000512 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 1600496 in 1 place, below massif's threshold (1.00%)
       n0: 25204596 in 3 places, all below massif's threshold (1.00%)
       n1: 16801528 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16801528 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 16801528 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16801528 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16801528 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16801528 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16801528 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16801528 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16801528 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16801528 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16801528 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 16801528 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 16801528 in 3 places, all below massif's threshold (1.00%)
       n1: 16801528 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16801528 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 16801528 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16801528 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16801528 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16801528 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16801528 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16801528 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16801528 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16801528 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16801528 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 16801528 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 16801528 in 3 places, all below massif's threshold (1.00%)
       n1: 16800376 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800376 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 16800376 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800376 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800376 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800376 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800376 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800376 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800376 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800376 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800376 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 16800376 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 16800376 in 3 places, all below massif's threshold (1.00%)
      n1: 206313708 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 206313708 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 206313708 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 206313708 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 206313708 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 206313708 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 206313708 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 206313708 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 206313708 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 206313708 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 206313708 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 206313708 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 206313708 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 206313708 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 98241792 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                     n1: 98241792 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                      n1: 98241792 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                       n1: 98241792 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                        n1: 98241792 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                         n1: 98241792 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                          n1: 98241792 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                           n1: 98241792 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                            n1: 98241792 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                             n1: 98241792 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                              n0: 98241792 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                    n1: 98240712 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 98240712 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 98240712 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 98240712 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 98240712 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 98240712 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 98240712 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 98240712 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 98240712 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 98240712 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 98240712 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n0: 9831204 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 21206272 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21206272 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 21206272 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 450560 in 2 places, all below massif's threshold (1.00%)
   n1: 311881496 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 311881496 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 311465520 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 311462776 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 311462776 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 311462776 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 311462776 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 311462776 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 311462776 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 311462776 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 311462776 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 311462776 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 311462776 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n1: 311462776 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 311462776 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n1: 311462776 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 311462776 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 311462776 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 311462776 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 311462776 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 311462776 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 311462776 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 311462776 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 311462776 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 311462776 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 311462776 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 311462776 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 311462776 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 311462776 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 311462776 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
      n0: 2744 in 2 places, all below massif's threshold (1.00%)
     n0: 415976 in 5 places, all below massif's threshold (1.00%)
 n0: 23564319 in 1128 places, all below massif's threshold (1.00%)
#-----------
snapshot=73
#-----------
time=2264552943304
mem_heap_B=1008639023
mem_heap_extra_B=1125745
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=74
#-----------
time=2267223040221
mem_heap_B=698191553
mem_heap_extra_B=1069879
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=75
#-----------
time=2274913275923
mem_heap_B=698191680
mem_heap_extra_B=1069968
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=76
#-----------
time=2276917536284
mem_heap_B=934500299
mem_heap_extra_B=1071205
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=77
#-----------
time=2278954987817
mem_heap_B=1237130213
mem_heap_extra_B=1132011
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=78
#-----------
time=2281832073156
mem_heap_B=1008638015
mem_heap_extra_B=1128353
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=79
#-----------
time=2284636815481
mem_heap_B=1008642079
mem_heap_extra_B=1128361
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=80
#-----------
time=2287307509293
mem_heap_B=698456924
mem_heap_extra_B=1069772
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=81
#-----------
time=2294997780903
mem_heap_B=698457051
mem_heap_extra_B=1069845
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=82
#-----------
time=2297002057013
mem_heap_B=934500748
mem_heap_extra_B=1071268
mem_stacks_B=0
heap_tree=detailed
n3: 934500748 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 537966688 0x758E86C: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_realloc(unsigned char*, unsigned long) (allocator.cpp:246)
  n1: 537966688 0x758ECA7: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::realloc(std::pair<unsigned char*, long>, unsigned long) (allocator.cpp:313)
   n1: 537966688 0x59F9B82: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:230)
    n2: 537966688 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n1: 537886720 0x7B8AFE8: arcticdb::storage::s3::S3StreamBuffer::xsputn(char const*, long) (s3_real_client.cpp:82)
      n1: 537886720 0xAAA6375: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
       n1: 537886720 0x8DB8FFC: WriteData(char*, unsigned long, unsigned long, void*) (CurlHttpClient.cpp:226)
        n1: 537886720 0x8EDA6A4: chop_write (sendf.c:321)
         n1: 537886720 0x8EDAA49: Curl_client_write (sendf.c:415)
          n1: 537886720 0x8EEA7D2: readwrite_data (transfer.c:709)
           n1: 537886720 0x8EEB500: Curl_readwrite (transfer.c:1133)
            n1: 537886720 0x8ED365E: multi_runsingle (multi.c:2443)
             n1: 537886720 0x8ED3F84: curl_multi_perform (multi.c:2740)
              n1: 537886720 0x8EC2C87: easy_transfer (easy.c:679)
               n1: 537886720 0x8EC2F0C: easy_perform (easy.c:769)
                n1: 537886720 0x8EC2F77: curl_easy_perform (easy.c:788)
                 n1: 537886720 0x8DBC890: Aws::Http::CurlHttpClient::MakeRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const (CurlHttpClient.cpp:865)
                  n1: 537886720 0x8E39C05: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}::operator()() const (AWSClient.cpp:567)
                   n1: 537886720 0x8E50CAE: std::shared_ptr<Aws::Http::HttpResponse> std::__invoke_impl<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(std::__invoke_other, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:61)
                    n1: 537886720 0x8E4D824: std::enable_if<std::__and_<std::__not_<std::is_void<std::shared_ptr<Aws::Http::HttpResponse> > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>::type, std::shared_ptr<Aws::Http::HttpResponse> > >::value, std::shared_ptr<Aws::Http::HttpResponse> >::type std::__invoke_r<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:143)
                     n1: 537886720 0x8E49C3A: std::_Function_handler<std::shared_ptr<Aws::Http::HttpResponse> (), Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                      n1: 537886720 0x8E7D9D3: std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>::operator()() const (std_function.h:590)
                       n1: 537886720 0x8E6E006: std::shared_ptr<Aws::Http::HttpResponse> smithy::components::tracing::TracingUtils::MakeCallWithTiming<std::shared_ptr<Aws::Http::HttpResponse> >(std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                        n1: 537886720 0x8E3A8B0: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:571)
                         n1: 537886720 0x8E3631B: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:293)
                          n1: 537886720 0x8E3C045: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:665)
                           n1: 537886720 0x8E3C533: Aws::Client::AWSClient::MakeRequestWithUnparsedResponse(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:715)
                            n1: 537886720 0x8C66920: Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}::operator()() const (S3Client.cpp:2251)
                             n1: 537886720 0x8CE9E6C: Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:61)
                              n0: 537886720 0x8CD9B3A: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>, Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&>(Aws::S3::S3Client::GetObject(Aws::S3::Model::GetObjectRequest const&) const::{lambda()#1}&) (invoke.h:143)
     n0: 79968 in 2 places, all below massif's threshold (1.00%)
 n1: 363148256 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 363148256 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 362928792 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 341284248 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 341284248 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n8: 233212332 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 39605340 in 6 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 35200992 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 35200992 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 35200992 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 35200992 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 35200992 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 35200992 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 35200992 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 35200992 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 35200992 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 35200992 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 35200992 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 35200992 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 32000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 32000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 32000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 32000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 32000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 32000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 32000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 32000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 32000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 32000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 32000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 32000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 3200480 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
       n1: 17601008 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 17601008 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 17601008 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 17601008 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 17601008 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 17601008 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 17601008 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 17601008 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 17601008 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 17601008 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 17601008 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 17601008 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 16000512 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 16000512 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 16000512 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 16000512 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 16000512 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 16000512 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 16000512 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 16000512 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 16000512 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 16000512 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 16000512 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 16000512 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 1600496 in 2 places, all below massif's threshold (1.00%)
      n1: 108071916 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 108071916 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 108071916 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 108071916 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 108071916 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 108071916 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 108071916 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 108071916 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 108071916 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 108071916 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 108071916 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 108071916 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 108071916 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 108071916 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 98240712 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 98240712 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 98240712 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 98240712 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 98240712 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 98240712 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 98240712 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 98240712 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 98240712 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 98240712 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 98240712 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n1: 9831204 0x7741D46: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1626)
                     n1: 9831204 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                      n1: 9831204 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 9831204 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 9831204 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 9831204 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 9831204 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 9831204 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 9831204 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 9831204 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 9831204 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 21206272 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 21206272 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 21206272 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 21206272 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 21206272 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 21206272 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 21206272 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 21206272 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 21206272 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 21206272 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 21206272 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 21206272 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 21206272 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 21206272 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 21206272 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 21206272 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 21206272 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 21206272 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 21206272 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 21206272 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 21206272 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 21206272 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 21206272 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 21206272 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 21206272 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 21206272 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 21206272 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 438272 in 2 places, all below massif's threshold (1.00%)
   n0: 219464 in 1 place, below massif's threshold (1.00%)
 n0: 33385804 in 1127 places, all below massif's threshold (1.00%)
#-----------
snapshot=83
#-----------
time=2299038945922
mem_heap_B=1237131437
mem_heap_extra_B=1131235
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=84
#-----------
time=2301913868915
mem_heap_B=1008656665
mem_heap_extra_B=1129479
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=85
#-----------
time=2304718830234
mem_heap_B=1008660729
mem_heap_extra_B=1129503
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=86
#-----------
time=2307389081158
mem_heap_B=698210585
mem_heap_extra_B=1070887
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=87
#-----------
time=2315079401501
mem_heap_B=698210712
mem_heap_extra_B=1070960
mem_stacks_B=0
heap_tree=empty
