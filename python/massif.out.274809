desc: (none)
cmd: python test_mem_finalize.py
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=90832276151
mem_heap_B=24282355
mem_heap_extra_B=990037
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=2
#-----------
time=217681240278
mem_heap_B=25181505
mem_heap_extra_B=1000719
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=3
#-----------
time=315246711014
mem_heap_B=23448702
mem_heap_extra_B=995170
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=4
#-----------
time=436549477465
mem_heap_B=24765502
mem_heap_extra_B=998898
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=5
#-----------
time=582967399760
mem_heap_B=25418630
mem_heap_extra_B=1023826
mem_stacks_B=0
heap_tree=detailed
n15: 25418630 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n0: 4899850 in 1146 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n3: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n2: 368912 0x274684: r_object (marshal.c:1215)
           n2: 368912 0x274241: r_object (marshal.c:1391)
            n1: 345437 0x27477A: r_object (marshal.c:1215)
             n2: 345437 0x274241: r_object (marshal.c:1391)
              n2: 344100 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 342003 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 342003 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 342003 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 342003 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 342003 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 342003 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 342003 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n2: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 338312 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 338312 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 338312 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 338312 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 338312 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 338312 in 4 places, all below massif's threshold (1.00%)
                                                            n0: 3691 in 1 place, below massif's threshold (1.00%)
               n0: 2097 in 1 place, below massif's threshold (1.00%)
              n0: 1337 in 2 places, all below massif's threshold (1.00%)
            n0: 23475 in 7 places, all below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 179014 in 5 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n5: 2991911 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n3: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n2: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n1: 396288 0x921EAB4: parse_array (cJSON.c:1529)
         n1: 396288 0x921E693: parse_value (cJSON.c:1382)
          n1: 396288 0x921F015: parse_object (cJSON.c:1710)
           n2: 396288 0x921E6DD: parse_value (cJSON.c:1387)
            n1: 338688 0x921EAB4: parse_array (cJSON.c:1529)
             n1: 338688 0x921E693: parse_value (cJSON.c:1382)
              n1: 338688 0x921F015: parse_object (cJSON.c:1710)
               n2: 338688 0x921E6DD: parse_value (cJSON.c:1387)
                n1: 334208 0x921EAB4: parse_array (cJSON.c:1529)
                 n1: 334208 0x921E693: parse_value (cJSON.c:1382)
                  n1: 334208 0x921F015: parse_object (cJSON.c:1710)
                   n2: 334208 0x921E6DD: parse_value (cJSON.c:1387)
                    n1: 318336 0x921EAB4: parse_array (cJSON.c:1529)
                     n1: 318336 0x921E693: parse_value (cJSON.c:1382)
                      n1: 318336 0x921F015: parse_object (cJSON.c:1710)
                       n2: 318336 0x921E6DD: parse_value (cJSON.c:1387)
                        n1: 296832 0x921EAB4: parse_array (cJSON.c:1529)
                         n1: 296832 0x921E693: parse_value (cJSON.c:1382)
                          n1: 296832 0x921F015: parse_object (cJSON.c:1710)
                           n2: 296832 0x921E6DD: parse_value (cJSON.c:1387)
                            n1: 266368 0x921EAB4: parse_array (cJSON.c:1529)
                             n1: 266368 0x921E693: parse_value (cJSON.c:1382)
                              n0: 266368 0x921F015: parse_object (cJSON.c:1710)
                            n0: 30464 in 1 place, below massif's threshold (1.00%)
                        n0: 21504 in 1 place, below massif's threshold (1.00%)
                    n0: 15872 in 1 place, below massif's threshold (1.00%)
                n0: 4480 in 1 place, below massif's threshold (1.00%)
            n0: 57600 in 2 places, all below massif's threshold (1.00%)
        n0: 74496 in 2 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n1: 283408 0x91E4FDF: aws_array_list_init_dynamic (array_list.inl:36)
     n0: 283408 in 4 places, all below massif's threshold (1.00%)
    n0: 33801 in 16 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n1: 722160 0x8E8BCAC: Aws::External::tinyxml2::MemPoolT<120>::Block* Aws::New<Aws::External::tinyxml2::MemPoolT<120>::Block>(char const*) (AWSMemory.h:70)
   n1: 722160 0x8E80B77: Aws::External::tinyxml2::MemPoolT<120>::Alloc() (tinyxml2.h:383)
    n2: 722160 0x8E704F1: Aws::External::tinyxml2::XMLElement* Aws::External::tinyxml2::XMLDocument::CreateUnlinkedNode<Aws::External::tinyxml2::XMLElement, 120>(Aws::External::tinyxml2::MemPoolT<120>&) (tinyxml2.h:1908)
     n1: 722160 0x8E22F59: Aws::External::tinyxml2::XMLDocument::Identify(char*, Aws::External::tinyxml2::XMLNode**) (tinyxml2.cpp:720)
      n2: 722160 0x8E2388F: Aws::External::tinyxml2::XMLNode::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1022)
       n1: 718080 0x8E25FF3: Aws::External::tinyxml2::XMLElement::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1919)
        n1: 718080 0x8E238DD: Aws::External::tinyxml2::XMLNode::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1031)
         n1: 718080 0x8E25FF3: Aws::External::tinyxml2::XMLElement::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1919)
          n2: 718080 0x8E238DD: Aws::External::tinyxml2::XMLNode::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1031)
           n1: 718080 0x8E25FF3: Aws::External::tinyxml2::XMLElement::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1919)
            n1: 718080 0x8E238DD: Aws::External::tinyxml2::XMLNode::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1031)
             n1: 718080 0x8E271F9: Aws::External::tinyxml2::XMLDocument::Parse() (tinyxml2.cpp:2374)
              n1: 718080 0x8E26D3B: Aws::External::tinyxml2::XMLDocument::Parse(char const*, unsigned long) (tinyxml2.cpp:2286)
               n1: 718080 0x8E39814: Aws::Utils::Xml::XmlDocument::CreateFromXmlString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (XmlSerializer.cpp:297)
                n2: 718080 0x8E3978E: Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(std::iostream&) (XmlSerializer.cpp:290)
                 n1: 718080 0x8E487E6: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}::operator()() const (AWSXmlClient.cpp:117)
                  n1: 718080 0x8E565D8: Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > std::__invoke_impl<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> >, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>(std::__invoke_other, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&) (invoke.h:61)
                   n1: 718080 0x8E538F7: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>::type, Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > > >::value, Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > >::type std::__invoke_r<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> >, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>(Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&) (invoke.h:143)
                    n1: 718080 0x8E4F8BD: std::_Function_handler<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > (), Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                     n1: 718080 0x8E84C35: std::function<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > ()>::operator()() const (std_function.h:590)
                      n1: 718080 0x8E76371: Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > >(std::function<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                       n1: 718080 0x8E49189: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:130)
                        n1: 718080 0x8E48541: Aws::Client::AWSXMLClient::MakeRequest(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:68)
                         n1: 718080 0x8C8A353: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}::operator()() const (S3Client.cpp:3095)
                          n1: 718080 0x8CF13C8: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:61)
                           n1: 718080 0x8CE2D26: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:143)
                            n1: 718080 0x8CD0672: std::_Function_handler<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> (), Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                             n1: 718080 0x8D43AFB: std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>::operator()() const (std_function.h:590)
                              n0: 718080 0x8D2D9D7: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >(std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                 n0: 0 in 1 place, below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
       n0: 4080 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
  n1: 564480 0x8E8BBF4: Aws::External::tinyxml2::MemPoolT<112>::Block* Aws::New<Aws::External::tinyxml2::MemPoolT<112>::Block>(char const*) (AWSMemory.h:70)
   n1: 564480 0x8E80A39: Aws::External::tinyxml2::MemPoolT<112>::Alloc() (tinyxml2.h:383)
    n2: 564480 0x8E703F1: Aws::External::tinyxml2::XMLText* Aws::External::tinyxml2::XMLDocument::CreateUnlinkedNode<Aws::External::tinyxml2::XMLText, 112>(Aws::External::tinyxml2::MemPoolT<112>&) (tinyxml2.h:1908)
     n1: 564480 0x8E22F8F: Aws::External::tinyxml2::XMLDocument::Identify(char*, Aws::External::tinyxml2::XMLNode**) (tinyxml2.cpp:725)
      n1: 564480 0x8E2388F: Aws::External::tinyxml2::XMLNode::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1022)
       n1: 564480 0x8E25FF3: Aws::External::tinyxml2::XMLElement::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1919)
        n1: 564480 0x8E238DD: Aws::External::tinyxml2::XMLNode::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1031)
         n1: 564480 0x8E25FF3: Aws::External::tinyxml2::XMLElement::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1919)
          n2: 564480 0x8E238DD: Aws::External::tinyxml2::XMLNode::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1031)
           n1: 560448 0x8E25FF3: Aws::External::tinyxml2::XMLElement::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1919)
            n1: 560448 0x8E238DD: Aws::External::tinyxml2::XMLNode::ParseDeep(char*, Aws::External::tinyxml2::StrPair*, int*) (tinyxml2.cpp:1031)
             n1: 560448 0x8E271F9: Aws::External::tinyxml2::XMLDocument::Parse() (tinyxml2.cpp:2374)
              n1: 560448 0x8E26D3B: Aws::External::tinyxml2::XMLDocument::Parse(char const*, unsigned long) (tinyxml2.cpp:2286)
               n1: 560448 0x8E39814: Aws::Utils::Xml::XmlDocument::CreateFromXmlString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (XmlSerializer.cpp:297)
                n2: 560448 0x8E3978E: Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(std::iostream&) (XmlSerializer.cpp:290)
                 n1: 560448 0x8E487E6: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}::operator()() const (AWSXmlClient.cpp:117)
                  n1: 560448 0x8E565D8: Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > std::__invoke_impl<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> >, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>(std::__invoke_other, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&) (invoke.h:61)
                   n1: 560448 0x8E538F7: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>::type, Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > > >::value, Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > >::type std::__invoke_r<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> >, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>(Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&) (invoke.h:143)
                    n1: 560448 0x8E4F8BD: std::_Function_handler<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > (), Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                     n1: 560448 0x8E84C35: std::function<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > ()>::operator()() const (std_function.h:590)
                      n1: 560448 0x8E76371: Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > >(std::function<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                       n1: 560448 0x8E49189: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:130)
                        n2: 560448 0x8E48541: Aws::Client::AWSXMLClient::MakeRequest(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:68)
                         n1: 560448 0x8C8A353: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}::operator()() const (S3Client.cpp:3095)
                          n1: 560448 0x8CF13C8: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:61)
                           n1: 560448 0x8CE2D26: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:143)
                            n1: 560448 0x8CD0672: std::_Function_handler<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> (), Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                             n1: 560448 0x8D43AFB: std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>::operator()() const (std_function.h:590)
                              n0: 560448 0x8D2D9D7: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >(std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                         n0: 0 in 1 place, below massif's threshold (1.00%)
                 n0: 0 in 2 places, all below massif's threshold (1.00%)
           n0: 4032 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
  n2: 312380 0x8DDBEEB: char* Aws::NewArray<char>(unsigned long, char const*) (AWSMemory.h:166)
   n1: 312146 0x8E26CF1: Aws::External::tinyxml2::XMLDocument::Parse(char const*, unsigned long) (tinyxml2.cpp:2282)
    n1: 312146 0x8E39814: Aws::Utils::Xml::XmlDocument::CreateFromXmlString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (XmlSerializer.cpp:297)
     n2: 312146 0x8E3978E: Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(std::iostream&) (XmlSerializer.cpp:290)
      n1: 312146 0x8E487E6: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}::operator()() const (AWSXmlClient.cpp:117)
       n1: 312146 0x8E565D8: Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > std::__invoke_impl<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> >, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>(std::__invoke_other, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&) (invoke.h:61)
        n1: 312146 0x8E538F7: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>::type, Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > > >::value, Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > >::type std::__invoke_r<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> >, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>(Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&) (invoke.h:143)
         n1: 312146 0x8E4F8BD: std::_Function_handler<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > (), Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
          n1: 312146 0x8E84C35: std::function<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > ()>::operator()() const (std_function.h:590)
           n1: 312146 0x8E76371: Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > >(std::function<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
            n1: 312146 0x8E49189: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:130)
             n2: 312146 0x8E48541: Aws::Client::AWSXMLClient::MakeRequest(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:68)
              n1: 312146 0x8C8A353: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}::operator()() const (S3Client.cpp:3095)
               n1: 312146 0x8CF13C8: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:61)
                n1: 312146 0x8CE2D26: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:143)
                 n1: 312146 0x8CD0672: std::_Function_handler<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> (), Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                  n1: 312146 0x8D43AFB: std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>::operator()() const (std_function.h:590)
                   n1: 312146 0x8D2D9D7: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >(std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                    n1: 312146 0x8C8B325: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const (S3Client.cpp:3099)
                     n1: 312146 0x7B8E86A: arcticdb::storage::s3::RealS3Client::list_objects(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) const (s3_real_client.cpp:211)
                      n1: 312146 0x7B9EE4F: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:330)
                       n1: 312146 0x7B9E118: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:76)
                        n1: 312146 0x74B4152: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:178)
                         n1: 312146 0x74B51AC: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:107)
                          n1: 312146 0x74B6881: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                           n2: 312146 0x750614B: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:215)
                            n1: 312146 0x7BAFA02: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                             n1: 312146 0x7BA93FF: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
                              n0: 312146 0x7BA7658: arcticdb::get_incomplete(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::variant<std::monostate, arcticdb::entity::IndexRange, arcticdb::pipelines::RowRange> const&, unsigned long, bool, bool) (append_map.cpp:294)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
              n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 0 in 2 places, all below massif's threshold (1.00%)
   n0: 234 in 2 places, all below massif's threshold (1.00%)
  n0: 13488 in 23 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n4: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 448400 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 448400 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 442736 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 442736 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 442736 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 442736 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 442736 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 442736 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 442736 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 442736 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                     n0: 5664 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 115168 in 2 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:2743)
          n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3155)
           n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3178)
            n2: 425784 0x28B5FB: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 307576 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n1: 307576 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n0: 307576 in 5 places, all below massif's threshold (1.00%)
             n0: 118208 in 3 places, all below massif's threshold (1.00%)
         n0: 249504 in 7 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n3: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n1: 376980 0x920D75B: thread_fn (thread.c:161)
       n1: 376980 0x4A2DAC2: start_thread (pthread_create.c:442)
        n0: 376980 0x4ABEA03: clone (clone.S:100)
      n0: 54928 in 5 places, all below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n3: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n1: 431253 0x2B11DB: UnknownInlinedFun (unicodeobject.c:10402)
         n1: 431253 0x2B11DB: unicode_join.lto_priv.0 (unicodeobject.c:12779)
          n1: 431253 0x29E78A: method_vectorcall_O.lto_priv.0 (descrobject.c:460)
           n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:114)
            n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:123)
             n1: 431253 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
              n1: 431253 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
               n0: 431253 in 2 places, all below massif's threshold (1.00%)
        n1: 359305 0x2B12D5: PyUnicode_Join (unicodeobject.c:10402)
         n1: 359305 0x3B846E: pattern_subx.lto_priv.0 (_sre.c:1205)
          n1: 359305 0x3B7F37: UnknownInlinedFun (_sre.c:1244)
           n1: 359305 0x3B7F37: _sre_SRE_Pattern_sub.lto_priv.0 (_sre.c.h:680)
            n1: 359305 0x328763: method_vectorcall_FASTCALL_KEYWORDS_METHOD.lto_priv.0 (descrobject.c:365)
             n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:114)
              n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:123)
               n1: 359305 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                n1: 359305 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                 n1: 359305 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                  n1: 359305 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                   n2: 359305 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                    n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 336581 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n2: 336581 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 336581 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 336581 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n2: 336581 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                            n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                             n1: 332119 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                              n1: 332119 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                               n0: 332119 in 4 places, all below massif's threshold (1.00%)
                           n0: 4462 in 1 place, below massif's threshold (1.00%)
                        n0: 0 in 3 places, all below massif's threshold (1.00%)
                    n0: 22724 in 1 place, below massif's threshold (1.00%)
        n0: 13804 in 1 place, below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n2: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 479390 in 4 places, all below massif's threshold (1.00%)
       n1: 272333 0x2A30D0: UnknownInlinedFun (unicodeobject.c:14401)
        n1: 272333 0x2A30D0: UnknownInlinedFun (unicode_format.h:931)
         n2: 272333 0x2A30D0: do_string_format.lto_priv.0 (unicode_format.h:957)
          n1: 270275 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
           n0: 270275 in 2 places, all below massif's threshold (1.00%)
          n0: 2058 in 1 place, below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n2: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3141)
         n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3178)
          n2: 388280 0x28A2C1: type_new.lto_priv.0 (typeobject.c:3327)
           n1: 316672 0x289A96: UnknownInlinedFun (typeobject.c:1123)
            n1: 316672 0x289A96: _PyObject_MakeTpCall (call.c:215)
             n0: 316672 in 9 places, all below massif's threshold (1.00%)
           n0: 71608 in 2 places, all below massif's threshold (1.00%)
        n0: 181536 in 5 places, all below massif's threshold (1.00%)
 n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:99)
  n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:572)
   n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1981)
    n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1974)
     n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:685)
      n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:2885)
       n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3074)
        n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3183)
         n2: 397127 0x28BC7F: type_new.lto_priv.0 (typeobject.c:3327)
          n1: 356016 0x289A96: UnknownInlinedFun (typeobject.c:1123)
           n2: 356016 0x289A96: _PyObject_MakeTpCall (call.c:215)
            n1: 314925 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
             n1: 314925 0x287083: UnknownInlinedFun (call.c:166)
              n1: 314925 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
               n1: 314925 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                 n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                  n1: 314925 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                   n2: 314925 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                    n1: 312609 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 312609 0x362E55: _PyEval_Vector (ceval.c:5067)
                      n2: 312609 0x362D25: PyEval_EvalCode (ceval.c:1134)
                       n1: 311120 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                        n1: 311120 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                         n1: 311120 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                          n1: 311120 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                           n1: 311120 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                            n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:114)
                                n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:123)
                                 n1: 311120 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                  n1: 311120 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                   n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                       n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                        n1: 311120 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                         n1: 311120 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                          n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                     n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                      n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                       n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                        n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                         n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                          n2: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                           n1: 307477 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                            n1: 307477 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                             n1: 307477 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                              n1: 307477 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                               n1: 307477 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                n0: 307477 in 4 places, all below massif's threshold (1.00%)
                                                           n0: 3643 in 1 place, below massif's threshold (1.00%)
                       n0: 1489 in 1 place, below massif's threshold (1.00%)
                    n0: 2316 in 1 place, below massif's threshold (1.00%)
            n0: 41091 in 12 places, all below massif's threshold (1.00%)
          n0: 41111 in 1 place, below massif's threshold (1.00%)
 n1: 347896 0x4713D94A: _upb_Arena_SlowMalloc_dont_copy_me__upb_internal_use_only (in /home/alex/venvs/310/lib/python3.10/site-packages/google/_upb/_message.abi3.so)
  n0: 347896 in 30 places, all below massif's threshold (1.00%)
 n1: 296128 0x40DADD5D: arrow::compute::KernelSignature::Make(std::vector<arrow::compute::InputType, std::allocator<arrow::compute::InputType> >, arrow::compute::OutputType, bool) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/libarrow.so.1801)
  n0: 296128 in 200 places, all below massif's threshold (1.00%)
 n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:99)
  n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:572)
   n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1981)
    n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1974)
     n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:685)
      n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:126)
       n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:159)
        n2: 291693 0x275606: PyBytes_FromStringAndSize (bytesobject.c:139)
         n2: 289484 0x273E97: r_object (marshal.c:1110)
          n2: 286739 0x27422C: r_object (marshal.c:1388)
           n1: 264441 0x27477A: r_object (marshal.c:1215)
            n1: 264441 0x274241: r_object (marshal.c:1391)
             n0: 264441 in 5 places, all below massif's threshold (1.00%)
           n0: 22298 in 7 places, all below massif's threshold (1.00%)
          n0: 2745 in 3 places, all below massif's threshold (1.00%)
         n0: 2209 in 7 places, all below massif's threshold (1.00%)
 n1: 266967 0x85220C1: CRYPTO_malloc (mem.c:202)
  n0: 266967 in 41 places, all below massif's threshold (1.00%)
#-----------
snapshot=6
#-----------
time=677984182596
mem_heap_B=25354695
mem_heap_extra_B=1007097
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=7
#-----------
time=843545798540
mem_heap_B=25182153
mem_heap_extra_B=1011551
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=8
#-----------
time=951068261291
mem_heap_B=25737660
mem_heap_extra_B=1016708
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=9
#-----------
time=1087921125963
mem_heap_B=25783606
mem_heap_extra_B=1043786
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=10
#-----------
time=1235757740961
mem_heap_B=24877579
mem_heap_extra_B=1023797
mem_stacks_B=0
heap_tree=detailed
n18: 24877579 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n3: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n2: 368912 0x274684: r_object (marshal.c:1215)
           n2: 368912 0x274241: r_object (marshal.c:1391)
            n1: 345437 0x27477A: r_object (marshal.c:1215)
             n2: 345437 0x274241: r_object (marshal.c:1391)
              n2: 344100 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 342003 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 342003 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 342003 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 342003 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 342003 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 342003 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 342003 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n2: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 338312 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 338312 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 338312 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 338312 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n2: 338312 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 259261 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 259261 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 259261 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 259261 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 259261 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 259261 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 259261 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 259261 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 259261 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 259261 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n0: 79051 in 3 places, all below massif's threshold (1.00%)
                                                            n0: 3691 in 1 place, below massif's threshold (1.00%)
               n0: 2097 in 1 place, below massif's threshold (1.00%)
              n0: 1337 in 2 places, all below massif's threshold (1.00%)
            n0: 23475 in 7 places, all below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 179014 in 5 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n0: 4306406 in 1143 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n4: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 448400 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 448400 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 442736 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 442736 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 442736 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 442736 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 442736 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 442736 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 442736 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 442736 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                     n0: 5664 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 115168 in 2 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:2743)
          n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3155)
           n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3178)
            n2: 425784 0x28B5FB: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 307576 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n1: 307576 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n0: 307576 in 5 places, all below massif's threshold (1.00%)
             n0: 118208 in 3 places, all below massif's threshold (1.00%)
         n0: 249504 in 7 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n3: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n1: 376980 0x920D75B: thread_fn (thread.c:161)
       n1: 376980 0x4A2DAC2: start_thread (pthread_create.c:442)
        n0: 376980 0x4ABEA03: clone (clone.S:100)
      n0: 54928 in 5 places, all below massif's threshold (1.00%)
 n2: 1382107 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n3: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n2: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n1: 396288 0x921EAB4: parse_array (cJSON.c:1529)
         n1: 396288 0x921E693: parse_value (cJSON.c:1382)
          n1: 396288 0x921F015: parse_object (cJSON.c:1710)
           n2: 396288 0x921E6DD: parse_value (cJSON.c:1387)
            n1: 338688 0x921EAB4: parse_array (cJSON.c:1529)
             n1: 338688 0x921E693: parse_value (cJSON.c:1382)
              n1: 338688 0x921F015: parse_object (cJSON.c:1710)
               n2: 338688 0x921E6DD: parse_value (cJSON.c:1387)
                n1: 334208 0x921EAB4: parse_array (cJSON.c:1529)
                 n1: 334208 0x921E693: parse_value (cJSON.c:1382)
                  n1: 334208 0x921F015: parse_object (cJSON.c:1710)
                   n2: 334208 0x921E6DD: parse_value (cJSON.c:1387)
                    n1: 318336 0x921EAB4: parse_array (cJSON.c:1529)
                     n1: 318336 0x921E693: parse_value (cJSON.c:1382)
                      n1: 318336 0x921F015: parse_object (cJSON.c:1710)
                       n2: 318336 0x921E6DD: parse_value (cJSON.c:1387)
                        n1: 296832 0x921EAB4: parse_array (cJSON.c:1529)
                         n1: 296832 0x921E693: parse_value (cJSON.c:1382)
                          n1: 296832 0x921F015: parse_object (cJSON.c:1710)
                           n2: 296832 0x921E6DD: parse_value (cJSON.c:1387)
                            n1: 266368 0x921EAB4: parse_array (cJSON.c:1529)
                             n1: 266368 0x921E693: parse_value (cJSON.c:1382)
                              n0: 266368 0x921F015: parse_object (cJSON.c:1710)
                            n0: 30464 in 1 place, below massif's threshold (1.00%)
                        n0: 21504 in 1 place, below massif's threshold (1.00%)
                    n0: 15872 in 1 place, below massif's threshold (1.00%)
                n0: 4480 in 1 place, below massif's threshold (1.00%)
            n0: 57600 in 2 places, all below massif's threshold (1.00%)
        n0: 74496 in 2 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n1: 283408 0x91E4FDF: aws_array_list_init_dynamic (array_list.inl:36)
     n0: 283408 in 4 places, all below massif's threshold (1.00%)
    n0: 33801 in 16 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 2704 in 26 places, all below massif's threshold (1.00%)
 n1: 1137909 0x5997DE4: __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1137909 0x596D396: allocate (allocator.h:185)
   n2: 1137909 0x596D396: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:464)
    n3: 1137909 0x5982515: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:153)
     n2: 531713 0x596D201: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long) (basic_string.tcc:291)
      n2: 524289 0xAAB3952: std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
       n2: 524289 0xAABB88A: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
        n1: 524289 0xAAAD375: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
         n1: 524289 0x8DBDFFC: WriteData(char*, unsigned long, unsigned long, void*) (CurlHttpClient.cpp:226)
          n1: 524289 0x8EDF6A4: chop_write (sendf.c:321)
           n1: 524289 0x8EDFA49: Curl_client_write (sendf.c:415)
            n1: 524289 0x8EEF7D2: readwrite_data (transfer.c:709)
             n1: 524289 0x8EF0500: Curl_readwrite (transfer.c:1133)
              n1: 524289 0x8ED865E: multi_runsingle (multi.c:2443)
               n1: 524289 0x8ED8F84: curl_multi_perform (multi.c:2740)
                n1: 524289 0x8EC7C87: easy_transfer (easy.c:679)
                 n1: 524289 0x8EC7F0C: easy_perform (easy.c:769)
                  n1: 524289 0x8EC7F77: curl_easy_perform (easy.c:788)
                   n1: 524289 0x8DC1890: Aws::Http::CurlHttpClient::MakeRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const (CurlHttpClient.cpp:865)
                    n1: 524289 0x8E3EC05: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}::operator()() const (AWSClient.cpp:567)
                     n1: 524289 0x8E55CAE: std::shared_ptr<Aws::Http::HttpResponse> std::__invoke_impl<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(std::__invoke_other, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:61)
                      n1: 524289 0x8E52824: std::enable_if<std::__and_<std::__not_<std::is_void<std::shared_ptr<Aws::Http::HttpResponse> > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>::type, std::shared_ptr<Aws::Http::HttpResponse> > >::value, std::shared_ptr<Aws::Http::HttpResponse> >::type std::__invoke_r<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:143)
                       n1: 524289 0x8E4EC3A: std::_Function_handler<std::shared_ptr<Aws::Http::HttpResponse> (), Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                        n1: 524289 0x8E829D3: std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>::operator()() const (std_function.h:590)
                         n1: 524289 0x8E73006: std::shared_ptr<Aws::Http::HttpResponse> smithy::components::tracing::TracingUtils::MakeCallWithTiming<std::shared_ptr<Aws::Http::HttpResponse> >(std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                          n1: 524289 0x8E3F8B0: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:571)
                           n1: 524289 0x8E3B31B: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:293)
                            n1: 524289 0x8E48B5F: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:101)
                             n2: 524289 0x8E48541: Aws::Client::AWSXMLClient::MakeRequest(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:68)
                              n1: 524289 0x8C8A353: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}::operator()() const (S3Client.cpp:3095)
                               n0: 524289 0x8CF13C8: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:61)
                              n0: 0 in 1 place, below massif's threshold (1.00%)
        n0: 0 in 2 places, all below massif's threshold (1.00%)
       n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 7424 in 8 places, all below massif's threshold (1.00%)
     n1: 491521 0x8DCD137: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::input_iterator_tag) (basic_string.tcc:184)
      n1: 491521 0x8DCCAD6: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::__false_type) (basic_string.h:255)
       n1: 491521 0x8DCC2FA: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >) (basic_string.h:274)
        n1: 491521 0x8DCBA78: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::istreambuf_iterator<char, std::char_traits<char> >, void>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::allocator<char> const&) (basic_string.h:641)
         n2: 491521 0x8E3976F: Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(std::iostream&) (XmlSerializer.cpp:289)
          n1: 491521 0x8E487E6: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}::operator()() const (AWSXmlClient.cpp:117)
           n1: 491521 0x8E565D8: Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > std::__invoke_impl<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> >, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>(std::__invoke_other, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&) (invoke.h:61)
            n1: 491521 0x8E538F7: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>::type, Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > > >::value, Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > >::type std::__invoke_r<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> >, Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&>(Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}&) (invoke.h:143)
             n1: 491521 0x8E4F8BD: std::_Function_handler<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > (), Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const::{lambda()#2}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
              n1: 491521 0x8E84C35: std::function<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > ()>::operator()() const (std_function.h:590)
               n1: 491521 0x8E76371: Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > >(std::function<Aws::Utils::Outcome<Aws::AmazonWebServiceResult<Aws::Utils::Xml::XmlDocument>, Aws::Client::AWSError<Aws::Client::CoreErrors> > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                n1: 491521 0x8E49189: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:130)
                 n2: 491521 0x8E48541: Aws::Client::AWSXMLClient::MakeRequest(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:68)
                  n1: 491521 0x8C8A353: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}::operator()() const (S3Client.cpp:3095)
                   n1: 491521 0x8CF13C8: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:61)
                    n1: 491521 0x8CE2D26: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:143)
                     n1: 491521 0x8CD0672: std::_Function_handler<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> (), Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                      n1: 491521 0x8D43AFB: std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>::operator()() const (std_function.h:590)
                       n1: 491521 0x8D2D9D7: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >(std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                        n1: 491521 0x8C8B325: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const (S3Client.cpp:3099)
                         n1: 491521 0x7B8E86A: arcticdb::storage::s3::RealS3Client::list_objects(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) const (s3_real_client.cpp:211)
                          n1: 491521 0x7B9EE4F: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:330)
                           n1: 491521 0x7B9E118: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:76)
                            n1: 491521 0x74B4152: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:178)
                             n1: 491521 0x74B51AC: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:107)
                              n1: 491521 0x74B6881: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                               n0: 491521 0x750614B: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:215)
                  n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 0 in 2 places, all below massif's threshold (1.00%)
     n0: 114675 in 8 places, all below massif's threshold (1.00%)
    n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n3: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n1: 431253 0x2B11DB: UnknownInlinedFun (unicodeobject.c:10402)
         n1: 431253 0x2B11DB: unicode_join.lto_priv.0 (unicodeobject.c:12779)
          n1: 431253 0x29E78A: method_vectorcall_O.lto_priv.0 (descrobject.c:460)
           n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:114)
            n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:123)
             n1: 431253 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
              n1: 431253 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
               n0: 431253 in 2 places, all below massif's threshold (1.00%)
        n1: 359305 0x2B12D5: PyUnicode_Join (unicodeobject.c:10402)
         n1: 359305 0x3B846E: pattern_subx.lto_priv.0 (_sre.c:1205)
          n1: 359305 0x3B7F37: UnknownInlinedFun (_sre.c:1244)
           n1: 359305 0x3B7F37: _sre_SRE_Pattern_sub.lto_priv.0 (_sre.c.h:680)
            n1: 359305 0x328763: method_vectorcall_FASTCALL_KEYWORDS_METHOD.lto_priv.0 (descrobject.c:365)
             n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:114)
              n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:123)
               n1: 359305 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                n1: 359305 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                 n1: 359305 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                  n1: 359305 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                   n2: 359305 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                    n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 336581 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n2: 336581 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 336581 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 336581 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n2: 336581 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                            n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                             n1: 332119 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                              n1: 332119 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                               n0: 332119 in 4 places, all below massif's threshold (1.00%)
                           n0: 4462 in 1 place, below massif's threshold (1.00%)
                        n0: 0 in 3 places, all below massif's threshold (1.00%)
                    n0: 22724 in 1 place, below massif's threshold (1.00%)
        n0: 13804 in 1 place, below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n2: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 479390 in 4 places, all below massif's threshold (1.00%)
       n1: 272333 0x2A30D0: UnknownInlinedFun (unicodeobject.c:14401)
        n1: 272333 0x2A30D0: UnknownInlinedFun (unicode_format.h:931)
         n2: 272333 0x2A30D0: do_string_format.lto_priv.0 (unicode_format.h:957)
          n1: 270275 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
           n0: 270275 in 2 places, all below massif's threshold (1.00%)
          n0: 2058 in 1 place, below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n2: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3141)
         n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3178)
          n2: 388280 0x28A2C1: type_new.lto_priv.0 (typeobject.c:3327)
           n1: 316672 0x289A96: UnknownInlinedFun (typeobject.c:1123)
            n2: 316672 0x289A96: _PyObject_MakeTpCall (call.c:215)
             n1: 259480 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
              n1: 259480 0x287083: UnknownInlinedFun (call.c:166)
               n1: 259480 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                n1: 259480 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                 n1: 259480 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                  n1: 259480 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                   n1: 259480 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                    n1: 259480 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                     n1: 259480 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 259480 0x362E55: _PyEval_Vector (ceval.c:5067)
                       n1: 259480 0x362D25: PyEval_EvalCode (ceval.c:1134)
                        n1: 259480 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                         n1: 259480 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                          n1: 259480 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                           n0: 259480 in 2 places, all below massif's threshold (1.00%)
             n0: 57192 in 8 places, all below massif's threshold (1.00%)
           n0: 71608 in 2 places, all below massif's threshold (1.00%)
        n0: 181536 in 5 places, all below massif's threshold (1.00%)
 n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:99)
  n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:572)
   n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1981)
    n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1974)
     n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:685)
      n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:2885)
       n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3074)
        n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3183)
         n2: 397127 0x28BC7F: type_new.lto_priv.0 (typeobject.c:3327)
          n1: 356016 0x289A96: UnknownInlinedFun (typeobject.c:1123)
           n2: 356016 0x289A96: _PyObject_MakeTpCall (call.c:215)
            n1: 314925 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
             n1: 314925 0x287083: UnknownInlinedFun (call.c:166)
              n1: 314925 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
               n1: 314925 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                 n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                  n1: 314925 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                   n2: 314925 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                    n1: 312609 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 312609 0x362E55: _PyEval_Vector (ceval.c:5067)
                      n2: 312609 0x362D25: PyEval_EvalCode (ceval.c:1134)
                       n1: 311120 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                        n1: 311120 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                         n1: 311120 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                          n1: 311120 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                           n1: 311120 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                            n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:114)
                                n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:123)
                                 n1: 311120 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                  n1: 311120 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                   n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                       n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                        n1: 311120 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                         n1: 311120 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                          n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                     n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                      n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                       n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                        n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                         n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                          n2: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                           n1: 307477 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                            n1: 307477 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                             n1: 307477 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                              n1: 307477 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                               n1: 307477 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                n0: 307477 in 4 places, all below massif's threshold (1.00%)
                                                           n0: 3643 in 1 place, below massif's threshold (1.00%)
                       n0: 1489 in 1 place, below massif's threshold (1.00%)
                    n0: 2316 in 1 place, below massif's threshold (1.00%)
            n0: 41091 in 12 places, all below massif's threshold (1.00%)
          n0: 41111 in 1 place, below massif's threshold (1.00%)
 n1: 347896 0x4713D94A: _upb_Arena_SlowMalloc_dont_copy_me__upb_internal_use_only (in /home/alex/venvs/310/lib/python3.10/site-packages/google/_upb/_message.abi3.so)
  n0: 347896 in 30 places, all below massif's threshold (1.00%)
 n1: 296128 0x40DADD5D: arrow::compute::KernelSignature::Make(std::vector<arrow::compute::InputType, std::allocator<arrow::compute::InputType> >, arrow::compute::OutputType, bool) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/libarrow.so.1801)
  n0: 296128 in 200 places, all below massif's threshold (1.00%)
 n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:99)
  n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:572)
   n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1981)
    n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1974)
     n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:685)
      n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:126)
       n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:159)
        n2: 291693 0x275606: PyBytes_FromStringAndSize (bytesobject.c:139)
         n2: 289484 0x273E97: r_object (marshal.c:1110)
          n2: 286739 0x27422C: r_object (marshal.c:1388)
           n1: 264441 0x27477A: r_object (marshal.c:1215)
            n1: 264441 0x274241: r_object (marshal.c:1391)
             n0: 264441 in 5 places, all below massif's threshold (1.00%)
           n0: 22298 in 7 places, all below massif's threshold (1.00%)
          n0: 2745 in 3 places, all below massif's threshold (1.00%)
         n0: 2209 in 7 places, all below massif's threshold (1.00%)
 n1: 266967 0x85220C1: CRYPTO_malloc (mem.c:202)
  n0: 266967 in 41 places, all below massif's threshold (1.00%)
 n1: 262144 0x35D97B: UnknownInlinedFun (obmalloc.c:1438)
  n1: 262144 0x35D97B: arena_map_mark_used.lto_priv.0 (obmalloc.c:1493)
   n1: 262144 0x257513: UnknownInlinedFun (obmalloc.c:1622)
    n1: 262144 0x257513: allocate_from_new_pool.lto_priv.0 (obmalloc.c:1802)
     n1: 262144 0x255496: UnknownInlinedFun (obmalloc.c:1966)
      n1: 262144 0x255496: UnknownInlinedFun (obmalloc.c:1976)
       n1: 262144 0x255496: UnknownInlinedFun (obmalloc.c:685)
        n1: 262144 0x255496: UnknownInlinedFun (longobject.c:138)
         n1: 262144 0x255496: UnknownInlinedFun (longobject.c:5771)
          n1: 262144 0x255496: UnknownInlinedFun (pylifecycle.c:661)
           n1: 262144 0x255496: pycore_interp_init.lto_priv.0 (pylifecycle.c:799)
            n1: 262144 0x3592C7: UnknownInlinedFun (pylifecycle.c:866)
             n1: 262144 0x3592C7: pyinit_core.constprop.0 (pylifecycle.c:1029)
              n1: 262144 0x359006: Py_InitializeFromConfig (pylifecycle.c:1219)
               n1: 262144 0x356E4F: pymain_init (main.c:66)
                n1: 262144 0x356D94: pymain_main.lto_priv.0 (main.c:687)
                 n1: 262144 0x356D6C: Py_BytesMain (main.c:720)
                  n0: 262144 0x49C2D8F: (below main) (libc_start_call_main.h:58)
 n1: 262144 0x47D1586F: CRYPTO_aligned_alloc (in /home/alex/venvs/310/lib/python3.10/site-packages/cryptography/hazmat/bindings/_rust.abi3.so)
  n1: 262144 0x47E95DDF: ossl_ht_new (in /home/alex/venvs/310/lib/python3.10/site-packages/cryptography/hazmat/bindings/_rust.abi3.so)
   n1: 262144 0x47D12DAA: ossl_namemap_new (in /home/alex/venvs/310/lib/python3.10/site-packages/cryptography/hazmat/bindings/_rust.abi3.so)
    n1: 262144 0x47D12DF8: ossl_stored_namemap_new (in /home/alex/venvs/310/lib/python3.10/site-packages/cryptography/hazmat/bindings/_rust.abi3.so)
     n0: 262144 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=11
#-----------
time=1354860387248
mem_heap_B=25742005
mem_heap_extra_B=1030835
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=12
#-----------
time=1438367238266
mem_heap_B=25252469
mem_heap_extra_B=1031755
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=1529632297252
mem_heap_B=25714887
mem_heap_extra_B=1044473
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=1654743008710
mem_heap_B=24207938
mem_heap_extra_B=1054494
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=15
#-----------
time=1731327156217
mem_heap_B=25121538
mem_heap_extra_B=1040678
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=16
#-----------
time=1873932946192
mem_heap_B=24263891
mem_heap_extra_B=1046013
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=1971246112162
mem_heap_B=25122460
mem_heap_extra_B=1049284
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=18
#-----------
time=2104647290438
mem_heap_B=25190704
mem_heap_extra_B=1054088
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=19
#-----------
time=2228815582767
mem_heap_B=44754087
mem_heap_extra_B=1065705
mem_stacks_B=0
heap_tree=detailed
n11: 44754087 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 20079829 0x758E0E5: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 20079829 0x758E4A9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 19709328 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 11843968 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 11843968 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 11843968 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 11803328 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 11803328 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 11803328 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 11803328 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 11803328 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 11803328 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 11803328 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 11803328 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 11803328 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 11803328 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 11803328 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 11803328 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 11803328 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 11803328 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 11803328 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 11803328 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 11803328 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 11803328 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 11803328 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 11803328 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 11803328 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BDBDA: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77AB386: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:336)
                            n1: 5901664 0x77DF2A6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::Aggregator<folly::Function<void (arcticdb::SegmentInMemory&&)> >(arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&, std::optional<arcticdb::entity::StreamDescriptor> const&, std::optional<unsigned long> const&) (aggregator.hpp:171)
                             n1: 5901664 0x77BD3B0: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::SegmentAggregator(folly::Function<void (arcticdb::pipelines::FrameSlice&&)>&&, arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&) (segment_aggregator.hpp:48)
                              n0: 5901664 0x77AAE42: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:280)
       n0: 40640 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 7599120 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 7599120 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n6: 6126144 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 1962944 in 8 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 800128 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 800128 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 800128 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 800128 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 800128 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 800128 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 800128 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 800128 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 800128 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 800128 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 800128 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 800128 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 0 in 2 places, all below massif's threshold (1.00%)
      n1: 1472976 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 1472976 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 1472976 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 1472976 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 1472976 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 1472976 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 1472976 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 1472976 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 1472976 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 1472976 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 1472976 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                 n1: 1472976 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 1472976 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 1472976 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 1402246 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                     n1: 1402246 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                      n1: 1402246 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 1402246 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 1402246 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 1402246 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 1402246 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 1402246 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 1402246 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 1402246 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 1402246 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 70730 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 266240 in 2 places, all below massif's threshold (1.00%)
   n0: 370501 in 2 places, all below massif's threshold (1.00%)
 n0: 7366261 in 1150 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n3: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n1: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n0: 563568 in 3 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n0: 675288 in 8 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n2: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n0: 431908 in 6 places, all below massif's threshold (1.00%)
 n2: 1380939 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n2: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n1: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n0: 470784 in 3 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n0: 317209 in 17 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1536 in 26 places, all below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n0: 804362 in 3 places, all below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 751723 in 5 places, all below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n1: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n0: 569816 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=20
#-----------
time=2335830492082
mem_heap_B=25316788
mem_heap_extra_B=1062268
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=21
#-----------
time=2442486412335
mem_heap_B=25764478
mem_heap_extra_B=1066994
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=22
#-----------
time=2534161789354
mem_heap_B=25788209
mem_heap_extra_B=1069455
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=23
#-----------
time=2653330298007
mem_heap_B=25240434
mem_heap_extra_B=1075390
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=24
#-----------
time=2772574906606
mem_heap_B=25924537
mem_heap_extra_B=1078759
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=25
#-----------
time=2832273201454
mem_heap_B=25590906
mem_heap_extra_B=1080430
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=26
#-----------
time=2951093323706
mem_heap_B=25511518
mem_heap_extra_B=1084842
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=3070127990075
mem_heap_B=26226631
mem_heap_extra_B=1089897
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=28
#-----------
time=3157661134691
mem_heap_B=26037592
mem_heap_extra_B=1093816
mem_stacks_B=0
heap_tree=detailed
n17: 26037592 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n0: 4809325 in 1149 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n3: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n2: 368912 0x274684: r_object (marshal.c:1215)
           n2: 368912 0x274241: r_object (marshal.c:1391)
            n1: 345437 0x27477A: r_object (marshal.c:1215)
             n2: 345437 0x274241: r_object (marshal.c:1391)
              n2: 344100 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 342003 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 342003 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 342003 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 342003 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 342003 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 342003 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 342003 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n2: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 338312 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 338312 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 338312 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 338312 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 338312 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 338312 in 4 places, all below massif's threshold (1.00%)
                                                            n0: 3691 in 1 place, below massif's threshold (1.00%)
               n0: 2097 in 1 place, below massif's threshold (1.00%)
              n0: 1337 in 2 places, all below massif's threshold (1.00%)
            n0: 23475 in 7 places, all below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 179014 in 5 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n4: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 448400 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 448400 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 442736 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 442736 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 442736 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 442736 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 442736 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 442736 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 442736 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 442736 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                     n0: 5664 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 115168 in 2 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:2743)
          n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3155)
           n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3178)
            n2: 425784 0x28B5FB: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 307576 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n1: 307576 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n0: 307576 in 5 places, all below massif's threshold (1.00%)
             n0: 118208 in 3 places, all below massif's threshold (1.00%)
         n0: 249504 in 7 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n3: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n1: 376980 0x920D75B: thread_fn (thread.c:161)
       n1: 376980 0x4A2DAC2: start_thread (pthread_create.c:442)
        n0: 376980 0x4ABEA03: clone (clone.S:100)
      n0: 54928 in 5 places, all below massif's threshold (1.00%)
 n1: 1514466 0x5997DE4: __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1514466 0x596D396: allocate (allocator.h:185)
   n2: 1514466 0x596D396: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:464)
    n3: 1514466 0x5982515: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:153)
     n1: 737282 0x8DCD137: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::input_iterator_tag) (basic_string.tcc:184)
      n1: 737282 0x8DCCAD6: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::__false_type) (basic_string.h:255)
       n1: 737282 0x8DCC2FA: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >) (basic_string.h:274)
        n1: 737282 0x8DCBA78: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::istreambuf_iterator<char, std::char_traits<char> >, void>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::allocator<char> const&) (basic_string.h:641)
         n2: 737282 0x8E3976F: Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(std::iostream&) (XmlSerializer.cpp:289)
          n1: 737282 0x8BE5277: Aws::S3::Model::ListObjectsV2Request::HasEmbeddedError(std::iostream&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) const (ListObjectsV2Request.cpp:48)
           n1: 737282 0x8E40074: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:603)
            n1: 737282 0x8E3B31B: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:293)
             n1: 737282 0x8E48B5F: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:101)
              n1: 737282 0x8E48541: Aws::Client::AWSXMLClient::MakeRequest(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:68)
               n1: 737282 0x8C8A353: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}::operator()() const (S3Client.cpp:3095)
                n1: 737282 0x8CF13C8: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:61)
                 n1: 737282 0x8CE2D26: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:143)
                  n1: 737282 0x8CD0672: std::_Function_handler<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> (), Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                   n1: 737282 0x8D43AFB: std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>::operator()() const (std_function.h:590)
                    n1: 737282 0x8D2D9D7: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >(std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                     n1: 737282 0x8C8B325: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const (S3Client.cpp:3099)
                      n1: 737282 0x7B8E86A: arcticdb::storage::s3::RealS3Client::list_objects(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) const (s3_real_client.cpp:211)
                       n1: 737282 0x7B9EE4F: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:330)
                        n1: 737282 0x7B9E118: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:76)
                         n1: 737282 0x74B4152: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:178)
                          n1: 737282 0x74B51AC: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:107)
                           n1: 737282 0x74B6881: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n2: 737282 0x750614B: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:215)
                             n1: 737282 0x7BAFA02: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n1: 737282 0x7BA93FF: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
                               n0: 737282 0x7BA7658: arcticdb::get_incomplete(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::variant<std::monostate, arcticdb::entity::IndexRange, arcticdb::pipelines::RowRange> const&, unsigned long, bool, bool) (append_map.cpp:294)
                             n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 0 in 2 places, all below massif's threshold (1.00%)
     n2: 531750 0x596D201: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long) (basic_string.tcc:291)
      n2: 524289 0xAAB3952: std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::overflow(int) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
       n2: 524289 0xAABB88A: std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
        n1: 524289 0xAAAD375: std::ostream::write(char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
         n1: 524289 0x8DBDFFC: WriteData(char*, unsigned long, unsigned long, void*) (CurlHttpClient.cpp:226)
          n1: 524289 0x8EDF6A4: chop_write (sendf.c:321)
           n1: 524289 0x8EDFA49: Curl_client_write (sendf.c:415)
            n1: 524289 0x8EEF7D2: readwrite_data (transfer.c:709)
             n1: 524289 0x8EF0500: Curl_readwrite (transfer.c:1133)
              n1: 524289 0x8ED865E: multi_runsingle (multi.c:2443)
               n1: 524289 0x8ED8F84: curl_multi_perform (multi.c:2740)
                n1: 524289 0x8EC7C87: easy_transfer (easy.c:679)
                 n1: 524289 0x8EC7F0C: easy_perform (easy.c:769)
                  n1: 524289 0x8EC7F77: curl_easy_perform (easy.c:788)
                   n1: 524289 0x8DC1890: Aws::Http::CurlHttpClient::MakeRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const (CurlHttpClient.cpp:865)
                    n1: 524289 0x8E3EC05: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}::operator()() const (AWSClient.cpp:567)
                     n1: 524289 0x8E55CAE: std::shared_ptr<Aws::Http::HttpResponse> std::__invoke_impl<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(std::__invoke_other, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:61)
                      n1: 524289 0x8E52824: std::enable_if<std::__and_<std::__not_<std::is_void<std::shared_ptr<Aws::Http::HttpResponse> > >, std::is_convertible<std::__invoke_result<Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>::type, std::shared_ptr<Aws::Http::HttpResponse> > >::value, std::shared_ptr<Aws::Http::HttpResponse> >::type std::__invoke_r<std::shared_ptr<Aws::Http::HttpResponse>, Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&>(Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}&) (invoke.h:143)
                       n1: 524289 0x8E4EC3A: std::_Function_handler<std::shared_ptr<Aws::Http::HttpResponse> (), Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const::{lambda()#3}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                        n1: 524289 0x8E829D3: std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>::operator()() const (std_function.h:590)
                         n1: 524289 0x8E73006: std::shared_ptr<Aws::Http::HttpResponse> smithy::components::tracing::TracingUtils::MakeCallWithTiming<std::shared_ptr<Aws::Http::HttpResponse> >(std::function<std::shared_ptr<Aws::Http::HttpResponse> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                          n1: 524289 0x8E3F8B0: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:571)
                           n1: 524289 0x8E3B31B: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:293)
                            n1: 524289 0x8E48B5F: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:101)
                             n2: 524289 0x8E48541: Aws::Client::AWSXMLClient::MakeRequest(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:68)
                              n1: 524289 0x8C8A353: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}::operator()() const (S3Client.cpp:3095)
                               n0: 524289 0x8CF13C8: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:61)
                              n0: 0 in 1 place, below massif's threshold (1.00%)
        n0: 0 in 2 places, all below massif's threshold (1.00%)
       n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 7461 in 8 places, all below massif's threshold (1.00%)
     n0: 245434 in 8 places, all below massif's threshold (1.00%)
    n0: 0 in 1 place, below massif's threshold (1.00%)
 n2: 1381331 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n3: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n2: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n1: 396288 0x921EAB4: parse_array (cJSON.c:1529)
         n1: 396288 0x921E693: parse_value (cJSON.c:1382)
          n1: 396288 0x921F015: parse_object (cJSON.c:1710)
           n2: 396288 0x921E6DD: parse_value (cJSON.c:1387)
            n1: 338688 0x921EAB4: parse_array (cJSON.c:1529)
             n1: 338688 0x921E693: parse_value (cJSON.c:1382)
              n1: 338688 0x921F015: parse_object (cJSON.c:1710)
               n2: 338688 0x921E6DD: parse_value (cJSON.c:1387)
                n1: 334208 0x921EAB4: parse_array (cJSON.c:1529)
                 n1: 334208 0x921E693: parse_value (cJSON.c:1382)
                  n1: 334208 0x921F015: parse_object (cJSON.c:1710)
                   n2: 334208 0x921E6DD: parse_value (cJSON.c:1387)
                    n1: 318336 0x921EAB4: parse_array (cJSON.c:1529)
                     n1: 318336 0x921E693: parse_value (cJSON.c:1382)
                      n1: 318336 0x921F015: parse_object (cJSON.c:1710)
                       n2: 318336 0x921E6DD: parse_value (cJSON.c:1387)
                        n1: 296832 0x921EAB4: parse_array (cJSON.c:1529)
                         n1: 296832 0x921E693: parse_value (cJSON.c:1382)
                          n1: 296832 0x921F015: parse_object (cJSON.c:1710)
                           n1: 296832 0x921E6DD: parse_value (cJSON.c:1387)
                            n0: 296832 in 2 places, all below massif's threshold (1.00%)
                        n0: 21504 in 1 place, below massif's threshold (1.00%)
                    n0: 15872 in 1 place, below massif's threshold (1.00%)
                n0: 4480 in 1 place, below massif's threshold (1.00%)
            n0: 57600 in 2 places, all below massif's threshold (1.00%)
        n0: 74496 in 2 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n1: 283408 0x91E4FDF: aws_array_list_init_dynamic (array_list.inl:36)
     n0: 283408 in 4 places, all below massif's threshold (1.00%)
    n0: 33801 in 16 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1928 in 26 places, all below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n3: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n1: 431253 0x2B11DB: UnknownInlinedFun (unicodeobject.c:10402)
         n1: 431253 0x2B11DB: unicode_join.lto_priv.0 (unicodeobject.c:12779)
          n1: 431253 0x29E78A: method_vectorcall_O.lto_priv.0 (descrobject.c:460)
           n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:114)
            n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:123)
             n1: 431253 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
              n1: 431253 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
               n0: 431253 in 2 places, all below massif's threshold (1.00%)
        n1: 359305 0x2B12D5: PyUnicode_Join (unicodeobject.c:10402)
         n1: 359305 0x3B846E: pattern_subx.lto_priv.0 (_sre.c:1205)
          n1: 359305 0x3B7F37: UnknownInlinedFun (_sre.c:1244)
           n1: 359305 0x3B7F37: _sre_SRE_Pattern_sub.lto_priv.0 (_sre.c.h:680)
            n1: 359305 0x328763: method_vectorcall_FASTCALL_KEYWORDS_METHOD.lto_priv.0 (descrobject.c:365)
             n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:114)
              n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:123)
               n1: 359305 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                n1: 359305 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                 n1: 359305 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                  n1: 359305 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                   n2: 359305 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                    n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 336581 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n2: 336581 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 336581 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 336581 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n2: 336581 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                            n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                             n1: 332119 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                              n1: 332119 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                               n0: 332119 in 4 places, all below massif's threshold (1.00%)
                           n0: 4462 in 1 place, below massif's threshold (1.00%)
                        n0: 0 in 3 places, all below massif's threshold (1.00%)
                    n0: 22724 in 1 place, below massif's threshold (1.00%)
        n0: 13804 in 1 place, below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n2: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 479390 in 4 places, all below massif's threshold (1.00%)
       n1: 272333 0x2A30D0: UnknownInlinedFun (unicodeobject.c:14401)
        n1: 272333 0x2A30D0: UnknownInlinedFun (unicode_format.h:931)
         n1: 272333 0x2A30D0: do_string_format.lto_priv.0 (unicode_format.h:957)
          n0: 272333 in 2 places, all below massif's threshold (1.00%)
 n1: 592400 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 592400 0x5C42BD7: allocate (allocator.h:185)
   n1: 592400 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n3: 592400 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n1: 296400 0x5C47C5E: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_create_nodes(arcticdb::entity::AtomKeyImpl**, arcticdb::entity::AtomKeyImpl**) (stl_deque.h:663)
      n2: 296400 0x5C08CB1: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_initialize_map(unsigned long) (stl_deque.h:637)
       n1: 296400 0x5BE5228: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_Deque_base(std::allocator<arcticdb::entity::AtomKeyImpl> const&, unsigned long) (stl_deque.h:447)
        n1: 296400 0x5BC8336: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::deque(std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> > const&) (stl_deque.h:898)
         n1: 296400 0x76AA17D: arcticdb::VersionMapEntry::VersionMapEntry(arcticdb::VersionMapEntry const&) (version_map_entry.hpp:223)
          n1: 296400 0x76AA260: decltype (::new ((void*)(0)) arcticdb::VersionMapEntry((declval<arcticdb::VersionMapEntry&>)())) std::construct_at<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (stl_construct.h:97)
           n1: 296400 0x76AA2C3: void std::allocator_traits<std::allocator<arcticdb::VersionMapEntry> >::construct<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>&, arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (alloc_traits.h:518)
            n1: 296400 0x76A36A9: std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&) (shared_ptr_base.h:519)
             n1: 296400 0x769827B: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:650)
              n1: 296400 0x7686003: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:1342)
               n1: 296400 0x766CB78: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr.h:409)
                n1: 296400 0x764FCDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry> const&, arcticdb::VersionMapEntry&) (shared_ptr.h:863)
                 n1: 296400 0x763263F: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry&) (shared_ptr.h:879)
                  n1: 296400 0x7618016: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:768)
                   n2: 296400 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
                    n1: 296000 0x760455B: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:239)
                     n1: 296000 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
                      n1: 296000 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
                       n1: 296000 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                        n1: 296000 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                         n1: 296000 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                          n1: 296000 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                           n1: 296000 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                            n1: 296000 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                             n1: 296000 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                              n1: 296000 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                               n0: 296000 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 400 in 1 place, below massif's threshold (1.00%)
       n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 296000 0x7614AC7: void std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_push_front_aux<arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl const&) (deque.tcc:536)
      n1: 296000 0x7602A96: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::push_front(arcticdb::entity::AtomKeyImpl const&) (stl_deque.h:1469)
       n1: 296000 0x75F50BB: arcticdb::VersionMapEntry::unshift_key(arcticdb::entity::AtomKeyImpl const&) (version_map_entry.hpp:313)
        n1: 296000 0x7631832: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_to_entry(std::shared_ptr<arcticdb::VersionMapEntry> const&, arcticdb::entity::AtomKeyImpl const&, arcticdb::entity::AtomKeyImpl const&) const (version_map.hpp:665)
         n1: 296000 0x7616FCD: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::do_write(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::shared_ptr<arcticdb::VersionMapEntry> const&) (version_map.hpp:514)
          n1: 296000 0x76045B1: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:241)
           n1: 296000 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
            n1: 296000 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
             n1: 296000 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
              n1: 296000 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
               n1: 296000 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                n1: 296000 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                 n1: 296000 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n1: 296000 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                   n1: 296000 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                    n1: 296000 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                     n1: 296000 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                      n1: 296000 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                       n1: 296000 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                        n1: 296000 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                         n1: 296000 0x282B79: UnknownInlinedFun (abstract.h:114)
                          n1: 296000 0x282B79: UnknownInlinedFun (abstract.h:123)
                           n1: 296000 0x282B79: UnknownInlinedFun (ceval.c:5893)
                            n1: 296000 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                             n1: 296000 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 296000 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                               n1: 296000 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                n1: 296000 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                 n1: 296000 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                  n1: 296000 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                   n1: 296000 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                    n1: 296000 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                     n1: 296000 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                      n1: 296000 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 296000 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                        n1: 296000 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                         n1: 296000 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                          n1: 296000 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                           n1: 296000 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                            n1: 296000 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                             n1: 296000 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                              n1: 296000 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                               n1: 296000 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                n1: 296000 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                 n1: 296000 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                  n1: 296000 0x389AE7: run_eval_code_obj.lto_priv.0 (pythonrun.c:1291)
                                                   n0: 296000 0x3842EE: run_mod.lto_priv.0 (pythonrun.c:1312)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n2: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3141)
         n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3178)
          n2: 388280 0x28A2C1: type_new.lto_priv.0 (typeobject.c:3327)
           n1: 316672 0x289A96: UnknownInlinedFun (typeobject.c:1123)
            n1: 316672 0x289A96: _PyObject_MakeTpCall (call.c:215)
             n0: 316672 in 9 places, all below massif's threshold (1.00%)
           n0: 71608 in 2 places, all below massif's threshold (1.00%)
        n0: 181536 in 5 places, all below massif's threshold (1.00%)
 n1: 480168 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 480168 0x5CD2546: allocate (allocator.h:185)
   n1: 480168 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 480168 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 480168 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 480168 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 480168 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 480168 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 480168 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 480168 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 480168 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 480168 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 480168 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 480168 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 480168 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 480168 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 480168 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 480168 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 480168 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 480168 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 480168 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 480168 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 480168 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 480168 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 480168 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 480168 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 480168 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 480168 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 480168 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 480168 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 480168 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 480168 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 480168 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 480168 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 480168 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 480168 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 480168 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 480168 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 480168 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 480168 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 480168 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 480168 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 480168 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 480168 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 480168 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 480168 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 480168 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 480168 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 480168 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 480168 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 480168 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:99)
  n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:572)
   n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1981)
    n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1974)
     n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:685)
      n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:2885)
       n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3074)
        n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3183)
         n2: 397127 0x28BC7F: type_new.lto_priv.0 (typeobject.c:3327)
          n1: 356016 0x289A96: UnknownInlinedFun (typeobject.c:1123)
           n2: 356016 0x289A96: _PyObject_MakeTpCall (call.c:215)
            n1: 314925 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
             n1: 314925 0x287083: UnknownInlinedFun (call.c:166)
              n1: 314925 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
               n1: 314925 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                 n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                  n1: 314925 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                   n2: 314925 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                    n1: 312609 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 312609 0x362E55: _PyEval_Vector (ceval.c:5067)
                      n2: 312609 0x362D25: PyEval_EvalCode (ceval.c:1134)
                       n1: 311120 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                        n1: 311120 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                         n1: 311120 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                          n1: 311120 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                           n1: 311120 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                            n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:114)
                                n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:123)
                                 n1: 311120 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                  n1: 311120 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                   n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                       n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                        n1: 311120 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                         n1: 311120 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                          n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                     n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                      n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                       n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                        n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                         n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                          n2: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                           n1: 307477 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                            n1: 307477 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                             n1: 307477 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                              n1: 307477 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                               n1: 307477 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                n0: 307477 in 4 places, all below massif's threshold (1.00%)
                                                           n0: 3643 in 1 place, below massif's threshold (1.00%)
                       n0: 1489 in 1 place, below massif's threshold (1.00%)
                    n0: 2316 in 1 place, below massif's threshold (1.00%)
            n0: 41091 in 12 places, all below massif's threshold (1.00%)
          n0: 41111 in 1 place, below massif's threshold (1.00%)
 n1: 347896 0x4713D94A: _upb_Arena_SlowMalloc_dont_copy_me__upb_internal_use_only (in /home/alex/venvs/310/lib/python3.10/site-packages/google/_upb/_message.abi3.so)
  n0: 347896 in 30 places, all below massif's threshold (1.00%)
 n1: 296128 0x40DADD5D: arrow::compute::KernelSignature::Make(std::vector<arrow::compute::InputType, std::allocator<arrow::compute::InputType> >, arrow::compute::OutputType, bool) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/libarrow.so.1801)
  n0: 296128 in 200 places, all below massif's threshold (1.00%)
 n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:99)
  n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:572)
   n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1981)
    n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1974)
     n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:685)
      n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:126)
       n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:159)
        n2: 291693 0x275606: PyBytes_FromStringAndSize (bytesobject.c:139)
         n2: 289484 0x273E97: r_object (marshal.c:1110)
          n1: 286739 0x27422C: r_object (marshal.c:1388)
           n0: 286739 in 8 places, all below massif's threshold (1.00%)
          n0: 2745 in 3 places, all below massif's threshold (1.00%)
         n0: 2209 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=29
#-----------
time=3238343442072
mem_heap_B=26588631
mem_heap_extra_B=1109689
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=30
#-----------
time=3342596465038
mem_heap_B=26150549
mem_heap_extra_B=1102083
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=3457827582771
mem_heap_B=26962705
mem_heap_extra_B=1135031
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=32
#-----------
time=3566275531397
mem_heap_B=25677272
mem_heap_extra_B=1112288
mem_stacks_B=0
heap_tree=detailed
n17: 25677272 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n0: 4861893 in 1149 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n3: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n2: 368912 0x274684: r_object (marshal.c:1215)
           n2: 368912 0x274241: r_object (marshal.c:1391)
            n1: 345437 0x27477A: r_object (marshal.c:1215)
             n2: 345437 0x274241: r_object (marshal.c:1391)
              n2: 344100 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 342003 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 342003 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 342003 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 342003 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 342003 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 342003 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 342003 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n2: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 338312 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 338312 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 338312 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 338312 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 338312 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 338312 in 4 places, all below massif's threshold (1.00%)
                                                            n0: 3691 in 1 place, below massif's threshold (1.00%)
               n0: 2097 in 1 place, below massif's threshold (1.00%)
              n0: 1337 in 2 places, all below massif's threshold (1.00%)
            n0: 23475 in 7 places, all below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 179014 in 5 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n4: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 448400 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 448400 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 442736 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 442736 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 442736 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 442736 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 442736 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 442736 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 442736 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 442736 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                     n0: 5664 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 115168 in 2 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:2743)
          n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3155)
           n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3178)
            n2: 425784 0x28B5FB: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 307576 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n1: 307576 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n0: 307576 in 5 places, all below massif's threshold (1.00%)
             n0: 118208 in 3 places, all below massif's threshold (1.00%)
         n0: 249504 in 7 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n3: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n1: 376980 0x920D75B: thread_fn (thread.c:161)
       n1: 376980 0x4A2DAC2: start_thread (pthread_create.c:442)
        n0: 376980 0x4ABEA03: clone (clone.S:100)
      n0: 54928 in 5 places, all below massif's threshold (1.00%)
 n2: 1381331 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n3: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n2: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n1: 396288 0x921EAB4: parse_array (cJSON.c:1529)
         n1: 396288 0x921E693: parse_value (cJSON.c:1382)
          n1: 396288 0x921F015: parse_object (cJSON.c:1710)
           n2: 396288 0x921E6DD: parse_value (cJSON.c:1387)
            n1: 338688 0x921EAB4: parse_array (cJSON.c:1529)
             n1: 338688 0x921E693: parse_value (cJSON.c:1382)
              n1: 338688 0x921F015: parse_object (cJSON.c:1710)
               n2: 338688 0x921E6DD: parse_value (cJSON.c:1387)
                n1: 334208 0x921EAB4: parse_array (cJSON.c:1529)
                 n1: 334208 0x921E693: parse_value (cJSON.c:1382)
                  n1: 334208 0x921F015: parse_object (cJSON.c:1710)
                   n2: 334208 0x921E6DD: parse_value (cJSON.c:1387)
                    n1: 318336 0x921EAB4: parse_array (cJSON.c:1529)
                     n1: 318336 0x921E693: parse_value (cJSON.c:1382)
                      n1: 318336 0x921F015: parse_object (cJSON.c:1710)
                       n2: 318336 0x921E6DD: parse_value (cJSON.c:1387)
                        n1: 296832 0x921EAB4: parse_array (cJSON.c:1529)
                         n1: 296832 0x921E693: parse_value (cJSON.c:1382)
                          n1: 296832 0x921F015: parse_object (cJSON.c:1710)
                           n1: 296832 0x921E6DD: parse_value (cJSON.c:1387)
                            n0: 296832 in 2 places, all below massif's threshold (1.00%)
                        n0: 21504 in 1 place, below massif's threshold (1.00%)
                    n0: 15872 in 1 place, below massif's threshold (1.00%)
                n0: 4480 in 1 place, below massif's threshold (1.00%)
            n0: 57600 in 2 places, all below massif's threshold (1.00%)
        n0: 74496 in 2 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n1: 283408 0x91E4FDF: aws_array_list_init_dynamic (array_list.inl:36)
     n0: 283408 in 4 places, all below massif's threshold (1.00%)
    n0: 33801 in 16 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1928 in 26 places, all below massif's threshold (1.00%)
 n1: 917682 0x5997DE4: __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 917682 0x596D396: allocate (allocator.h:185)
   n2: 917682 0x596D396: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:464)
    n3: 917682 0x5982515: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:153)
     n1: 368642 0x8DCD137: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::input_iterator_tag) (basic_string.tcc:184)
      n1: 368642 0x8DCCAD6: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::__false_type) (basic_string.h:255)
       n1: 368642 0x8DCC2FA: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >) (basic_string.h:274)
        n1: 368642 0x8DCBA78: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::istreambuf_iterator<char, std::char_traits<char> >, void>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::allocator<char> const&) (basic_string.h:641)
         n2: 368642 0x8E3976F: Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(std::iostream&) (XmlSerializer.cpp:289)
          n1: 368642 0x8BE5277: Aws::S3::Model::ListObjectsV2Request::HasEmbeddedError(std::iostream&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&) const (ListObjectsV2Request.cpp:48)
           n1: 368642 0x8E40074: Aws::Client::AWSClient::AttemptOneRequest(std::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const (AWSClient.cpp:603)
            n1: 368642 0x8E3B31B: Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSClient.cpp:293)
             n1: 368642 0x8E48B5F: Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:101)
              n1: 368642 0x8E48541: Aws::Client::AWSXMLClient::MakeRequest(Aws::AmazonWebServiceRequest const&, Aws::Endpoint::AWSEndpoint const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const (AWSXmlClient.cpp:68)
               n1: 368642 0x8C8A353: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}::operator()() const (S3Client.cpp:3095)
                n1: 368642 0x8CF13C8: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> std::__invoke_impl<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(std::__invoke_other, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:61)
                 n1: 368642 0x8CE2D26: std::enable_if<std::__and_<std::__not_<std::is_void<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >, std::is_convertible<std::__invoke_result<Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>::type, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> > >::value, Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >::type std::__invoke_r<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error>, Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&>(Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}&) (invoke.h:143)
                  n1: 368642 0x8CD0672: std::_Function_handler<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> (), Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:291)
                   n1: 368642 0x8D43AFB: std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>::operator()() const (std_function.h:590)
                    n1: 368642 0x8D2D9D7: Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> smithy::components::tracing::TracingUtils::MakeCallWithTiming<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> >(std::function<Aws::Utils::Outcome<Aws::S3::Model::ListObjectsV2Result, Aws::S3::S3Error> ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, smithy::components::tracing::Meter const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TracingUtils.h:66)
                     n1: 368642 0x8C8B325: Aws::S3::S3Client::ListObjectsV2(Aws::S3::Model::ListObjectsV2Request const&) const (S3Client.cpp:3099)
                      n1: 368642 0x7B8E86A: arcticdb::storage::s3::RealS3Client::list_objects(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) const (s3_real_client.cpp:211)
                       n1: 368642 0x7B9EE4F: bool arcticdb::storage::s3::detail::do_iterate_type_impl<arcticdb::storage::object_store_utils::FlatBucketizer, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}>(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::storage::s3::S3ClientWrapper const&, arcticdb::storage::object_store_utils::FlatBucketizer&&, arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arcticdb::entity::KeyDescriptor const&, arcticdb::entity::KeyType)#1}&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (detail-inl.hpp:330)
                        n1: 368642 0x7B9E118: arcticdb::storage::s3::S3Storage::do_iterate_type_until_match(arcticdb::entity::KeyType, std::function<bool (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (s3_storage.cpp:76)
                         n1: 368642 0x74B4152: arcticdb::storage::Storage::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (storage.hpp:178)
                          n1: 368642 0x74B51AC: arcticdb::storage::Storages::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (storages.hpp:107)
                           n1: 368642 0x74B6881: arcticdb::storage::Library::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (library.hpp:70)
                            n2: 368642 0x750614B: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::iterate_type(arcticdb::entity::KeyType, std::function<void (std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>&&)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (async_store.hpp:215)
                             n1: 368642 0x7BAFA02: arcticdb::load_via_iteration(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool) (append_map.cpp:75)
                              n1: 368642 0x7BA93FF: arcticdb::get_incomplete_append_slices_for_stream_id(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool) (append_map.cpp:483)
                               n0: 368642 0x7BA7658: arcticdb::get_incomplete(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::variant<std::monostate, arcticdb::entity::IndexRange, arcticdb::pipelines::RowRange> const&, unsigned long, bool, bool) (append_map.cpp:294)
                             n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 0 in 2 places, all below massif's threshold (1.00%)
     n0: 279434 in 8 places, all below massif's threshold (1.00%)
     n1: 269606 0x596D201: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long) (basic_string.tcc:291)
      n0: 269606 in 9 places, all below massif's threshold (1.00%)
    n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n3: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n1: 431253 0x2B11DB: UnknownInlinedFun (unicodeobject.c:10402)
         n1: 431253 0x2B11DB: unicode_join.lto_priv.0 (unicodeobject.c:12779)
          n1: 431253 0x29E78A: method_vectorcall_O.lto_priv.0 (descrobject.c:460)
           n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:114)
            n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:123)
             n1: 431253 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
              n1: 431253 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
               n0: 431253 in 2 places, all below massif's threshold (1.00%)
        n1: 359305 0x2B12D5: PyUnicode_Join (unicodeobject.c:10402)
         n1: 359305 0x3B846E: pattern_subx.lto_priv.0 (_sre.c:1205)
          n1: 359305 0x3B7F37: UnknownInlinedFun (_sre.c:1244)
           n1: 359305 0x3B7F37: _sre_SRE_Pattern_sub.lto_priv.0 (_sre.c.h:680)
            n1: 359305 0x328763: method_vectorcall_FASTCALL_KEYWORDS_METHOD.lto_priv.0 (descrobject.c:365)
             n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:114)
              n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:123)
               n1: 359305 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                n1: 359305 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                 n1: 359305 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                  n1: 359305 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                   n2: 359305 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                    n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 336581 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n2: 336581 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 336581 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 336581 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n2: 336581 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                            n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                             n1: 332119 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                              n1: 332119 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                               n0: 332119 in 4 places, all below massif's threshold (1.00%)
                           n0: 4462 in 1 place, below massif's threshold (1.00%)
                        n0: 0 in 3 places, all below massif's threshold (1.00%)
                    n0: 22724 in 1 place, below massif's threshold (1.00%)
        n0: 13804 in 1 place, below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n2: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 479390 in 4 places, all below massif's threshold (1.00%)
       n1: 272333 0x2A30D0: UnknownInlinedFun (unicodeobject.c:14401)
        n1: 272333 0x2A30D0: UnknownInlinedFun (unicode_format.h:931)
         n2: 272333 0x2A30D0: do_string_format.lto_priv.0 (unicode_format.h:957)
          n1: 270275 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
           n0: 270275 in 2 places, all below massif's threshold (1.00%)
          n0: 2058 in 1 place, below massif's threshold (1.00%)
 n1: 694000 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 694000 0x5C42BD7: allocate (allocator.h:185)
   n1: 694000 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n3: 694000 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n1: 347200 0x5C47C5E: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_create_nodes(arcticdb::entity::AtomKeyImpl**, arcticdb::entity::AtomKeyImpl**) (stl_deque.h:663)
      n2: 347200 0x5C08CB1: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_initialize_map(unsigned long) (stl_deque.h:637)
       n1: 347200 0x5BE5228: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_Deque_base(std::allocator<arcticdb::entity::AtomKeyImpl> const&, unsigned long) (stl_deque.h:447)
        n1: 347200 0x5BC8336: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::deque(std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> > const&) (stl_deque.h:898)
         n1: 347200 0x76AA17D: arcticdb::VersionMapEntry::VersionMapEntry(arcticdb::VersionMapEntry const&) (version_map_entry.hpp:223)
          n1: 347200 0x76AA260: decltype (::new ((void*)(0)) arcticdb::VersionMapEntry((declval<arcticdb::VersionMapEntry&>)())) std::construct_at<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (stl_construct.h:97)
           n1: 347200 0x76AA2C3: void std::allocator_traits<std::allocator<arcticdb::VersionMapEntry> >::construct<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>&, arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (alloc_traits.h:518)
            n1: 347200 0x76A36A9: std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&) (shared_ptr_base.h:519)
             n1: 347200 0x769827B: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:650)
              n1: 347200 0x7686003: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:1342)
               n1: 347200 0x766CB78: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr.h:409)
                n1: 347200 0x764FCDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry> const&, arcticdb::VersionMapEntry&) (shared_ptr.h:863)
                 n1: 347200 0x763263F: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry&) (shared_ptr.h:879)
                  n1: 347200 0x7618016: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:768)
                   n2: 347200 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
                    n1: 346800 0x760455B: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:239)
                     n1: 346800 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
                      n1: 346800 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
                       n1: 346800 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                        n1: 346800 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                         n1: 346800 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                          n1: 346800 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                           n1: 346800 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                            n1: 346800 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                             n1: 346800 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                              n1: 346800 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                               n0: 346800 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 400 in 1 place, below massif's threshold (1.00%)
       n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 346800 0x7614AC7: void std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_push_front_aux<arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl const&) (deque.tcc:536)
      n1: 346800 0x7602A96: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::push_front(arcticdb::entity::AtomKeyImpl const&) (stl_deque.h:1469)
       n1: 346800 0x75F50BB: arcticdb::VersionMapEntry::unshift_key(arcticdb::entity::AtomKeyImpl const&) (version_map_entry.hpp:313)
        n1: 346800 0x7631832: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_to_entry(std::shared_ptr<arcticdb::VersionMapEntry> const&, arcticdb::entity::AtomKeyImpl const&, arcticdb::entity::AtomKeyImpl const&) const (version_map.hpp:665)
         n1: 346800 0x7616FCD: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::do_write(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::shared_ptr<arcticdb::VersionMapEntry> const&) (version_map.hpp:514)
          n1: 346800 0x76045B1: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:241)
           n1: 346800 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
            n1: 346800 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
             n1: 346800 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
              n1: 346800 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
               n1: 346800 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                n1: 346800 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                 n1: 346800 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n1: 346800 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                   n1: 346800 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                    n1: 346800 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                     n1: 346800 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                      n1: 346800 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                       n1: 346800 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                        n1: 346800 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                         n1: 346800 0x282B79: UnknownInlinedFun (abstract.h:114)
                          n1: 346800 0x282B79: UnknownInlinedFun (abstract.h:123)
                           n1: 346800 0x282B79: UnknownInlinedFun (ceval.c:5893)
                            n1: 346800 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                             n1: 346800 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 346800 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                               n1: 346800 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                n1: 346800 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                 n1: 346800 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                  n1: 346800 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                   n1: 346800 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                    n1: 346800 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                     n1: 346800 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                      n1: 346800 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 346800 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                        n1: 346800 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                         n1: 346800 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                          n1: 346800 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                           n1: 346800 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                            n1: 346800 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                             n1: 346800 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                              n1: 346800 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                               n1: 346800 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                n1: 346800 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                 n1: 346800 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                  n1: 346800 0x389AE7: run_eval_code_obj.lto_priv.0 (pythonrun.c:1291)
                                                   n0: 346800 0x3842EE: run_mod.lto_priv.0 (pythonrun.c:1312)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n2: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3141)
         n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3178)
          n2: 388280 0x28A2C1: type_new.lto_priv.0 (typeobject.c:3327)
           n1: 316672 0x289A96: UnknownInlinedFun (typeobject.c:1123)
            n1: 316672 0x289A96: _PyObject_MakeTpCall (call.c:215)
             n0: 316672 in 9 places, all below massif's threshold (1.00%)
           n0: 71608 in 2 places, all below massif's threshold (1.00%)
        n0: 181536 in 5 places, all below massif's threshold (1.00%)
 n1: 562464 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 562464 0x5CD2546: allocate (allocator.h:185)
   n1: 562464 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 562464 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 562464 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 562464 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 562464 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 562464 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 562464 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 562464 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 562464 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 562464 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 562464 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 562464 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 562464 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 562464 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 562464 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 562464 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 562464 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 562464 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 562464 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 562464 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 562464 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 562464 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 562464 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 562464 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 562464 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 562464 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 562464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 562464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 562464 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 562464 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 562464 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 562464 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 562464 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 562464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 562464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 562464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 562464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 562464 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 562464 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 562464 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 562464 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 562464 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 562464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 562464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 562464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 562464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 562464 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 562464 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 562464 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:99)
  n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:572)
   n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1981)
    n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1974)
     n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:685)
      n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:2885)
       n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3074)
        n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3183)
         n2: 397127 0x28BC7F: type_new.lto_priv.0 (typeobject.c:3327)
          n1: 356016 0x289A96: UnknownInlinedFun (typeobject.c:1123)
           n2: 356016 0x289A96: _PyObject_MakeTpCall (call.c:215)
            n1: 314925 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
             n1: 314925 0x287083: UnknownInlinedFun (call.c:166)
              n1: 314925 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
               n1: 314925 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                 n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                  n1: 314925 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                   n2: 314925 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                    n1: 312609 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 312609 0x362E55: _PyEval_Vector (ceval.c:5067)
                      n2: 312609 0x362D25: PyEval_EvalCode (ceval.c:1134)
                       n1: 311120 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                        n1: 311120 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                         n1: 311120 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                          n1: 311120 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                           n1: 311120 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                            n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:114)
                                n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:123)
                                 n1: 311120 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                  n1: 311120 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                   n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                       n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                        n1: 311120 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                         n1: 311120 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                          n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                     n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                      n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                       n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                        n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                         n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                          n2: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                           n1: 307477 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                            n1: 307477 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                             n1: 307477 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                              n1: 307477 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                               n1: 307477 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                n0: 307477 in 4 places, all below massif's threshold (1.00%)
                                                           n0: 3643 in 1 place, below massif's threshold (1.00%)
                       n0: 1489 in 1 place, below massif's threshold (1.00%)
                    n0: 2316 in 1 place, below massif's threshold (1.00%)
            n0: 41091 in 12 places, all below massif's threshold (1.00%)
          n0: 41111 in 1 place, below massif's threshold (1.00%)
 n1: 347896 0x4713D94A: _upb_Arena_SlowMalloc_dont_copy_me__upb_internal_use_only (in /home/alex/venvs/310/lib/python3.10/site-packages/google/_upb/_message.abi3.so)
  n0: 347896 in 30 places, all below massif's threshold (1.00%)
 n1: 296128 0x40DADD5D: arrow::compute::KernelSignature::Make(std::vector<arrow::compute::InputType, std::allocator<arrow::compute::InputType> >, arrow::compute::OutputType, bool) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/libarrow.so.1801)
  n0: 296128 in 200 places, all below massif's threshold (1.00%)
 n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:99)
  n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:572)
   n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1981)
    n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1974)
     n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:685)
      n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:126)
       n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:159)
        n2: 291693 0x275606: PyBytes_FromStringAndSize (bytesobject.c:139)
         n2: 289484 0x273E97: r_object (marshal.c:1110)
          n1: 286739 0x27422C: r_object (marshal.c:1388)
           n0: 286739 in 8 places, all below massif's threshold (1.00%)
          n0: 2745 in 3 places, all below massif's threshold (1.00%)
         n0: 2209 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=33
#-----------
time=3646400036768
mem_heap_B=26330213
mem_heap_extra_B=1115315
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=34
#-----------
time=3736680084455
mem_heap_B=45152147
mem_heap_extra_B=1126869
mem_stacks_B=0
heap_tree=detailed
n13: 45152147 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 19708640 0x758E0E5: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 19708640 0x758E4A9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 19705232 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 11843968 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 11843968 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 11843968 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 11803328 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 11803328 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 11803328 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 11803328 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 11803328 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 11803328 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 11803328 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 11803328 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 11803328 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 11803328 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 11803328 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 11803328 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 11803328 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 11803328 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 11803328 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 11803328 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 11803328 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 11803328 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 11803328 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 11803328 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 11803328 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BDBDA: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77AB386: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:336)
                            n1: 5901664 0x77DF2A6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::Aggregator<folly::Function<void (arcticdb::SegmentInMemory&&)> >(arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&, std::optional<arcticdb::entity::StreamDescriptor> const&, std::optional<unsigned long> const&) (aggregator.hpp:171)
                             n1: 5901664 0x77BD3B0: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::SegmentAggregator(folly::Function<void (arcticdb::pipelines::FrameSlice&&)>&&, arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&) (segment_aggregator.hpp:48)
                              n0: 5901664 0x77AAE42: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:280)
       n0: 40640 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 7599120 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 7599120 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n6: 6126144 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 1962944 in 8 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 800128 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 800128 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 800128 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 800128 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 800128 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 800128 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 800128 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 800128 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 800128 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 800128 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 800128 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 800128 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 0 in 2 places, all below massif's threshold (1.00%)
      n1: 1472976 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 1472976 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 1472976 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 1472976 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 1472976 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 1472976 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 1472976 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 1472976 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 1472976 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 1472976 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 1472976 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                 n1: 1472976 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 1472976 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 1472976 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 1402246 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                     n1: 1402246 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                      n1: 1402246 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 1402246 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 1402246 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 1402246 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 1402246 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 1402246 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 1402246 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 1402246 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 1402246 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 70730 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 262144 in 2 places, all below massif's threshold (1.00%)
   n0: 3408 in 2 places, all below massif's threshold (1.00%)
 n0: 6796510 in 1153 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n3: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n1: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n0: 563568 in 3 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n0: 675288 in 8 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n2: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n0: 431908 in 6 places, all below massif's threshold (1.00%)
 n2: 1380939 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n2: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n1: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n0: 470784 in 3 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n0: 317209 in 17 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1536 in 26 places, all below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n0: 804362 in 3 places, all below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 751723 in 5 places, all below massif's threshold (1.00%)
 n1: 739600 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 739600 0x5C42BD7: allocate (allocator.h:185)
   n1: 739600 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n1: 739600 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n0: 739600 in 3 places, all below massif's threshold (1.00%)
 n1: 599400 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 599400 0x5CD2546: allocate (allocator.h:185)
   n1: 599400 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 599400 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 599400 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 599400 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 599400 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 599400 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 599400 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 599400 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 599400 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 599400 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 599400 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 599400 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 599400 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 599400 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 599400 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 599400 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 599400 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 599400 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 599400 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 599400 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 599400 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 599400 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 599400 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 599400 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 599400 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 599400 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 599400 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 599400 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 599400 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 599400 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 599400 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 599400 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 599400 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 599400 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 599400 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 599400 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 599400 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 599400 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 599400 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 599400 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 599400 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 599400 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 599400 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 599400 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 599400 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 599400 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 599400 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 599400 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 599400 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n1: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n0: 569816 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=35
#-----------
time=3880399536909
mem_heap_B=25416579
mem_heap_extra_B=1144125
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=36
#-----------
time=4034502890554
mem_heap_B=45760911
mem_heap_extra_B=1142457
mem_stacks_B=0
heap_tree=detailed
n13: 45760911 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 20084172 0x758E0E5: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 20084172 0x758E4A9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 19713424 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 11843968 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 11843968 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 11843968 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 11803328 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 11803328 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 11803328 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 11803328 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 11803328 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 11803328 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 11803328 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 11803328 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 11803328 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 11803328 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 11803328 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 11803328 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 11803328 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 11803328 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 11803328 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 11803328 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 11803328 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 11803328 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 11803328 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 11803328 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 11803328 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BDBDA: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77AB386: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:336)
                            n1: 5901664 0x77DF2A6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::Aggregator<folly::Function<void (arcticdb::SegmentInMemory&&)> >(arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&, std::optional<arcticdb::entity::StreamDescriptor> const&, std::optional<unsigned long> const&) (aggregator.hpp:171)
                             n1: 5901664 0x77BD3B0: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::SegmentAggregator(folly::Function<void (arcticdb::pipelines::FrameSlice&&)>&&, arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&) (segment_aggregator.hpp:48)
                              n0: 5901664 0x77AAE42: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:280)
       n0: 40640 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 7599120 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 7599120 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n6: 6126144 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 1962944 in 8 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 800128 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 800128 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 800128 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 800128 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 800128 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 800128 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 800128 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 800128 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 800128 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 800128 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 800128 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 800128 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 0 in 2 places, all below massif's threshold (1.00%)
      n1: 1472976 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 1472976 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 1472976 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 1472976 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 1472976 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 1472976 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 1472976 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 1472976 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 1472976 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 1472976 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 1472976 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                 n1: 1472976 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 1472976 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 1472976 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 1402246 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                     n1: 1402246 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                      n1: 1402246 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 1402246 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 1402246 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 1402246 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 1402246 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 1402246 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 1402246 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 1402246 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 1402246 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 70730 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 270336 in 2 places, all below massif's threshold (1.00%)
   n0: 370748 in 2 places, all below massif's threshold (1.00%)
 n0: 6874806 in 1153 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n3: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n1: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n0: 563568 in 3 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n0: 675288 in 8 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n2: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n0: 431908 in 6 places, all below massif's threshold (1.00%)
 n2: 1380939 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n2: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n1: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n0: 470784 in 3 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n0: 317209 in 17 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1536 in 26 places, all below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 825200 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 825200 0x5C42BD7: allocate (allocator.h:185)
   n1: 825200 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n1: 825200 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n0: 825200 in 3 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n0: 804362 in 3 places, all below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 751723 in 5 places, all below massif's threshold (1.00%)
 n1: 668736 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 668736 0x5CD2546: allocate (allocator.h:185)
   n1: 668736 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 668736 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 668736 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 668736 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 668736 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 668736 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 668736 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 668736 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 668736 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 668736 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 668736 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 668736 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 668736 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 668736 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 668736 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 668736 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 668736 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 668736 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 668736 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 668736 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 668736 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 668736 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 668736 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 668736 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 668736 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 668736 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 668736 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 668736 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 668736 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 668736 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 668736 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 668736 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 668736 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 668736 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 668736 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 668736 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 668736 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 668736 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 668736 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 668736 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 668736 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 668736 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 668736 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 668736 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 668736 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 668736 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 668736 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 668736 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 668736 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n1: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n0: 569816 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=37
#-----------
time=4167404373666
mem_heap_B=26515976
mem_heap_extra_B=1142352
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=4258440039298
mem_heap_B=25642796
mem_heap_extra_B=1146964
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=39
#-----------
time=4349280535601
mem_heap_B=25917760
mem_heap_extra_B=1152976
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=4440033829482
mem_heap_B=25860914
mem_heap_extra_B=1174590
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=41
#-----------
time=4531099337321
mem_heap_B=25804569
mem_heap_extra_B=1163959
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=42
#-----------
time=4622031023110
mem_heap_B=27024985
mem_heap_extra_B=1168415
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=4712838877377
mem_heap_B=27089551
mem_heap_extra_B=1173977
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=44
#-----------
time=4794414975957
mem_heap_B=46207057
mem_heap_extra_B=1187471
mem_stacks_B=0
heap_tree=detailed
n13: 46207057 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 19979793 0x758E0E5: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 19979793 0x758E4A9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 19609200 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 11743840 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 11743840 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 11743840 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 11703200 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 11703200 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 11703200 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 11703200 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 11703200 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 11703200 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 11703200 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 11703200 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 11703200 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 11703200 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 11703200 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 11703200 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 11703200 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 11703200 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 11703200 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 11703200 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 11703200 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 11703200 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 11703200 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 11703200 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 11703200 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x77DF2A6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::Aggregator<folly::Function<void (arcticdb::SegmentInMemory&&)> >(arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&, std::optional<arcticdb::entity::StreamDescriptor> const&, std::optional<unsigned long> const&) (aggregator.hpp:171)
                             n1: 5901664 0x77BD3B0: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::SegmentAggregator(folly::Function<void (arcticdb::pipelines::FrameSlice&&)>&&, arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&) (segment_aggregator.hpp:48)
                              n0: 5901664 0x77AAE42: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:280)
                            n1: 5801536 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5801536 0x77BDBDA: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5801536 0x77AB386: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:336)
       n0: 40640 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 7599120 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 7599120 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n6: 6126144 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 1962944 in 8 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 800128 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 800128 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 800128 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 800128 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 800128 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 800128 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 800128 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 800128 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 800128 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 800128 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 800128 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 800128 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 0 in 2 places, all below massif's threshold (1.00%)
      n1: 1472976 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 1472976 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 1472976 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 1472976 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 1472976 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 1472976 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 1472976 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 1472976 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 1472976 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 1472976 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 1472976 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                 n1: 1472976 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 1472976 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 1472976 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 1402246 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                     n1: 1402246 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                      n1: 1402246 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 1402246 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 1402246 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 1402246 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 1402246 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 1402246 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 1402246 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 1402246 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 1402246 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 70730 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 266240 in 2 places, all below massif's threshold (1.00%)
   n0: 370593 in 2 places, all below massif's threshold (1.00%)
 n0: 6933011 in 1153 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n3: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n1: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n0: 563568 in 3 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n0: 675288 in 8 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n2: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n0: 431908 in 6 places, all below massif's threshold (1.00%)
 n2: 1380939 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n2: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n1: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n0: 722816 in 6 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n0: 317209 in 17 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1536 in 26 places, all below massif's threshold (1.00%)
 n1: 1097200 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1097200 0x5C42BD7: allocate (allocator.h:185)
   n1: 1097200 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n3: 1097200 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n1: 548800 0x5C47C5E: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_create_nodes(arcticdb::entity::AtomKeyImpl**, arcticdb::entity::AtomKeyImpl**) (stl_deque.h:663)
      n2: 548800 0x5C08CB1: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_initialize_map(unsigned long) (stl_deque.h:637)
       n1: 548800 0x5BE5228: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_Deque_base(std::allocator<arcticdb::entity::AtomKeyImpl> const&, unsigned long) (stl_deque.h:447)
        n1: 548800 0x5BC8336: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::deque(std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> > const&) (stl_deque.h:898)
         n1: 548800 0x76AA17D: arcticdb::VersionMapEntry::VersionMapEntry(arcticdb::VersionMapEntry const&) (version_map_entry.hpp:223)
          n1: 548800 0x76AA260: decltype (::new ((void*)(0)) arcticdb::VersionMapEntry((declval<arcticdb::VersionMapEntry&>)())) std::construct_at<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (stl_construct.h:97)
           n1: 548800 0x76AA2C3: void std::allocator_traits<std::allocator<arcticdb::VersionMapEntry> >::construct<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>&, arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (alloc_traits.h:518)
            n1: 548800 0x76A36A9: std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&) (shared_ptr_base.h:519)
             n1: 548800 0x769827B: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:650)
              n1: 548800 0x7686003: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:1342)
               n1: 548800 0x766CB78: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr.h:409)
                n1: 548800 0x764FCDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry> const&, arcticdb::VersionMapEntry&) (shared_ptr.h:863)
                 n1: 548800 0x763263F: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry&) (shared_ptr.h:879)
                  n1: 548800 0x7618016: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:768)
                   n1: 548800 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
                    n0: 548800 in 2 places, all below massif's threshold (1.00%)
       n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 548400 0x7614AC7: void std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_push_front_aux<arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl const&) (deque.tcc:536)
      n1: 548400 0x7602A96: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::push_front(arcticdb::entity::AtomKeyImpl const&) (stl_deque.h:1469)
       n1: 548400 0x75F50BB: arcticdb::VersionMapEntry::unshift_key(arcticdb::entity::AtomKeyImpl const&) (version_map_entry.hpp:313)
        n1: 548400 0x7631832: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_to_entry(std::shared_ptr<arcticdb::VersionMapEntry> const&, arcticdb::entity::AtomKeyImpl const&, arcticdb::entity::AtomKeyImpl const&) const (version_map.hpp:665)
         n1: 548400 0x7616FCD: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::do_write(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::shared_ptr<arcticdb::VersionMapEntry> const&) (version_map.hpp:514)
          n1: 548400 0x76045B1: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:241)
           n1: 548400 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
            n1: 548400 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
             n1: 548400 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
              n1: 548400 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
               n1: 548400 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                n1: 548400 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                 n1: 548400 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n1: 548400 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                   n1: 548400 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                    n1: 548400 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                     n1: 548400 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                      n1: 548400 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                       n1: 548400 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                        n1: 548400 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                         n1: 548400 0x282B79: UnknownInlinedFun (abstract.h:114)
                          n1: 548400 0x282B79: UnknownInlinedFun (abstract.h:123)
                           n1: 548400 0x282B79: UnknownInlinedFun (ceval.c:5893)
                            n1: 548400 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                             n1: 548400 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 548400 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                               n1: 548400 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                n1: 548400 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                 n1: 548400 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                  n1: 548400 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                   n1: 548400 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                    n1: 548400 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                     n1: 548400 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                      n1: 548400 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 548400 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                        n1: 548400 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                         n1: 548400 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                          n1: 548400 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                           n1: 548400 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                            n1: 548400 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                             n1: 548400 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                              n1: 548400 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                               n1: 548400 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                n1: 548400 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                 n1: 548400 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                  n1: 548400 0x389AE7: run_eval_code_obj.lto_priv.0 (pythonrun.c:1291)
                                                   n0: 548400 0x3842EE: run_mod.lto_priv.0 (pythonrun.c:1312)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 889056 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 889056 0x5CD2546: allocate (allocator.h:185)
   n1: 889056 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 889056 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 889056 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 889056 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 889056 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 889056 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 889056 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 889056 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 889056 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 889056 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 889056 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 889056 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 889056 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 889056 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 889056 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 889056 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 889056 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 889056 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 889056 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 889056 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 889056 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 889056 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 889056 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 889056 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 889056 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 889056 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 889056 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 889056 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 889056 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 889056 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 889056 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 889056 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 889056 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 889056 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 889056 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 889056 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 889056 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 889056 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 889056 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 889056 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 889056 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 889056 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 889056 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 889056 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 889056 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 889056 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 889056 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 889056 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 889056 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n0: 804362 in 3 places, all below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 751723 in 5 places, all below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n1: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n0: 569816 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=45
#-----------
time=4894343239330
mem_heap_B=27303037
mem_heap_extra_B=1187699
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=4985232580918
mem_heap_B=26871456
mem_heap_extra_B=1195416
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=47
#-----------
time=5133479230620
mem_heap_B=46778445
mem_heap_extra_B=1217507
mem_stacks_B=0
heap_tree=peak
n13: 46778445 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 20084242 0x758E0E5: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 20084242 0x758E4A9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 19713424 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 11843968 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 11843968 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n2: 11843968 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 11803328 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 11803328 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 11803328 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 11803328 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 11803328 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 11803328 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 11803328 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 11803328 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 11803328 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 11803328 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 11803328 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 11803328 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 11803328 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 11803328 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 11803328 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 11803328 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 11803328 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 11803328 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 11803328 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 11803328 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 11803328 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BDBDA: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77AB386: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:336)
                            n1: 5901664 0x77DF2A6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::Aggregator<folly::Function<void (arcticdb::SegmentInMemory&&)> >(arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&, std::optional<arcticdb::entity::StreamDescriptor> const&, std::optional<unsigned long> const&) (aggregator.hpp:171)
                             n1: 5901664 0x77BD3B0: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::SegmentAggregator(folly::Function<void (arcticdb::pipelines::FrameSlice&&)>&&, arcticdb::stream::FixedSchema&&, folly::Function<void (arcticdb::SegmentInMemory&&)>&&, arcticdb::stream::RowCountSegmentPolicy&&) (segment_aggregator.hpp:48)
                              n0: 5901664 0x77AAE42: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:280)
       n0: 40640 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 7599120 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 7599120 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n6: 6126144 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n0: 1962944 in 8 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 840768 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 840768 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 840768 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 840768 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 840768 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 840768 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 840768 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 840768 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 840768 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 840768 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 840768 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 840768 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 40640 in 2 places, all below massif's threshold (1.00%)
       n1: 800128 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 800128 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 800128 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 800128 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 800128 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 800128 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 800128 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 800128 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 800128 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 800128 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 800128 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 800128 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 0 in 2 places, all below massif's threshold (1.00%)
      n1: 1472976 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 1472976 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 1472976 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 1472976 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 1472976 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 1472976 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 1472976 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 1472976 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 1472976 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 1472976 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 1472976 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                 n1: 1472976 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 1472976 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 1472976 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 1402246 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                     n1: 1402246 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                      n1: 1402246 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 1402246 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 1402246 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 1402246 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 1402246 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 1402246 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 1402246 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 1402246 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 1402246 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 70730 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 270336 in 2 places, all below massif's threshold (1.00%)
   n0: 370818 in 2 places, all below massif's threshold (1.00%)
 n0: 7084286 in 1153 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n3: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n1: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n0: 563568 in 3 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n0: 675288 in 8 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n2: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n0: 431908 in 6 places, all below massif's threshold (1.00%)
 n2: 1380939 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n2: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n1: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n0: 722816 in 6 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n0: 317209 in 17 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1536 in 26 places, all below massif's threshold (1.00%)
 n1: 1271600 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1271600 0x5C42BD7: allocate (allocator.h:185)
   n1: 1271600 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n3: 1271600 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n1: 636000 0x5C47C5E: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_create_nodes(arcticdb::entity::AtomKeyImpl**, arcticdb::entity::AtomKeyImpl**) (stl_deque.h:663)
      n2: 636000 0x5C08CB1: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_initialize_map(unsigned long) (stl_deque.h:637)
       n1: 636000 0x5BE5228: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_Deque_base(std::allocator<arcticdb::entity::AtomKeyImpl> const&, unsigned long) (stl_deque.h:447)
        n1: 636000 0x5BC8336: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::deque(std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> > const&) (stl_deque.h:898)
         n1: 636000 0x76AA17D: arcticdb::VersionMapEntry::VersionMapEntry(arcticdb::VersionMapEntry const&) (version_map_entry.hpp:223)
          n1: 636000 0x76AA260: decltype (::new ((void*)(0)) arcticdb::VersionMapEntry((declval<arcticdb::VersionMapEntry&>)())) std::construct_at<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (stl_construct.h:97)
           n1: 636000 0x76AA2C3: void std::allocator_traits<std::allocator<arcticdb::VersionMapEntry> >::construct<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>&, arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (alloc_traits.h:518)
            n1: 636000 0x76A36A9: std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&) (shared_ptr_base.h:519)
             n1: 636000 0x769827B: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:650)
              n1: 636000 0x7686003: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:1342)
               n1: 636000 0x766CB78: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr.h:409)
                n1: 636000 0x764FCDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry> const&, arcticdb::VersionMapEntry&) (shared_ptr.h:863)
                 n1: 636000 0x763263F: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry&) (shared_ptr.h:879)
                  n1: 636000 0x7618016: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:768)
                   n1: 636000 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
                    n0: 636000 in 2 places, all below massif's threshold (1.00%)
       n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 635600 0x7614AC7: void std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_push_front_aux<arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl const&) (deque.tcc:536)
      n1: 635600 0x7602A96: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::push_front(arcticdb::entity::AtomKeyImpl const&) (stl_deque.h:1469)
       n1: 635600 0x75F50BB: arcticdb::VersionMapEntry::unshift_key(arcticdb::entity::AtomKeyImpl const&) (version_map_entry.hpp:313)
        n1: 635600 0x7631832: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_to_entry(std::shared_ptr<arcticdb::VersionMapEntry> const&, arcticdb::entity::AtomKeyImpl const&, arcticdb::entity::AtomKeyImpl const&) const (version_map.hpp:665)
         n1: 635600 0x7616FCD: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::do_write(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::shared_ptr<arcticdb::VersionMapEntry> const&) (version_map.hpp:514)
          n1: 635600 0x76045B1: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:241)
           n1: 635600 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
            n1: 635600 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
             n1: 635600 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
              n1: 635600 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
               n1: 635600 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                n1: 635600 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                 n1: 635600 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n1: 635600 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                   n1: 635600 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                    n1: 635600 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                     n1: 635600 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                      n1: 635600 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                       n1: 635600 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                        n1: 635600 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                         n1: 635600 0x282B79: UnknownInlinedFun (abstract.h:114)
                          n1: 635600 0x282B79: UnknownInlinedFun (abstract.h:123)
                           n1: 635600 0x282B79: UnknownInlinedFun (ceval.c:5893)
                            n1: 635600 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                             n1: 635600 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 635600 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                               n1: 635600 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                n1: 635600 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                 n1: 635600 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                  n1: 635600 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                   n1: 635600 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                    n1: 635600 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                     n1: 635600 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                      n1: 635600 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 635600 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                        n1: 635600 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                         n1: 635600 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                          n1: 635600 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                           n1: 635600 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                            n1: 635600 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                             n1: 635600 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                              n1: 635600 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                               n1: 635600 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                n1: 635600 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                 n1: 635600 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                  n1: 635600 0x389AE7: run_eval_code_obj.lto_priv.0 (pythonrun.c:1291)
                                                   n0: 635600 0x3842EE: run_mod.lto_priv.0 (pythonrun.c:1312)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 1030320 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1030320 0x5CD2546: allocate (allocator.h:185)
   n1: 1030320 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 1030320 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 1030320 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 1030320 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 1030320 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 1030320 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 1030320 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 1030320 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 1030320 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 1030320 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 1030320 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 1030320 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 1030320 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 1030320 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 1030320 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 1030320 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 1030320 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 1030320 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 1030320 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 1030320 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 1030320 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 1030320 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 1030320 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 1030320 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 1030320 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 1030320 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 1030320 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 1030320 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 1030320 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1030320 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1030320 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 1030320 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 1030320 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 1030320 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 1030320 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 1030320 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 1030320 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 1030320 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 1030320 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 1030320 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 1030320 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 1030320 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 1030320 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1030320 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1030320 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1030320 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 1030320 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1030320 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 1030320 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n0: 804362 in 3 places, all below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 751723 in 5 places, all below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n1: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n0: 569816 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=48
#-----------
time=5220369487234
mem_heap_B=40596690
mem_heap_extra_B=1226518
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=49
#-----------
time=5359717588168
mem_heap_B=28113774
mem_heap_extra_B=1240906
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=5363581361591
mem_heap_B=26994892
mem_heap_extra_B=1257572
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=51
#-----------
time=5367445390486
mem_heap_B=34355741
mem_heap_extra_B=1244779
mem_stacks_B=0
heap_tree=detailed
n15: 34355741 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 7472302 0x758E0E5: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n2: 7472302 0x758E4A9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n2: 7469326 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 7403790 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 7371080 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n9: 5954688 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 808256 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 808256 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 808256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 808256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 808256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 808256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 808256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 808256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 808256 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 808256 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 808256 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 808256 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 8128 in 2 places, all below massif's threshold (1.00%)
       n1: 808256 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 808256 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 808256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 808256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 808256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 808256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 808256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 808256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 808256 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 808256 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 808256 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 808256 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 8128 in 2 places, all below massif's threshold (1.00%)
       n1: 808256 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 808256 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 808256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 808256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 808256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 808256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 808256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 808256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 808256 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 808256 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 808256 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 808256 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 8128 in 2 places, all below massif's threshold (1.00%)
       n1: 808256 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 808256 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 808256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 808256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 808256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 808256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 808256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 808256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 808256 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 808256 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 808256 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 808256 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 8128 in 2 places, all below massif's threshold (1.00%)
       n1: 808256 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 808256 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 808256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 808256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 808256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 808256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 808256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 808256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 808256 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 808256 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 808256 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 808256 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 800128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 800128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 800128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 800128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 800128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 800128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 800128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 800128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 800128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 800128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 800128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 800128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 800128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 8128 in 2 places, all below massif's threshold (1.00%)
       n0: 700640 in 5 places, all below massif's threshold (1.00%)
       n1: 404256 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 404256 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 404256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 404256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 404256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 404256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 404256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 404256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 404256 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 404256 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 404256 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 404256 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 400128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 400128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 400128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 400128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 400128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 400128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 400128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 400128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 400128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 400128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 400128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 400128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 400128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 400128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 4128 in 2 places, all below massif's threshold (1.00%)
       n1: 404256 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 404256 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 404256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 404256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 404256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 404256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 404256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 404256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 404256 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 404256 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 404256 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 404256 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 400128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 400128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 400128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 400128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 400128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 400128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 400128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 400128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 400128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 400128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 400128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 400128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 400128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 400128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 4128 in 2 places, all below massif's threshold (1.00%)
       n1: 404256 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 404256 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 404256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 404256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 404256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 404256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 404256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 404256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 404256 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                n1: 404256 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 404256 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 404256 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 400128 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                    n1: 400128 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                     n1: 400128 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                      n1: 400128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                       n1: 400128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                        n1: 400128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                         n1: 400128 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                          n1: 400128 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                           n1: 400128 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                            n1: 400128 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                             n1: 400128 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                              n1: 400128 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                               n1: 400128 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                n0: 400128 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                   n0: 4128 in 2 places, all below massif's threshold (1.00%)
      n1: 1416392 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 1416392 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 1416392 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 1416392 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 1416392 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 1416392 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 1416392 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 1416392 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 1416392 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 1416392 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 1416392 0x74B8E7F: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:428)
                 n1: 1416392 0x75062C0: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 1416392 0x7909BDE: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 1416392 0x7909C8A: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 1402246 0x7742826: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1647)
                     n1: 1402246 0x75C5626: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1025)
                      n1: 1402246 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 1402246 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 1402246 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 1402246 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 1402246 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 1402246 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 1402246 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 1402246 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n0: 1402246 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 14146 in 2 places, all below massif's threshold (1.00%)
     n0: 32710 in 1 place, below massif's threshold (1.00%)
    n0: 65536 in 3 places, all below massif's threshold (1.00%)
   n0: 2976 in 2 places, all below massif's threshold (1.00%)
 n0: 6001806 in 1151 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n3: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n2: 368912 0x274684: r_object (marshal.c:1215)
           n1: 368912 0x274241: r_object (marshal.c:1391)
            n0: 368912 in 8 places, all below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 179014 in 5 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n4: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 448400 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 448400 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 442736 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 442736 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 442736 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 442736 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 442736 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 442736 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 442736 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 442736 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                     n0: 5664 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 115168 in 2 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:2743)
          n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3155)
           n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3178)
            n1: 425784 0x28B5FB: type_new.lto_priv.0 (typeobject.c:3327)
             n0: 425784 in 4 places, all below massif's threshold (1.00%)
         n0: 249504 in 7 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n3: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n1: 376980 0x920D75B: thread_fn (thread.c:161)
       n1: 376980 0x4A2DAC2: start_thread (pthread_create.c:442)
        n0: 376980 0x4ABEA03: clone (clone.S:100)
      n0: 54928 in 5 places, all below massif's threshold (1.00%)
 n1: 1456400 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1456400 0x5C42BD7: allocate (allocator.h:185)
   n1: 1456400 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n3: 1456400 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n1: 728400 0x5C47C5E: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_create_nodes(arcticdb::entity::AtomKeyImpl**, arcticdb::entity::AtomKeyImpl**) (stl_deque.h:663)
      n2: 728400 0x5C08CB1: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_initialize_map(unsigned long) (stl_deque.h:637)
       n1: 728400 0x5BE5228: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_Deque_base(std::allocator<arcticdb::entity::AtomKeyImpl> const&, unsigned long) (stl_deque.h:447)
        n1: 728400 0x5BC8336: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::deque(std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> > const&) (stl_deque.h:898)
         n1: 728400 0x76AA17D: arcticdb::VersionMapEntry::VersionMapEntry(arcticdb::VersionMapEntry const&) (version_map_entry.hpp:223)
          n1: 728400 0x76AA260: decltype (::new ((void*)(0)) arcticdb::VersionMapEntry((declval<arcticdb::VersionMapEntry&>)())) std::construct_at<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (stl_construct.h:97)
           n1: 728400 0x76AA2C3: void std::allocator_traits<std::allocator<arcticdb::VersionMapEntry> >::construct<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>&, arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (alloc_traits.h:518)
            n1: 728400 0x76A36A9: std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&) (shared_ptr_base.h:519)
             n1: 728400 0x769827B: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:650)
              n1: 728400 0x7686003: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:1342)
               n1: 728400 0x766CB78: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr.h:409)
                n1: 728400 0x764FCDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry> const&, arcticdb::VersionMapEntry&) (shared_ptr.h:863)
                 n1: 728400 0x763263F: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry&) (shared_ptr.h:879)
                  n1: 728400 0x7618016: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:768)
                   n2: 728400 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
                    n1: 477200 0x760455B: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:239)
                     n1: 477200 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
                      n1: 477200 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
                       n1: 477200 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                        n1: 477200 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                         n1: 477200 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                          n1: 477200 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                           n1: 477200 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                            n1: 477200 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                             n1: 477200 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                              n1: 477200 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                               n0: 477200 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 251200 in 1 place, below massif's threshold (1.00%)
       n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 728000 0x7614AC7: void std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_push_front_aux<arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl const&) (deque.tcc:536)
      n1: 728000 0x7602A96: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::push_front(arcticdb::entity::AtomKeyImpl const&) (stl_deque.h:1469)
       n1: 728000 0x75F50BB: arcticdb::VersionMapEntry::unshift_key(arcticdb::entity::AtomKeyImpl const&) (version_map_entry.hpp:313)
        n1: 728000 0x7631832: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_to_entry(std::shared_ptr<arcticdb::VersionMapEntry> const&, arcticdb::entity::AtomKeyImpl const&, arcticdb::entity::AtomKeyImpl const&) const (version_map.hpp:665)
         n1: 728000 0x7616FCD: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::do_write(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::shared_ptr<arcticdb::VersionMapEntry> const&) (version_map.hpp:514)
          n1: 728000 0x76045B1: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:241)
           n1: 728000 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
            n1: 728000 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
             n1: 728000 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
              n1: 728000 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
               n1: 728000 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                n1: 728000 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                 n1: 728000 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n1: 728000 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                   n1: 728000 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                    n1: 728000 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                     n1: 728000 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                      n1: 728000 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                       n1: 728000 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                        n1: 728000 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                         n1: 728000 0x282B79: UnknownInlinedFun (abstract.h:114)
                          n1: 728000 0x282B79: UnknownInlinedFun (abstract.h:123)
                           n1: 728000 0x282B79: UnknownInlinedFun (ceval.c:5893)
                            n1: 728000 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                             n1: 728000 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 728000 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                               n1: 728000 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                n1: 728000 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                 n1: 728000 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                  n1: 728000 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                   n1: 728000 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                    n1: 728000 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                     n1: 728000 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                      n1: 728000 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 728000 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                        n1: 728000 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                         n1: 728000 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                          n1: 728000 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                           n1: 728000 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                            n1: 728000 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                             n1: 728000 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                              n1: 728000 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                               n1: 728000 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                n1: 728000 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                 n1: 728000 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                  n1: 728000 0x389AE7: run_eval_code_obj.lto_priv.0 (pythonrun.c:1291)
                                                   n0: 728000 0x3842EE: run_mod.lto_priv.0 (pythonrun.c:1312)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n2: 1380939 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n2: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n2: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n1: 396288 0x921EAB4: parse_array (cJSON.c:1529)
         n1: 396288 0x921E693: parse_value (cJSON.c:1382)
          n1: 396288 0x921F015: parse_object (cJSON.c:1710)
           n1: 396288 0x921E6DD: parse_value (cJSON.c:1387)
            n0: 396288 in 3 places, all below massif's threshold (1.00%)
        n0: 74496 in 2 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n0: 317209 in 17 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1536 in 26 places, all below massif's threshold (1.00%)
 n1: 1180008 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1180008 0x5CD2546: allocate (allocator.h:185)
   n1: 1180008 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 1180008 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 1180008 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 1180008 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 1180008 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 1180008 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 1180008 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 1180008 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 1180008 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 1180008 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 1180008 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 1180008 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 1180008 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 1180008 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 1180008 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 1180008 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 1180008 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 1180008 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 1180008 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 1180008 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 1180008 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 1180008 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 1180008 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 1180008 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 1180008 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 1180008 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 1180008 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 1180008 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 1180008 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1180008 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1180008 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 1180008 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 1180008 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 1180008 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 1180008 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 1180008 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 1180008 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 1180008 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 1180008 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 1180008 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 1180008 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 1180008 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 1180008 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1180008 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1180008 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1180008 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 1180008 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1180008 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 1180008 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n3: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n1: 431253 0x2B11DB: UnknownInlinedFun (unicodeobject.c:10402)
         n1: 431253 0x2B11DB: unicode_join.lto_priv.0 (unicodeobject.c:12779)
          n1: 431253 0x29E78A: method_vectorcall_O.lto_priv.0 (descrobject.c:460)
           n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:114)
            n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:123)
             n1: 431253 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
              n1: 431253 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
               n0: 431253 in 2 places, all below massif's threshold (1.00%)
        n1: 359305 0x2B12D5: PyUnicode_Join (unicodeobject.c:10402)
         n1: 359305 0x3B846E: pattern_subx.lto_priv.0 (_sre.c:1205)
          n1: 359305 0x3B7F37: UnknownInlinedFun (_sre.c:1244)
           n1: 359305 0x3B7F37: _sre_SRE_Pattern_sub.lto_priv.0 (_sre.c.h:680)
            n1: 359305 0x328763: method_vectorcall_FASTCALL_KEYWORDS_METHOD.lto_priv.0 (descrobject.c:365)
             n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:114)
              n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:123)
               n1: 359305 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                n1: 359305 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                 n1: 359305 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                  n1: 359305 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                   n1: 359305 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                    n0: 359305 in 2 places, all below massif's threshold (1.00%)
        n0: 13804 in 1 place, below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 751723 in 5 places, all below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n2: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3141)
         n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3178)
          n1: 388280 0x28A2C1: type_new.lto_priv.0 (typeobject.c:3327)
           n0: 388280 in 3 places, all below massif's threshold (1.00%)
        n0: 181536 in 5 places, all below massif's threshold (1.00%)
 n1: 540101 0x5997DE4: __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 540101 0x596D396: allocate (allocator.h:185)
   n2: 540101 0x596D396: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:464)
    n2: 540101 0x5982515: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:153)
     n2: 480131 0x59A5E7C: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:219)
      n1: 480096 0x599089B: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:255)
       n1: 480096 0x59757CA: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) (basic_string.h:274)
        n2: 480096 0x59645CD: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:459)
         n2: 475744 0x5A9EF61: arcticdb::entity::AtomKeyImpl::AtomKeyImpl(arcticdb::entity::AtomKeyImpl const&) (atom_key.hpp:43)
          n1: 373415 0x5BDEF13: decltype (::new ((void*)(0)) arcticdb::entity::AtomKeyImpl((declval<arcticdb::entity::AtomKeyImpl const&>)())) std::construct_at<arcticdb::entity::AtomKeyImpl, arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl*, arcticdb::entity::AtomKeyImpl const&) (stl_construct.h:97)
           n1: 373415 0x5BDEF76: void std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::construct<arcticdb::entity::AtomKeyImpl, arcticdb::entity::AtomKeyImpl const&>(std::allocator<arcticdb::entity::AtomKeyImpl>&, arcticdb::entity::AtomKeyImpl*, arcticdb::entity::AtomKeyImpl const&) (alloc_traits.h:518)
            n0: 373415 in 4 places, all below massif's threshold (1.00%)
          n0: 102329 in 9 places, all below massif's threshold (1.00%)
         n0: 4352 in 77 places, all below massif's threshold (1.00%)
      n0: 35 in 2 places, all below massif's threshold (1.00%)
     n0: 59970 in 9 places, all below massif's threshold (1.00%)
    n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:99)
  n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:572)
   n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1981)
    n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1974)
     n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:685)
      n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:2885)
       n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3074)
        n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3183)
         n2: 397127 0x28BC7F: type_new.lto_priv.0 (typeobject.c:3327)
          n1: 356016 0x289A96: UnknownInlinedFun (typeobject.c:1123)
           n1: 356016 0x289A96: _PyObject_MakeTpCall (call.c:215)
            n0: 356016 in 13 places, all below massif's threshold (1.00%)
          n0: 41111 in 1 place, below massif's threshold (1.00%)
#-----------
snapshot=52
#-----------
time=5371351435386
mem_heap_B=28153060
mem_heap_extra_B=1243484
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=53
#-----------
time=5375215155909
mem_heap_B=27101159
mem_heap_extra_B=1260233
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=54
#-----------
time=5379110459310
mem_heap_B=27911482
mem_heap_extra_B=1245070
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=5382974189161
mem_heap_B=40663791
mem_heap_extra_B=1251641
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=56
#-----------
time=5386837917054
mem_heap_B=27068818
mem_heap_extra_B=1259790
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=5390701642404
mem_heap_B=28335618
mem_heap_extra_B=1266014
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=58
#-----------
time=5394565377674
mem_heap_B=28474069
mem_heap_extra_B=1272291
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=59
#-----------
time=5398429105916
mem_heap_B=27113949
mem_heap_extra_B=1249843
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=60
#-----------
time=5402292826606
mem_heap_B=40741732
mem_heap_extra_B=1255356
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=5406156548002
mem_heap_B=27805290
mem_heap_extra_B=1250854
mem_stacks_B=0
heap_tree=detailed
n17: 27805290 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n0: 5078053 in 1149 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n3: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n2: 368912 0x274684: r_object (marshal.c:1215)
           n2: 368912 0x274241: r_object (marshal.c:1391)
            n1: 345437 0x27477A: r_object (marshal.c:1215)
             n2: 345437 0x274241: r_object (marshal.c:1391)
              n2: 344100 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 342003 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 342003 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 342003 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 342003 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 342003 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 342003 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 342003 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n2: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 338312 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 338312 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 338312 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 338312 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 338312 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 338312 in 4 places, all below massif's threshold (1.00%)
                                                            n0: 3691 in 1 place, below massif's threshold (1.00%)
               n0: 2097 in 1 place, below massif's threshold (1.00%)
              n0: 1337 in 2 places, all below massif's threshold (1.00%)
            n0: 23475 in 7 places, all below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 179014 in 5 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n4: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 448400 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 448400 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 442736 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 442736 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 442736 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 442736 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 442736 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 442736 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 442736 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 442736 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                     n0: 5664 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 115168 in 2 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:2743)
          n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3155)
           n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3178)
            n2: 425784 0x28B5FB: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 307576 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n1: 307576 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n0: 307576 in 5 places, all below massif's threshold (1.00%)
             n0: 118208 in 3 places, all below massif's threshold (1.00%)
         n0: 249504 in 7 places, all below massif's threshold (1.00%)
 n2: 1680989 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n2: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n2: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n1: 396288 0x921EAB4: parse_array (cJSON.c:1529)
         n1: 396288 0x921E693: parse_value (cJSON.c:1382)
          n1: 396288 0x921F015: parse_object (cJSON.c:1710)
           n2: 396288 0x921E6DD: parse_value (cJSON.c:1387)
            n1: 338688 0x921EAB4: parse_array (cJSON.c:1529)
             n1: 338688 0x921E693: parse_value (cJSON.c:1382)
              n1: 338688 0x921F015: parse_object (cJSON.c:1710)
               n2: 338688 0x921E6DD: parse_value (cJSON.c:1387)
                n1: 334208 0x921EAB4: parse_array (cJSON.c:1529)
                 n1: 334208 0x921E693: parse_value (cJSON.c:1382)
                  n1: 334208 0x921F015: parse_object (cJSON.c:1710)
                   n2: 334208 0x921E6DD: parse_value (cJSON.c:1387)
                    n1: 318336 0x921EAB4: parse_array (cJSON.c:1529)
                     n1: 318336 0x921E693: parse_value (cJSON.c:1382)
                      n1: 318336 0x921F015: parse_object (cJSON.c:1710)
                       n2: 318336 0x921E6DD: parse_value (cJSON.c:1387)
                        n1: 296832 0x921EAB4: parse_array (cJSON.c:1529)
                         n1: 296832 0x921E693: parse_value (cJSON.c:1382)
                          n1: 296832 0x921F015: parse_object (cJSON.c:1710)
                           n1: 296832 0x921E6DD: parse_value (cJSON.c:1387)
                            n0: 296832 in 2 places, all below massif's threshold (1.00%)
                        n0: 21504 in 1 place, below massif's threshold (1.00%)
                    n0: 15872 in 1 place, below massif's threshold (1.00%)
                n0: 4480 in 1 place, below massif's threshold (1.00%)
            n0: 57600 in 2 places, all below massif's threshold (1.00%)
        n0: 74496 in 2 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n0: 317209 in 17 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 301586 in 26 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n3: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n1: 376980 0x920D75B: thread_fn (thread.c:161)
       n1: 376980 0x4A2DAC2: start_thread (pthread_create.c:442)
        n0: 376980 0x4ABEA03: clone (clone.S:100)
      n0: 54928 in 5 places, all below massif's threshold (1.00%)
 n1: 1503600 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1503600 0x5C42BD7: allocate (allocator.h:185)
   n1: 1503600 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n3: 1503600 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n1: 752000 0x5C47C5E: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_create_nodes(arcticdb::entity::AtomKeyImpl**, arcticdb::entity::AtomKeyImpl**) (stl_deque.h:663)
      n2: 752000 0x5C08CB1: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_initialize_map(unsigned long) (stl_deque.h:637)
       n1: 752000 0x5BE5228: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_Deque_base(std::allocator<arcticdb::entity::AtomKeyImpl> const&, unsigned long) (stl_deque.h:447)
        n1: 752000 0x5BC8336: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::deque(std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> > const&) (stl_deque.h:898)
         n1: 752000 0x76AA17D: arcticdb::VersionMapEntry::VersionMapEntry(arcticdb::VersionMapEntry const&) (version_map_entry.hpp:223)
          n1: 752000 0x76AA260: decltype (::new ((void*)(0)) arcticdb::VersionMapEntry((declval<arcticdb::VersionMapEntry&>)())) std::construct_at<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (stl_construct.h:97)
           n1: 752000 0x76AA2C3: void std::allocator_traits<std::allocator<arcticdb::VersionMapEntry> >::construct<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>&, arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (alloc_traits.h:518)
            n1: 752000 0x76A36A9: std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&) (shared_ptr_base.h:519)
             n1: 752000 0x769827B: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:650)
              n1: 752000 0x7686003: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:1342)
               n1: 752000 0x766CB78: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr.h:409)
                n1: 752000 0x764FCDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry> const&, arcticdb::VersionMapEntry&) (shared_ptr.h:863)
                 n1: 752000 0x763263F: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry&) (shared_ptr.h:879)
                  n1: 752000 0x7618016: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:768)
                   n2: 752000 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
                    n1: 477200 0x760455B: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:239)
                     n1: 477200 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
                      n1: 477200 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
                       n1: 477200 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                        n1: 477200 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                         n1: 477200 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                          n1: 477200 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                           n1: 477200 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                            n1: 477200 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                             n1: 477200 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                              n1: 477200 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                               n0: 477200 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n0: 274800 in 1 place, below massif's threshold (1.00%)
       n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 751600 0x7614AC7: void std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_push_front_aux<arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl const&) (deque.tcc:536)
      n1: 751600 0x7602A96: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::push_front(arcticdb::entity::AtomKeyImpl const&) (stl_deque.h:1469)
       n1: 751600 0x75F50BB: arcticdb::VersionMapEntry::unshift_key(arcticdb::entity::AtomKeyImpl const&) (version_map_entry.hpp:313)
        n1: 751600 0x7631832: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_to_entry(std::shared_ptr<arcticdb::VersionMapEntry> const&, arcticdb::entity::AtomKeyImpl const&, arcticdb::entity::AtomKeyImpl const&) const (version_map.hpp:665)
         n1: 751600 0x7616FCD: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::do_write(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::shared_ptr<arcticdb::VersionMapEntry> const&) (version_map.hpp:514)
          n1: 751600 0x76045B1: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:241)
           n1: 751600 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
            n1: 751600 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
             n1: 751600 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
              n1: 751600 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
               n1: 751600 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                n1: 751600 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                 n1: 751600 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n1: 751600 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                   n1: 751600 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                    n1: 751600 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                     n1: 751600 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                      n1: 751600 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                       n1: 751600 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                        n1: 751600 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                         n1: 751600 0x282B79: UnknownInlinedFun (abstract.h:114)
                          n1: 751600 0x282B79: UnknownInlinedFun (abstract.h:123)
                           n1: 751600 0x282B79: UnknownInlinedFun (ceval.c:5893)
                            n1: 751600 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                             n1: 751600 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 751600 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                               n1: 751600 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                n1: 751600 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                 n1: 751600 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                  n1: 751600 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                   n1: 751600 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                    n1: 751600 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                     n1: 751600 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                      n1: 751600 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 751600 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                        n1: 751600 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                         n1: 751600 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                          n1: 751600 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                           n1: 751600 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                            n1: 751600 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                             n1: 751600 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                              n1: 751600 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                               n1: 751600 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                n1: 751600 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                 n1: 751600 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                  n1: 751600 0x389AE7: run_eval_code_obj.lto_priv.0 (pythonrun.c:1291)
                                                   n0: 751600 0x3842EE: run_mod.lto_priv.0 (pythonrun.c:1312)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 1218240 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1218240 0x5CD2546: allocate (allocator.h:185)
   n1: 1218240 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 1218240 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 1218240 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 1218240 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 1218240 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 1218240 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 1218240 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 1218240 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 1218240 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 1218240 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 1218240 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 1218240 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 1218240 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 1218240 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 1218240 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 1218240 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 1218240 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 1218240 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 1218240 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 1218240 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 1218240 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 1218240 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 1218240 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 1218240 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 1218240 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 1218240 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 1218240 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 1218240 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 1218240 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1218240 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1218240 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 1218240 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 1218240 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 1218240 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 1218240 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 1218240 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 1218240 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 1218240 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 1218240 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 1218240 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 1218240 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 1218240 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 1218240 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1218240 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1218240 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1218240 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 1218240 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1218240 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 1218240 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 1064506 0x5997DE4: __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1064506 0x596D396: allocate (allocator.h:185)
   n2: 1064506 0x596D396: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:464)
    n2: 1064506 0x5982515: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:153)
     n0: 569399 in 9 places, all below massif's threshold (1.00%)
     n2: 495107 0x59A5E7C: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:219)
      n1: 495072 0x599089B: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:255)
       n1: 495072 0x59757CA: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) (basic_string.h:274)
        n2: 495072 0x59645CD: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:459)
         n2: 490675 0x5A9EF61: arcticdb::entity::AtomKeyImpl::AtomKeyImpl(arcticdb::entity::AtomKeyImpl const&) (atom_key.hpp:43)
          n1: 385516 0x5BDEF13: decltype (::new ((void*)(0)) arcticdb::entity::AtomKeyImpl((declval<arcticdb::entity::AtomKeyImpl const&>)())) std::construct_at<arcticdb::entity::AtomKeyImpl, arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl*, arcticdb::entity::AtomKeyImpl const&) (stl_construct.h:97)
           n1: 385516 0x5BDEF76: void std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::construct<arcticdb::entity::AtomKeyImpl, arcticdb::entity::AtomKeyImpl const&>(std::allocator<arcticdb::entity::AtomKeyImpl>&, arcticdb::entity::AtomKeyImpl*, arcticdb::entity::AtomKeyImpl const&) (alloc_traits.h:518)
            n0: 385516 in 4 places, all below massif's threshold (1.00%)
          n0: 105159 in 9 places, all below massif's threshold (1.00%)
         n0: 4397 in 77 places, all below massif's threshold (1.00%)
      n0: 35 in 2 places, all below massif's threshold (1.00%)
    n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n3: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n1: 431253 0x2B11DB: UnknownInlinedFun (unicodeobject.c:10402)
         n1: 431253 0x2B11DB: unicode_join.lto_priv.0 (unicodeobject.c:12779)
          n1: 431253 0x29E78A: method_vectorcall_O.lto_priv.0 (descrobject.c:460)
           n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:114)
            n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:123)
             n1: 431253 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
              n1: 431253 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
               n0: 431253 in 2 places, all below massif's threshold (1.00%)
        n1: 359305 0x2B12D5: PyUnicode_Join (unicodeobject.c:10402)
         n1: 359305 0x3B846E: pattern_subx.lto_priv.0 (_sre.c:1205)
          n1: 359305 0x3B7F37: UnknownInlinedFun (_sre.c:1244)
           n1: 359305 0x3B7F37: _sre_SRE_Pattern_sub.lto_priv.0 (_sre.c.h:680)
            n1: 359305 0x328763: method_vectorcall_FASTCALL_KEYWORDS_METHOD.lto_priv.0 (descrobject.c:365)
             n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:114)
              n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:123)
               n1: 359305 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                n1: 359305 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                 n1: 359305 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                  n1: 359305 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                   n2: 359305 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                    n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 336581 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n2: 336581 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 336581 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 336581 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n2: 336581 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                            n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                             n1: 332119 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                              n1: 332119 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                               n0: 332119 in 4 places, all below massif's threshold (1.00%)
                           n0: 4462 in 1 place, below massif's threshold (1.00%)
                        n0: 0 in 3 places, all below massif's threshold (1.00%)
                    n0: 22724 in 1 place, below massif's threshold (1.00%)
        n0: 13804 in 1 place, below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 751723 in 5 places, all below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n2: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3141)
         n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3178)
          n2: 388280 0x28A2C1: type_new.lto_priv.0 (typeobject.c:3327)
           n1: 316672 0x289A96: UnknownInlinedFun (typeobject.c:1123)
            n1: 316672 0x289A96: _PyObject_MakeTpCall (call.c:215)
             n0: 316672 in 9 places, all below massif's threshold (1.00%)
           n0: 71608 in 2 places, all below massif's threshold (1.00%)
        n0: 181536 in 5 places, all below massif's threshold (1.00%)
 n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:99)
  n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:572)
   n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1981)
    n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1974)
     n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:685)
      n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:2885)
       n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3074)
        n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3183)
         n2: 397127 0x28BC7F: type_new.lto_priv.0 (typeobject.c:3327)
          n1: 356016 0x289A96: UnknownInlinedFun (typeobject.c:1123)
           n2: 356016 0x289A96: _PyObject_MakeTpCall (call.c:215)
            n1: 314925 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
             n1: 314925 0x287083: UnknownInlinedFun (call.c:166)
              n1: 314925 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
               n1: 314925 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                 n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                  n1: 314925 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                   n2: 314925 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                    n1: 312609 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 312609 0x362E55: _PyEval_Vector (ceval.c:5067)
                      n2: 312609 0x362D25: PyEval_EvalCode (ceval.c:1134)
                       n1: 311120 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                        n1: 311120 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                         n1: 311120 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                          n1: 311120 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                           n1: 311120 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                            n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:114)
                                n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:123)
                                 n1: 311120 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                  n1: 311120 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                   n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                       n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                        n1: 311120 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                         n1: 311120 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                          n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                     n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                      n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                       n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                        n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                         n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                          n2: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                           n1: 307477 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                            n1: 307477 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                             n1: 307477 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                              n1: 307477 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                               n1: 307477 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                n0: 307477 in 4 places, all below massif's threshold (1.00%)
                                                           n0: 3643 in 1 place, below massif's threshold (1.00%)
                       n0: 1489 in 1 place, below massif's threshold (1.00%)
                    n0: 2316 in 1 place, below massif's threshold (1.00%)
            n0: 41091 in 12 places, all below massif's threshold (1.00%)
          n0: 41111 in 1 place, below massif's threshold (1.00%)
 n1: 347896 0x4713D94A: _upb_Arena_SlowMalloc_dont_copy_me__upb_internal_use_only (in /home/alex/venvs/310/lib/python3.10/site-packages/google/_upb/_message.abi3.so)
  n0: 347896 in 30 places, all below massif's threshold (1.00%)
 n1: 296128 0x40DADD5D: arrow::compute::KernelSignature::Make(std::vector<arrow::compute::InputType, std::allocator<arrow::compute::InputType> >, arrow::compute::OutputType, bool) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/libarrow.so.1801)
  n0: 296128 in 200 places, all below massif's threshold (1.00%)
 n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:99)
  n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:572)
   n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1981)
    n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1974)
     n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:685)
      n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:126)
       n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:159)
        n1: 291693 0x275606: PyBytes_FromStringAndSize (bytesobject.c:139)
         n0: 291693 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=62
#-----------
time=5410020271134
mem_heap_B=34474327
mem_heap_extra_B=1254441
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=63
#-----------
time=5413883996367
mem_heap_B=40813291
mem_heap_extra_B=1259165
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=64
#-----------
time=5417748800474
mem_heap_B=40930843
mem_heap_extra_B=1260037
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=5421619585343
mem_heap_B=27505796
mem_heap_extra_B=1254612
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=66
#-----------
time=5425483311676
mem_heap_B=35746633
mem_heap_extra_B=1258079
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=67
#-----------
time=5429347049092
mem_heap_B=26981455
mem_heap_extra_B=1260849
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=68
#-----------
time=5433210787006
mem_heap_B=27019190
mem_heap_extra_B=1261842
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=69
#-----------
time=5437078571553
mem_heap_B=41022381
mem_heap_extra_B=1263171
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=70
#-----------
time=5440943336783
mem_heap_B=40866597
mem_heap_extra_B=1264683
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=71
#-----------
time=5444818024386
mem_heap_B=27318437
mem_heap_extra_B=1259779
mem_stacks_B=0
heap_tree=detailed
n17: 27318437 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n0: 4949308 in 1149 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n3: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n3: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n3: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n1: 1034595 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                  n1: 1034595 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                   n1: 1034595 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1034595 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                     n1: 1034595 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                      n1: 1034595 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                       n1: 1034595 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                        n1: 1034595 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                         n1: 1034595 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                          n0: 1034595 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                 n1: 843979 0x2B666B: builtin___import__.lto_priv.0 (bltinmodule.c:272)
                                                                  n2: 843979 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                                                                   n1: 840448 0x2A181A: UnknownInlinedFun (call.c:305)
                                                                    n1: 840448 0x2A181A: PyObject_Call (call.c:317)
                                                                     n1: 840448 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                      n1: 840448 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                       n1: 840448 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                        n1: 840448 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                         n1: 840448 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                          n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                                           n1: 840448 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                                            n1: 840448 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                                             n0: 840448 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                                   n0: 3531 in 1 place, below massif's threshold (1.00%)
                                                                 n0: 2890 in 2 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n1: 1734829 0x27477A: r_object (marshal.c:1215)
               n1: 1734829 0x274241: r_object (marshal.c:1391)
                n1: 1734829 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
                 n1: 1734829 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                  n1: 1734829 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                   n1: 1734829 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                    n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 1734829 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 1734829 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n1: 1734829 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                            n1: 1734829 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                             n1: 1734829 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                              n1: 1734829 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                               n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                   n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                    n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                     n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                      n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 1734829 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 1734829 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 1734829 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 1734829 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 1734829 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 1734829 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 1734829 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1734829 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 1734829 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 1734829 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 1734829 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 1734829 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 1734829 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 1734829 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 1558378 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 1558378 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 1554408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 1554408 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 1554408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 1554408 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n0: 1554408 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                     n0: 3970 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 176451 in 2 places, all below massif's threshold (1.00%)
              n0: 27016 in 3 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n2: 368912 0x274684: r_object (marshal.c:1215)
           n2: 368912 0x274241: r_object (marshal.c:1391)
            n1: 345437 0x27477A: r_object (marshal.c:1215)
             n2: 345437 0x274241: r_object (marshal.c:1391)
              n2: 344100 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 342003 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 342003 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 342003 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 342003 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 342003 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 342003 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 342003 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 342003 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 342003 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 342003 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 342003 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 342003 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 342003 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 342003 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 342003 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 342003 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 342003 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n2: 342003 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 338312 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 338312 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 338312 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 338312 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 338312 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 338312 in 4 places, all below massif's threshold (1.00%)
                                                            n0: 3691 in 1 place, below massif's threshold (1.00%)
               n0: 2097 in 1 place, below massif's threshold (1.00%)
              n0: 1337 in 2 places, all below massif's threshold (1.00%)
            n0: 23475 in 7 places, all below massif's threshold (1.00%)
           n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 179014 in 5 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n3: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n2: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 1505024 in 185 places, all below massif's threshold (1.00%)
          n1: 1070776 0x27EEB4: UnknownInlinedFun (dictobject.c:1623)
           n2: 1070776 0x27EEB4: _PyEval_EvalFrameDefault (ceval.c:2770)
            n1: 1070776 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
             n1: 1070776 0x362E55: _PyEval_Vector (ceval.c:5067)
              n2: 1070776 0x362D25: PyEval_EvalCode (ceval.c:1134)
               n1: 1067992 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                n1: 1067992 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                 n2: 1067992 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                  n1: 1063576 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                   n1: 1063576 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                    n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                      n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                       n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:114)
                        n1: 1063576 0x282B79: UnknownInlinedFun (abstract.h:123)
                         n1: 1063576 0x282B79: UnknownInlinedFun (ceval.c:5893)
                          n1: 1063576 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                           n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                            n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                             n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                              n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                               n1: 1063576 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                n1: 1063576 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                 n1: 1063576 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                  n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                   n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                    n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                     n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                      n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                       n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                        n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                         n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                          n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                           n1: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                            n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                             n1: 1063576 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                              n1: 1063576 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                               n1: 1063576 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                n1: 1063576 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                 n1: 1063576 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                  n2: 1063576 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                   n1: 1062464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                    n1: 1062464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                     n1: 1062464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                      n1: 1062464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                       n2: 1062464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                        n1: 824384 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                         n2: 824384 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                          n1: 819896 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                           n1: 819896 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                            n2: 819896 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                             n1: 817688 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                              n1: 817688 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                               n1: 817688 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                n1: 817688 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                 n1: 817688 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                  n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                   n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                    n1: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                                     n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:114)
                                                                      n1: 817688 0x282B79: UnknownInlinedFun (abstract.h:123)
                                                                       n1: 817688 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                                                        n1: 817688 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                                                         n1: 817688 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                          n1: 817688 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                           n0: 817688 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                             n0: 2208 in 1 place, below massif's threshold (1.00%)
                                                          n0: 4488 in 1 place, below massif's threshold (1.00%)
                                                        n0: 238080 in 6 places, all below massif's threshold (1.00%)
                                                   n0: 1112 in 1 place, below massif's threshold (1.00%)
                  n0: 4416 in 1 place, below massif's threshold (1.00%)
               n0: 2784 in 2 places, all below massif's threshold (1.00%)
            n0: 0 in 1 place, below massif's threshold (1.00%)
        n1: 1612080 0x25A05F: UnknownInlinedFun (dictobject.c:1060)
         n2: 1612080 0x25A05F: PyDict_SetDefault (dictobject.c:3067)
          n1: 1310744 0x25B39B: UnknownInlinedFun (unicodeobject.c:15894)
           n2: 1310744 0x25B39B: PyUnicode_InternFromString (unicodeobject.c:15943)
            n1: 1310744 0x45415974: __Pyx_CreateStringTabAndInitStrings() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
             n1: 1310744 0x454159C9: __Pyx_InitConstants() (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
              n1: 1310744 0x4541CB37: __pyx_pymod_exec__compute(_object*) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/_compute.cpython-310-x86_64-linux-gnu.so)
               n1: 1310744 0x3641D2: PyModule_ExecDef (moduleobject.c:407)
                n1: 1310744 0x364A3F: UnknownInlinedFun (import.c:2091)
                 n1: 1310744 0x364A3F: _imp_exec_builtin.lto_priv.0 (import.c.h:388)
                  n1: 1310744 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                   n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                    n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                     n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                      n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                       n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                        n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:114)
                         n1: 1310744 0x282B79: UnknownInlinedFun (abstract.h:123)
                          n1: 1310744 0x282B79: UnknownInlinedFun (ceval.c:5893)
                           n1: 1310744 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                            n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                n1: 1310744 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                 n1: 1310744 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                  n1: 1310744 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                       n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                        n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                         n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                          n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1310744 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1310744 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1310744 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 1310744 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                     n1: 1310744 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                      n1: 1310744 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                       n1: 1310744 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                        n1: 1310744 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                         n1: 1310744 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                          n1: 1310744 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                           n1: 1310744 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 1310744 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                             n1: 1310744 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                              n1: 1310744 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                               n1: 1310744 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                n1: 1310744 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                 n1: 1310744 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                  n1: 1310744 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n1: 1310744 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                                    n1: 1310744 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                                     n0: 1310744 0x293AEB: _PyFunction_Vectorcall (call.c:342)
            n0: 0 in 1 place, below massif's threshold (1.00%)
          n0: 301336 in 12 places, all below massif's threshold (1.00%)
        n0: 43000 in 1 place, below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n4: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:2743)
          n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3155)
           n1: 1027072 0x28AF3D: UnknownInlinedFun (typeobject.c:3178)
            n2: 1027072 0x28AF3D: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 796736 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 796736 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 573952 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 573952 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 573952 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 573952 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 573952 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 573952 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 573952 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 568288 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 568288 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n1: 568288 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 568288 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 568288 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 568288 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 563568 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 563568 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 563568 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 563568 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 563568 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 563568 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 563568 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 563568 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 563568 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 563568 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 563568 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 563568 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 563568 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n1: 563568 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 563568 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 563568 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 563568 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 563568 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 563568 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 448400 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n2: 448400 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 442736 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 442736 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 442736 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 442736 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 442736 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 442736 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 442736 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 442736 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                     n0: 5664 in 1 place, below massif's threshold (1.00%)
                                                                   n0: 115168 in 2 places, all below massif's threshold (1.00%)
                             n0: 4720 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 222784 in 9 places, all below massif's threshold (1.00%)
             n0: 230336 in 2 places, all below massif's threshold (1.00%)
         n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:2743)
          n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3155)
           n1: 910960 0x28A34A: UnknownInlinedFun (typeobject.c:3178)
            n2: 910960 0x28A34A: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 758032 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n2: 758032 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n1: 673072 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
                n1: 673072 0x287083: UnknownInlinedFun (call.c:166)
                 n1: 673072 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
                  n1: 673072 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                   n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                    n1: 673072 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                     n1: 673072 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                      n2: 673072 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                       n1: 667408 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                        n1: 667408 0x362E55: _PyEval_Vector (ceval.c:5067)
                         n2: 667408 0x362D25: PyEval_EvalCode (ceval.c:1134)
                          n1: 659856 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                           n1: 659856 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                            n2: 659856 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                             n1: 652304 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                              n1: 652304 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                               n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                 n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                  n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:114)
                                   n1: 652304 0x282B79: UnknownInlinedFun (abstract.h:123)
                                    n1: 652304 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                     n1: 652304 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                      n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                        n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                         n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                          n1: 652304 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                           n1: 652304 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                            n1: 652304 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                             n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                              n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                               n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                 n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                  n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                   n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                    n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                     n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                      n1: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                       n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                        n1: 652304 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                         n1: 652304 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                          n1: 652304 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                           n1: 652304 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                            n1: 652304 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                             n2: 652304 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                              n1: 651360 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                               n1: 651360 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                                n1: 651360 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                                 n1: 651360 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                  n2: 651360 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                   n1: 498432 0x280636: UnknownInlinedFun (ceval.c:6018)
                                                                    n1: 498432 0x280636: _PyEval_EvalFrameDefault (ceval.c:3695)
                                                                     n1: 498432 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                                      n1: 498432 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                                       n1: 498432 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                                        n1: 498432 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                                                                         n1: 498432 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                                                                          n1: 498432 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                                                                           n1: 498432 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                                                                            n0: 498432 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                                                                   n0: 152928 in 4 places, all below massif's threshold (1.00%)
                                                              n0: 944 in 1 place, below massif's threshold (1.00%)
                             n0: 7552 in 1 place, below massif's threshold (1.00%)
                          n0: 7552 in 1 place, below massif's threshold (1.00%)
                       n0: 5664 in 3 places, all below massif's threshold (1.00%)
               n0: 84960 in 22 places, all below massif's threshold (1.00%)
             n0: 152928 in 5 places, all below massif's threshold (1.00%)
         n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:2743)
          n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3155)
           n1: 425784 0x28B5FB: UnknownInlinedFun (typeobject.c:3178)
            n2: 425784 0x28B5FB: type_new.lto_priv.0 (typeobject.c:3327)
             n1: 307576 0x289A96: UnknownInlinedFun (typeobject.c:1123)
              n1: 307576 0x289A96: _PyObject_MakeTpCall (call.c:215)
               n0: 307576 in 5 places, all below massif's threshold (1.00%)
             n0: 118208 in 3 places, all below massif's threshold (1.00%)
         n0: 249504 in 7 places, all below massif's threshold (1.00%)
 n1: 1600546 0x4013E4D: malloc (rtld-malloc.h:56)
  n1: 1600546 0x4013E4D: allocate_dtv_entry (dl-tls.c:684)
   n1: 1600546 0x4013E4D: allocate_and_init (dl-tls.c:709)
    n1: 1600546 0x4013E4D: tls_get_addr_tail (dl-tls.c:907)
     n3: 1600546 0x401820B: __tls_get_addr (tls_get_addr.S:55)
      n1: 1168638 0x830E09A: folly::getOSThreadID() (ThreadId.cpp:83)
       n2: 1168638 0x826DB2D: folly::ThreadPoolListHook::registerThread() (GlobalThreadPoolList.cpp:236)
        n1: 1130940 0x8273D51: folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (IOThreadPoolExecutor.cpp:228)
         n1: 1130940 0x828A5B8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
          n1: 1130940 0x828986E: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
           n1: 1130940 0x828879F: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
            n1: 1130940 0x82874A6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
             n1: 1130940 0x8285D1D: void folly::detail::function::FunctionTraits<void ()>::callSmall<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) (Function.h:345)
              n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
               n1: 1130940 0x59EAC0E: arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (task_scheduler.hpp:70)
                n1: 1130940 0x59EE2DD: void folly::detail::function::FunctionTraits<void ()>::callBig<arcticdb::async::InstrumentedNamedFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                 n1: 1130940 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                  n1: 1130940 0x59EA5A2: folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (NamedThreadFactory.h:40)
                   n1: 1130940 0x59F4A97: void std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:61)
                    n1: 1130940 0x59F4A52: std::__invoke_result<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>::type std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (invoke.h:96)
                     n1: 1130940 0x59F49F3: void std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:259)
                      n1: 1130940 0x59F4923: std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (std_thread.h:266)
                       n1: 1130940 0x59F483D: std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
                        n1: 1130940 0xAA4D252: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
                         n1: 1130940 0x4A2DAC2: start_thread (pthread_create.c:442)
                          n0: 1130940 0x4ABEA03: clone (clone.S:100)
        n0: 37698 in 1 place, below massif's threshold (1.00%)
      n1: 376980 0x920D75B: thread_fn (thread.c:161)
       n1: 376980 0x4A2DAC2: start_thread (pthread_create.c:442)
        n0: 376980 0x4ABEA03: clone (clone.S:100)
      n0: 54928 in 5 places, all below massif's threshold (1.00%)
 n1: 1566000 0x5C9E580: __gnu_cxx::new_allocator<arcticdb::entity::AtomKeyImpl>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1566000 0x5C42BD7: allocate (allocator.h:185)
   n1: 1566000 0x5C42BD7: std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::allocate(std::allocator<arcticdb::entity::AtomKeyImpl>&, unsigned long) (alloc_traits.h:464)
    n3: 1566000 0x5C07E89: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_allocate_node() (stl_deque.h:562)
     n1: 783200 0x5C47C5E: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_create_nodes(arcticdb::entity::AtomKeyImpl**, arcticdb::entity::AtomKeyImpl**) (stl_deque.h:663)
      n2: 783200 0x5C08CB1: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_initialize_map(unsigned long) (stl_deque.h:637)
       n1: 783200 0x5BE5228: std::_Deque_base<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_Deque_base(std::allocator<arcticdb::entity::AtomKeyImpl> const&, unsigned long) (stl_deque.h:447)
        n1: 783200 0x5BC8336: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::deque(std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> > const&) (stl_deque.h:898)
         n1: 783200 0x76AA17D: arcticdb::VersionMapEntry::VersionMapEntry(arcticdb::VersionMapEntry const&) (version_map_entry.hpp:223)
          n1: 783200 0x76AA260: decltype (::new ((void*)(0)) arcticdb::VersionMapEntry((declval<arcticdb::VersionMapEntry&>)())) std::construct_at<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (stl_construct.h:97)
           n1: 783200 0x76AA2C3: void std::allocator_traits<std::allocator<arcticdb::VersionMapEntry> >::construct<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>&, arcticdb::VersionMapEntry*, arcticdb::VersionMapEntry&) (alloc_traits.h:518)
            n1: 783200 0x76A36A9: std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&) (shared_ptr_base.h:519)
             n1: 783200 0x769827B: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:650)
              n1: 783200 0x7686003: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr_base.h:1342)
               n1: 783200 0x766CB78: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >, arcticdb::VersionMapEntry&) (shared_ptr.h:409)
                n1: 783200 0x764FCDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, arcticdb::VersionMapEntry&>(std::allocator<arcticdb::VersionMapEntry> const&, arcticdb::VersionMapEntry&) (shared_ptr.h:863)
                 n1: 783200 0x763263F: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry, arcticdb::VersionMapEntry&>(arcticdb::VersionMapEntry&) (shared_ptr.h:879)
                  n1: 783200 0x7618016: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:768)
                   n2: 783200 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
                    n1: 477200 0x760455B: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:239)
                     n1: 477200 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
                      n1: 477200 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
                       n1: 477200 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                        n1: 477200 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                         n1: 477200 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                          n1: 477200 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                           n1: 477200 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                            n1: 477200 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                             n1: 477200 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                              n1: 477200 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                               n0: 477200 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                    n1: 306000 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
                     n1: 306000 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
                      n1: 306000 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                       n1: 306000 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                        n1: 306000 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                         n1: 306000 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                          n1: 306000 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                           n1: 306000 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                            n1: 306000 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                             n1: 306000 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                              n1: 306000 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                               n1: 306000 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                                n1: 306000 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                                 n0: 306000 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
       n0: 0 in 2 places, all below massif's threshold (1.00%)
     n1: 782800 0x7614AC7: void std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::_M_push_front_aux<arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl const&) (deque.tcc:536)
      n1: 782800 0x7602A96: std::deque<arcticdb::entity::AtomKeyImpl, std::allocator<arcticdb::entity::AtomKeyImpl> >::push_front(arcticdb::entity::AtomKeyImpl const&) (stl_deque.h:1469)
       n1: 782800 0x75F50BB: arcticdb::VersionMapEntry::unshift_key(arcticdb::entity::AtomKeyImpl const&) (version_map_entry.hpp:313)
        n1: 782800 0x7631832: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_to_entry(std::shared_ptr<arcticdb::VersionMapEntry> const&, arcticdb::entity::AtomKeyImpl const&, arcticdb::entity::AtomKeyImpl const&) const (version_map.hpp:665)
         n1: 782800 0x7616FCD: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::do_write(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::shared_ptr<arcticdb::VersionMapEntry> const&) (version_map.hpp:514)
          n1: 782800 0x76045B1: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::write_version(std::shared_ptr<arcticdb::Store>, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (version_map.hpp:241)
           n1: 782800 0x75C6D21: arcticdb::version_store::LocalVersionedEngine::write_version_and_prune_previous(bool, arcticdb::entity::AtomKeyImpl const&, std::optional<arcticdb::entity::AtomKeyImpl> const&) (local_versioned_engine.cpp:1151)
            n1: 782800 0x75C568A: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1028)
             n1: 782800 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
              n1: 782800 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
               n1: 782800 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                n1: 782800 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                 n1: 782800 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                  n1: 782800 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                   n1: 782800 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                    n1: 782800 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                     n1: 782800 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                      n1: 782800 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                       n1: 782800 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                        n1: 782800 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                         n1: 782800 0x282B79: UnknownInlinedFun (abstract.h:114)
                          n1: 782800 0x282B79: UnknownInlinedFun (abstract.h:123)
                           n1: 782800 0x282B79: UnknownInlinedFun (ceval.c:5893)
                            n1: 782800 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                             n1: 782800 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 782800 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                               n1: 782800 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                n1: 782800 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                 n1: 782800 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                  n1: 782800 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                   n1: 782800 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                    n1: 782800 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                     n1: 782800 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                      n1: 782800 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                       n1: 782800 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                        n1: 782800 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                         n1: 782800 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                          n1: 782800 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                           n1: 782800 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                            n1: 782800 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                             n1: 782800 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                              n1: 782800 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                               n1: 782800 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                n1: 782800 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                 n1: 782800 0x362D25: PyEval_EvalCode (ceval.c:1134)
                                                  n1: 782800 0x389AE7: run_eval_code_obj.lto_priv.0 (pythonrun.c:1291)
                                                   n0: 782800 0x3842EE: run_mod.lto_priv.0 (pythonrun.c:1312)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n2: 1381331 0x8E342FD: Aws::Malloc(char const*, unsigned long) (AWSMemory.cpp:146)
  n2: 1379403 0x8E34389: Aws::MemAcquire(aws_allocator*, unsigned long) (AWSMemory.cpp:179)
   n2: 1166979 0x91F3858: aws_mem_acquire (allocator.c:177)
    n2: 849770 0x9207A3C: s_aws_cJSON_alloc (json.c:366)
     n2: 722816 0x921C72A: cJSON_New_Item (cJSON.c:253)
      n1: 470784 0x921EECF: parse_object (cJSON.c:1664)
       n2: 470784 0x921E6DD: parse_value (cJSON.c:1387)
        n1: 396288 0x921EAB4: parse_array (cJSON.c:1529)
         n1: 396288 0x921E693: parse_value (cJSON.c:1382)
          n1: 396288 0x921F015: parse_object (cJSON.c:1710)
           n2: 396288 0x921E6DD: parse_value (cJSON.c:1387)
            n1: 338688 0x921EAB4: parse_array (cJSON.c:1529)
             n1: 338688 0x921E693: parse_value (cJSON.c:1382)
              n1: 338688 0x921F015: parse_object (cJSON.c:1710)
               n2: 338688 0x921E6DD: parse_value (cJSON.c:1387)
                n1: 334208 0x921EAB4: parse_array (cJSON.c:1529)
                 n1: 334208 0x921E693: parse_value (cJSON.c:1382)
                  n1: 334208 0x921F015: parse_object (cJSON.c:1710)
                   n2: 334208 0x921E6DD: parse_value (cJSON.c:1387)
                    n1: 318336 0x921EAB4: parse_array (cJSON.c:1529)
                     n1: 318336 0x921E693: parse_value (cJSON.c:1382)
                      n1: 318336 0x921F015: parse_object (cJSON.c:1710)
                       n2: 318336 0x921E6DD: parse_value (cJSON.c:1387)
                        n1: 296832 0x921EAB4: parse_array (cJSON.c:1529)
                         n1: 296832 0x921E693: parse_value (cJSON.c:1382)
                          n1: 296832 0x921F015: parse_object (cJSON.c:1710)
                           n1: 296832 0x921E6DD: parse_value (cJSON.c:1387)
                            n0: 296832 in 2 places, all below massif's threshold (1.00%)
                        n0: 21504 in 1 place, below massif's threshold (1.00%)
                    n0: 15872 in 1 place, below massif's threshold (1.00%)
                n0: 4480 in 1 place, below massif's threshold (1.00%)
            n0: 57600 in 2 places, all below massif's threshold (1.00%)
        n0: 74496 in 2 places, all below massif's threshold (1.00%)
      n0: 252032 in 5 places, all below massif's threshold (1.00%)
     n0: 126954 in 4 places, all below massif's threshold (1.00%)
    n0: 317209 in 17 places, all below massif's threshold (1.00%)
   n0: 212424 in 2 places, all below massif's threshold (1.00%)
  n0: 1928 in 26 places, all below massif's threshold (1.00%)
 n1: 1268784 0x5D078EA: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1268784 0x5CD2546: allocate (allocator.h:185)
   n1: 1268784 0x5CD2546: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:464)
    n2: 1268784 0x5CBE2B3: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:98)
     n1: 1268784 0x5CA55A1: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(arcticdb::VersionMapEntry*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:648)
      n1: 1268784 0x5C790F7: std::__shared_ptr<arcticdb::VersionMapEntry, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr_base.h:1342)
       n1: 1268784 0x5C4C484: std::shared_ptr<arcticdb::VersionMapEntry>::shared_ptr<std::allocator<arcticdb::VersionMapEntry>>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::VersionMapEntry> >) (shared_ptr.h:409)
        n1: 1268784 0x5C0BBDB: std::shared_ptr<arcticdb::VersionMapEntry> std::allocate_shared<arcticdb::VersionMapEntry, std::allocator<arcticdb::VersionMapEntry>>(std::allocator<arcticdb::VersionMapEntry> const&) (shared_ptr.h:863)
         n1: 1268784 0x5BE819A: std::shared_ptr<arcticdb::VersionMapEntry> std::make_shared<arcticdb::VersionMapEntry>() (shared_ptr.h:879)
          n1: 1268784 0x5BE7951: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::get_entry(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_map.hpp:719)
           n1: 1268784 0x7617EC8: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::storage_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&) (version_map.hpp:761)
            n1: 1268784 0x7604C10: arcticdb::VersionMapImpl<arcticdb::util::SysClock>::check_reload(std::shared_ptr<arcticdb::Store>, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, arcticdb::LoadStrategy const&, char const*) (version_map.hpp:497)
             n1: 1268784 0x75F89BF: arcticdb::get_latest_undeleted_version_and_next_version_id(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::VersionMapImpl<arcticdb::util::SysClock> > const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&) (version_functions.hpp:44)
              n1: 1268784 0x75C5478: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1014)
               n1: 1268784 0x78470A9: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                n1: 1268784 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                 n1: 1268784 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                  n1: 1268784 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 1268784 0x5C2FD29: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::operator()(pybind11::detail::function_call&) const (pybind11.h:249)
                    n1: 1268784 0x5C303A7: pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}, arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(pybind11::cpp_function::initialize<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&&, arcticdb::VersionedItem (*)(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call&) (pybind11.h:224)
                     n1: 1268784 0x5954A5B: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) (pybind11.h:929)
                      n1: 1268784 0x293281: cfunction_call.lto_priv.0 (methodobject.c:543)
                       n1: 1268784 0x289B4A: _PyObject_MakeTpCall (call.c:215)
                        n1: 1268784 0x2A0EBA: UnknownInlinedFun (abstract.h:112)
                         n1: 1268784 0x2A0EBA: UnknownInlinedFun (abstract.h:99)
                          n1: 1268784 0x2A0EBA: method_vectorcall.lto_priv.0 (classobject.c:53)
                           n1: 1268784 0x282B79: UnknownInlinedFun (abstract.h:114)
                            n1: 1268784 0x282B79: UnknownInlinedFun (abstract.h:123)
                             n1: 1268784 0x282B79: UnknownInlinedFun (ceval.c:5893)
                              n1: 1268784 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                               n1: 1268784 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                n1: 1268784 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                 n1: 1268784 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                  n1: 1268784 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                   n1: 1268784 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                    n1: 1268784 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                     n1: 1268784 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                      n1: 1268784 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                       n1: 1268784 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                        n1: 1268784 0x2A0BE0: UnknownInlinedFun (pycore_ceval.h:46)
                                         n1: 1268784 0x2A0BE0: UnknownInlinedFun (ceval.c:5067)
                                          n1: 1268784 0x2A0BE0: UnknownInlinedFun (call.c:342)
                                           n1: 1268784 0x2A0BE0: UnknownInlinedFun (abstract.h:114)
                                            n1: 1268784 0x2A0BE0: method_vectorcall.lto_priv.0 (classobject.c:53)
                                             n1: 1268784 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                                              n1: 1268784 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                                               n1: 1268784 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 1268784 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                                                 n1: 1268784 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 1268784 0x362E55: _PyEval_Vector (ceval.c:5067)
                                                   n0: 1268784 0x362D25: PyEval_EvalCode (ceval.c:1134)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 893112 0x5997DE4: __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 893112 0x596D396: allocate (allocator.h:185)
   n2: 893112 0x596D396: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:464)
    n2: 893112 0x5982515: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) (basic_string.tcc:153)
     n2: 515762 0x59A5E7C: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:219)
      n1: 515727 0x599089B: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:255)
       n1: 515727 0x59757CA: void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*) (basic_string.h:274)
        n2: 515727 0x59645CD: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:459)
         n2: 511099 0x5A9EF61: arcticdb::entity::AtomKeyImpl::AtomKeyImpl(arcticdb::entity::AtomKeyImpl const&) (atom_key.hpp:43)
          n1: 401535 0x5BDEF13: decltype (::new ((void*)(0)) arcticdb::entity::AtomKeyImpl((declval<arcticdb::entity::AtomKeyImpl const&>)())) std::construct_at<arcticdb::entity::AtomKeyImpl, arcticdb::entity::AtomKeyImpl const&>(arcticdb::entity::AtomKeyImpl*, arcticdb::entity::AtomKeyImpl const&) (stl_construct.h:97)
           n1: 401535 0x5BDEF76: void std::allocator_traits<std::allocator<arcticdb::entity::AtomKeyImpl> >::construct<arcticdb::entity::AtomKeyImpl, arcticdb::entity::AtomKeyImpl const&>(std::allocator<arcticdb::entity::AtomKeyImpl>&, arcticdb::entity::AtomKeyImpl*, arcticdb::entity::AtomKeyImpl const&) (alloc_traits.h:518)
            n0: 401535 in 4 places, all below massif's threshold (1.00%)
          n0: 109564 in 9 places, all below massif's threshold (1.00%)
         n0: 4628 in 77 places, all below massif's threshold (1.00%)
      n0: 35 in 2 places, all below massif's threshold (1.00%)
     n0: 377350 in 9 places, all below massif's threshold (1.00%)
    n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:99)
  n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:572)
   n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1981)
    n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:1974)
     n1: 830035 0x258A68: UnknownInlinedFun (obmalloc.c:685)
      n1: 830035 0x258A68: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 830035 0x258A68: unicode_decode_utf8.lto_priv.0 (unicodeobject.c:5203)
        n0: 830035 in 28 places, all below massif's threshold (1.00%)
 n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:99)
  n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:572)
   n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1981)
    n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:1974)
     n1: 804362 0x2B1CA7: UnknownInlinedFun (obmalloc.c:685)
      n1: 804362 0x2B1CA7: UnknownInlinedFun (unicodeobject.c:1463)
       n3: 804362 0x2B1CA7: _PyUnicode_JoinArray (unicodeobject.c:10510)
        n1: 431253 0x2B11DB: UnknownInlinedFun (unicodeobject.c:10402)
         n1: 431253 0x2B11DB: unicode_join.lto_priv.0 (unicodeobject.c:12779)
          n1: 431253 0x29E78A: method_vectorcall_O.lto_priv.0 (descrobject.c:460)
           n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:114)
            n1: 431253 0x27DAE7: UnknownInlinedFun (abstract.h:123)
             n1: 431253 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
              n1: 431253 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
               n0: 431253 in 2 places, all below massif's threshold (1.00%)
        n1: 359305 0x2B12D5: PyUnicode_Join (unicodeobject.c:10402)
         n1: 359305 0x3B846E: pattern_subx.lto_priv.0 (_sre.c:1205)
          n1: 359305 0x3B7F37: UnknownInlinedFun (_sre.c:1244)
           n1: 359305 0x3B7F37: _sre_SRE_Pattern_sub.lto_priv.0 (_sre.c.h:680)
            n1: 359305 0x328763: method_vectorcall_FASTCALL_KEYWORDS_METHOD.lto_priv.0 (descrobject.c:365)
             n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:114)
              n1: 359305 0x27DAE7: UnknownInlinedFun (abstract.h:123)
               n1: 359305 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                n1: 359305 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                 n1: 359305 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                  n1: 359305 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                   n2: 359305 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                    n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:114)
                     n1: 336581 0x282B79: UnknownInlinedFun (abstract.h:123)
                      n1: 336581 0x282B79: UnknownInlinedFun (ceval.c:5893)
                       n2: 336581 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                        n1: 336581 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                         n1: 336581 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                          n2: 336581 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                           n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                            n1: 332119 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                             n1: 332119 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                              n1: 332119 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                               n0: 332119 in 4 places, all below massif's threshold (1.00%)
                           n0: 4462 in 1 place, below massif's threshold (1.00%)
                        n0: 0 in 3 places, all below massif's threshold (1.00%)
                    n0: 22724 in 1 place, below massif's threshold (1.00%)
        n0: 13804 in 1 place, below massif's threshold (1.00%)
 n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:121)
  n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:590)
   n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2352)
    n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:2340)
     n1: 751723 0x299E71: UnknownInlinedFun (obmalloc.c:703)
      n1: 751723 0x299E71: resize_compact.lto_priv.0 (unicodeobject.c:1079)
       n0: 751723 in 5 places, all below massif's threshold (1.00%)
 n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:99)
  n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:572)
   n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1981)
    n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:1974)
     n1: 569816 0x273173: UnknownInlinedFun (obmalloc.c:685)
      n1: 569816 0x273173: UnknownInlinedFun (dictobject.c:709)
       n2: 569816 0x273173: PyDict_Copy (dictobject.c:2811)
        n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3141)
         n1: 388280 0x28A2C1: UnknownInlinedFun (typeobject.c:3178)
          n2: 388280 0x28A2C1: type_new.lto_priv.0 (typeobject.c:3327)
           n1: 316672 0x289A96: UnknownInlinedFun (typeobject.c:1123)
            n1: 316672 0x289A96: _PyObject_MakeTpCall (call.c:215)
             n0: 316672 in 9 places, all below massif's threshold (1.00%)
           n0: 71608 in 2 places, all below massif's threshold (1.00%)
        n0: 181536 in 5 places, all below massif's threshold (1.00%)
 n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:99)
  n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:572)
   n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1981)
    n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:1974)
     n1: 397127 0x28BC7F: UnknownInlinedFun (obmalloc.c:685)
      n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:2885)
       n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3074)
        n1: 397127 0x28BC7F: UnknownInlinedFun (typeobject.c:3183)
         n2: 397127 0x28BC7F: type_new.lto_priv.0 (typeobject.c:3327)
          n1: 356016 0x289A96: UnknownInlinedFun (typeobject.c:1123)
           n2: 356016 0x289A96: _PyObject_MakeTpCall (call.c:215)
            n1: 314925 0x288EA2: _PyObject_FastCallDictTstate (call.c:142)
             n1: 314925 0x287083: UnknownInlinedFun (call.c:166)
              n1: 314925 0x287083: builtin___build_class__.lto_priv.0 (bltinmodule.c:224)
               n1: 314925 0x286C1E: cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (methodobject.c:446)
                n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                 n1: 314925 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                  n1: 314925 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                   n2: 314925 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                    n1: 312609 0x362E55: UnknownInlinedFun (pycore_ceval.h:46)
                     n1: 312609 0x362E55: _PyEval_Vector (ceval.c:5067)
                      n2: 312609 0x362D25: PyEval_EvalCode (ceval.c:1134)
                       n1: 311120 0x36844C: UnknownInlinedFun (bltinmodule.c:1058)
                        n1: 311120 0x36844C: builtin_exec.lto_priv.0 (bltinmodule.c.h:371)
                         n1: 311120 0x293D48: cfunction_vectorcall_FASTCALL.lto_priv.0 (methodobject.c:430)
                          n1: 311120 0x283EEC: UnknownInlinedFun (ceval.c:5917)
                           n1: 311120 0x283EEC: _PyEval_EvalFrameDefault (ceval.c:4277)
                            n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                             n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                              n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                               n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:114)
                                n1: 311120 0x282B79: UnknownInlinedFun (abstract.h:123)
                                 n1: 311120 0x282B79: UnknownInlinedFun (ceval.c:5893)
                                  n1: 311120 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                                   n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                    n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                     n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                      n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                       n1: 311120 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                        n1: 311120 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                         n1: 311120 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                          n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                           n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                            n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                             n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                              n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                               n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                 n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                  n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                   n1: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                    n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                     n1: 311120 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                      n1: 311120 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                       n1: 311120 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                        n1: 311120 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                         n1: 311120 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                          n2: 311120 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                           n1: 307477 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                            n1: 307477 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                             n1: 307477 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                              n1: 307477 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                               n1: 307477 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                n0: 307477 in 4 places, all below massif's threshold (1.00%)
                                                           n0: 3643 in 1 place, below massif's threshold (1.00%)
                       n0: 1489 in 1 place, below massif's threshold (1.00%)
                    n0: 2316 in 1 place, below massif's threshold (1.00%)
            n0: 41091 in 12 places, all below massif's threshold (1.00%)
          n0: 41111 in 1 place, below massif's threshold (1.00%)
 n1: 347896 0x4713D94A: _upb_Arena_SlowMalloc_dont_copy_me__upb_internal_use_only (in /home/alex/venvs/310/lib/python3.10/site-packages/google/_upb/_message.abi3.so)
  n0: 347896 in 30 places, all below massif's threshold (1.00%)
 n1: 296128 0x40DADD5D: arrow::compute::KernelSignature::Make(std::vector<arrow::compute::InputType, std::allocator<arrow::compute::InputType> >, arrow::compute::OutputType, bool) (in /home/alex/venvs/310/lib/python3.10/site-packages/pyarrow/libarrow.so.1801)
  n0: 296128 in 200 places, all below massif's threshold (1.00%)
 n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:99)
  n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:572)
   n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1981)
    n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:1974)
     n1: 291693 0x275606: UnknownInlinedFun (obmalloc.c:685)
      n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:126)
       n1: 291693 0x275606: UnknownInlinedFun (bytesobject.c:159)
        n2: 291693 0x275606: PyBytes_FromStringAndSize (bytesobject.c:139)
         n2: 289484 0x273E97: r_object (marshal.c:1110)
          n1: 286739 0x27422C: r_object (marshal.c:1388)
           n0: 286739 in 8 places, all below massif's threshold (1.00%)
          n0: 2745 in 3 places, all below massif's threshold (1.00%)
         n0: 2209 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=72
#-----------
time=5448681751074
mem_heap_B=34486107
mem_heap_extra_B=1263973
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=73
#-----------
time=5452546735490
mem_heap_B=36404937
mem_heap_extra_B=1264991
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=74
#-----------
time=5456410456636
mem_heap_B=40825461
mem_heap_extra_B=1269499
mem_stacks_B=0
heap_tree=empty
