desc: (none)
cmd: python test_mem_finalize.py
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=22941556681
mem_heap_B=182325753
mem_heap_extra_B=987063
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=2
#-----------
time=54558854471
mem_heap_B=90097033
mem_heap_extra_B=974935
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=3
#-----------
time=76016317696
mem_heap_B=183085534
mem_heap_extra_B=999370
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=4
#-----------
time=106628287092
mem_heap_B=182926853
mem_heap_extra_B=998907
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=5
#-----------
time=136810103178
mem_heap_B=255987240
mem_heap_extra_B=1019448
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=6
#-----------
time=154910723434
mem_heap_B=182918142
mem_heap_extra_B=997762
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=7
#-----------
time=185909248380
mem_heap_B=329412159
mem_heap_extra_B=1024361
mem_stacks_B=0
heap_tree=peak
n4: 329412159 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 306027836 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n3: 306027836 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 159349858 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 153349890 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 153349890 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 123904992 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 16800384 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 16800384 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 16800384 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 16800384 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 16800384 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 8400384 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8400384 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 8400384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8400384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8400384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8400384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8400384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8400384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8400384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8400384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8400384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 8400384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 4000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 4000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 4000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 4000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 4000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 4000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 4000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 4000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 4000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 4000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 400128 in 1 place, below massif's threshold (1.00%)
       n1: 8400384 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8400384 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 8400384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8400384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8400384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8400384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8400384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8400384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8400384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8400384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8400384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 8400384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 4000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 4000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 4000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 4000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 4000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 4000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 4000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 4000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 4000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 4000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 400128 in 1 place, below massif's threshold (1.00%)
       n1: 8400384 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8400384 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 8400384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8400384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8400384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8400384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8400384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8400384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8400384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8400384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8400384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 8400384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 4000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 4000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 4000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 4000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 4000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 4000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 4000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 4000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 4000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 4000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 400128 in 1 place, below massif's threshold (1.00%)
       n0: 6301152 in 3 places, all below massif's threshold (1.00%)
       n1: 4200384 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4200384 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 4200384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4200384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4200384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4200384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4200384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4200384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4200384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4200384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4200384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 4200384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 4200384 in 3 places, all below massif's threshold (1.00%)
       n1: 4200384 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4200384 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 4200384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4200384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4200384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4200384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4200384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4200384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4200384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4200384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4200384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 4200384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 4200384 in 3 places, all below massif's threshold (1.00%)
      n1: 29444898 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 29444898 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 29444898 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 29444898 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 29444898 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 29444898 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 29444898 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 29444898 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 29444898 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 29444898 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 29444898 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 29444898 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 29444898 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 29444898 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 14021326 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 14021326 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 14021326 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 14021326 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 14021326 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 14021326 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 14021326 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 14021326 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 14021326 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 14021326 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n1: 14021326 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                     n1: 14021326 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                      n1: 14021326 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                       n1: 14021326 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                        n1: 14021326 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                         n1: 14021326 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                          n1: 14021326 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                           n1: 14021326 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                            n1: 14021326 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                             n1: 14021326 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                              n0: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                    n0: 1402246 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 5901664 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 5901664 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 5901664 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 5901664 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 5901664 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 5901664 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 5901664 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 5901664 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 5901664 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 5901664 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 5901664 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 5901664 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 5901664 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 5901664 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 5901664 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 5901664 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 5901664 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 5901664 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 5901664 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 5901664 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 5901664 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 5901664 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 5901664 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 5901664 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 98304 in 2 places, all below massif's threshold (1.00%)
   n1: 146677978 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 146677978 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 146618586 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 146617546 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 146617546 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 146617546 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 146617546 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 146617546 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 146617546 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 146617546 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 146617546 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 146617546 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 146617546 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n2: 146617546 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 146617546 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n2: 146617546 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 146617546 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 146617546 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 146617546 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 146617546 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 146617546 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 146617546 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 146617546 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 146617546 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 146617546 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 146617546 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 146617546 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 146617546 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 146617546 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 146617546 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
                 n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 1040 in 2 places, all below massif's threshold (1.00%)
     n0: 59392 in 5 places, all below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 14627067 in 1142 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n1: 3646405 0x274241: r_object (marshal.c:1391)
              n0: 3646405 in 5 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n1: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n0: 4230880 in 3 places, all below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=8
#-----------
time=221487889479
mem_heap_B=256027740
mem_heap_extra_B=1020828
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=9
#-----------
time=243339573671
mem_heap_B=256035053
mem_heap_extra_B=1021027
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=10
#-----------
time=276883806967
mem_heap_B=183137506
mem_heap_extra_B=1003758
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=11
#-----------
time=299576642349
mem_heap_B=91818290
mem_heap_extra_B=975990
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=12
#-----------
time=323219209777
mem_heap_B=256066733
mem_heap_extra_B=1022659
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=358372668360
mem_heap_B=256062670
mem_heap_extra_B=1022498
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=388962431338
mem_heap_B=256046227
mem_heap_extra_B=1021549
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=15
#-----------
time=418529481862
mem_heap_B=183150716
mem_heap_extra_B=1004524
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=16
#-----------
time=436010169536
mem_heap_B=183020458
mem_heap_extra_B=1003918
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=467187613222
mem_heap_B=329474535
mem_heap_extra_B=1028545
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=18
#-----------
time=511480376984
mem_heap_B=183546783
mem_heap_extra_B=1004377
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=19
#-----------
time=537699463635
mem_heap_B=183004011
mem_heap_extra_B=1002917
mem_stacks_B=0
heap_tree=detailed
n5: 183004011 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 159651097 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n3: 159651097 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 86310484 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 80326900 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 80326900 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 64903328 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 8800256 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n0: 3300768 in 3 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
      n1: 15423572 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 15423572 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 15423572 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 15423572 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 15423572 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 15423572 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 15423572 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 15423572 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 15423572 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 15423572 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 15423572 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 15423572 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 15423572 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 15423572 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 14021326 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 14021326 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 14021326 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 14021326 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 14021326 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 14021326 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 14021326 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 14021326 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 14021326 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 14021326 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n0: 1402246 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 5901664 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 5901664 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 5901664 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 5901664 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 5901664 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 5901664 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 5901664 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 5901664 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 5901664 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 5901664 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 5901664 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 5901664 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 5901664 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 5901664 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 5901664 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 5901664 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 5901664 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 5901664 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 5901664 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 5901664 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 5901664 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 5901664 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 5901664 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 5901664 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 81920 in 2 places, all below massif's threshold (1.00%)
   n1: 73340613 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 73340613 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 73309501 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 73308773 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 73308773 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 73308773 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 73308773 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 73308773 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 73308773 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 73308773 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 73308773 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 73308773 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 73308773 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n2: 73308773 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 73308773 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n2: 73308773 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 73308773 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 73308773 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 73308773 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 73308773 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 73308773 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 73308773 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 73308773 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 73308773 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 73308773 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 73308773 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 73308773 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 73308773 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 73308773 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 73308773 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
                 n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 728 in 2 places, all below massif's threshold (1.00%)
     n0: 31112 in 5 places, all below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 11982338 in 1141 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n2: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1881464 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1761845 in 4 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n2: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2575800 in 186 places, all below massif's threshold (1.00%)
        n0: 1655080 in 2 places, all below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2613320 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=20
#-----------
time=573244044227
mem_heap_B=183024202
mem_heap_extra_B=1004486
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=21
#-----------
time=617523005704
mem_heap_B=183033903
mem_heap_extra_B=1004257
mem_stacks_B=0
heap_tree=detailed
n5: 183033903 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 159651097 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n3: 159651097 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 86310484 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 80326900 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 80326900 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 64903328 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 8800256 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n0: 3300768 in 3 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
      n1: 15423572 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 15423572 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 15423572 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 15423572 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 15423572 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 15423572 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 15423572 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 15423572 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 15423572 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 15423572 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 15423572 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 15423572 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 15423572 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 15423572 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 14021326 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 14021326 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 14021326 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 14021326 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 14021326 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 14021326 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 14021326 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 14021326 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 14021326 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 14021326 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n0: 1402246 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 5901664 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 5901664 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 5901664 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 5901664 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 5901664 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 5901664 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 5901664 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 5901664 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 5901664 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 5901664 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 5901664 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 5901664 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 5901664 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 5901664 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 5901664 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 5901664 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 5901664 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 5901664 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 5901664 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 5901664 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 5901664 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 5901664 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 5901664 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 5901664 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 81920 in 2 places, all below massif's threshold (1.00%)
   n1: 73340613 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 73340613 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 73309501 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 73308773 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 73308773 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 73308773 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 73308773 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 73308773 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 73308773 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 73308773 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 73308773 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 73308773 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 73308773 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n2: 73308773 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 73308773 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n2: 73308773 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 73308773 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 73308773 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 73308773 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 73308773 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 73308773 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 73308773 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 73308773 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 73308773 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 73308773 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 73308773 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 73308773 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 73308773 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 73308773 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 73308773 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
                 n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 728 in 2 places, all below massif's threshold (1.00%)
     n0: 31112 in 5 places, all below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 12012230 in 1141 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n2: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1881464 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1761845 in 4 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n2: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2575800 in 186 places, all below massif's threshold (1.00%)
        n0: 1655080 in 2 places, all below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2613320 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=22
#-----------
time=657426337994
mem_heap_B=183035447
mem_heap_extra_B=1004473
mem_stacks_B=0
heap_tree=detailed
n5: 183035447 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 159651097 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n3: 159651097 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 86310484 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 80326900 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 80326900 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 64903328 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 8800256 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n0: 3300768 in 3 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
      n1: 15423572 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 15423572 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 15423572 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 15423572 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 15423572 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 15423572 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 15423572 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 15423572 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 15423572 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 15423572 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 15423572 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 15423572 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 15423572 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 15423572 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 14021326 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 14021326 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 14021326 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 14021326 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 14021326 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 14021326 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 14021326 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 14021326 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 14021326 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 14021326 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n0: 1402246 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 5901664 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 5901664 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 5901664 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 5901664 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 5901664 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 5901664 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 5901664 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 5901664 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 5901664 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 5901664 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 5901664 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 5901664 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 5901664 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 5901664 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 5901664 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 5901664 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 5901664 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 5901664 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 5901664 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 5901664 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 5901664 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 5901664 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 5901664 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 5901664 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 81920 in 2 places, all below massif's threshold (1.00%)
   n1: 73340613 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 73340613 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 73309501 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 73308773 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 73308773 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 73308773 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 73308773 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 73308773 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 73308773 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 73308773 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 73308773 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 73308773 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 73308773 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n2: 73308773 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 73308773 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n2: 73308773 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 73308773 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 73308773 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 73308773 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 73308773 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 73308773 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 73308773 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 73308773 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 73308773 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 73308773 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 73308773 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 73308773 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 73308773 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 73308773 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 73308773 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
                 n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 728 in 2 places, all below massif's threshold (1.00%)
     n0: 31112 in 5 places, all below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 12013774 in 1141 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n2: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1881464 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1761845 in 4 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n2: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2575800 in 186 places, all below massif's threshold (1.00%)
        n0: 1655080 in 2 places, all below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2613320 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=23
#-----------
time=689078770414
mem_heap_B=98834627
mem_heap_extra_B=980605
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=24
#-----------
time=714807323639
mem_heap_B=183301798
mem_heap_extra_B=1005274
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=25
#-----------
time=750331095907
mem_heap_B=183301823
mem_heap_extra_B=1005385
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=26
#-----------
time=794589930310
mem_heap_B=183106383
mem_heap_extra_B=1005393
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=812070925016
mem_heap_B=183109108
mem_heap_extra_B=1005588
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=28
#-----------
time=843214911142
mem_heap_B=183567003
mem_heap_extra_B=1005341
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=860694982658
mem_heap_B=183051578
mem_heap_extra_B=1005142
mem_stacks_B=0
heap_tree=detailed
n5: 183051578 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 159651097 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n3: 159651097 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 86310484 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 80326900 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 80326900 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 64903328 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 8800256 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n0: 3300768 in 3 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
      n1: 15423572 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 15423572 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 15423572 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 15423572 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 15423572 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 15423572 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 15423572 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 15423572 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 15423572 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 15423572 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 15423572 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 15423572 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 15423572 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 15423572 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 14021326 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 14021326 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 14021326 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 14021326 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 14021326 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 14021326 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 14021326 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 14021326 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 14021326 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 14021326 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n0: 1402246 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 5901664 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 5901664 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 5901664 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 5901664 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 5901664 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 5901664 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 5901664 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 5901664 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 5901664 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 5901664 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 5901664 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 5901664 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 5901664 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 5901664 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 5901664 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 5901664 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 5901664 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 5901664 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 5901664 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 5901664 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 5901664 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 5901664 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 5901664 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 5901664 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 81920 in 2 places, all below massif's threshold (1.00%)
   n1: 73340613 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 73340613 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 73309501 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 73308773 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 73308773 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 73308773 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 73308773 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 73308773 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 73308773 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 73308773 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 73308773 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 73308773 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 73308773 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n2: 73308773 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 73308773 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n2: 73308773 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 73308773 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 73308773 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 73308773 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 73308773 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 73308773 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 73308773 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 73308773 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 73308773 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 73308773 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 73308773 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 73308773 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 73308773 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 73308773 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 73308773 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
                 n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 728 in 2 places, all below massif's threshold (1.00%)
     n0: 31112 in 5 places, all below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 12029905 in 1141 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n2: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1881464 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1761845 in 4 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n2: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2575800 in 186 places, all below massif's threshold (1.00%)
        n0: 1655080 in 2 places, all below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2613320 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=30
#-----------
time=891834014012
mem_heap_B=183085669
mem_heap_extra_B=1005715
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=913685284081
mem_heap_B=183318009
mem_heap_extra_B=1005935
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=32
#-----------
time=943083396184
mem_heap_B=183579608
mem_heap_extra_B=1005696
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=962297095119
mem_heap_B=256092692
mem_heap_extra_B=1025492
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=34
#-----------
time=991692119701
mem_heap_B=183056202
mem_heap_extra_B=1005406
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=35
#-----------
time=1027915698115
mem_heap_B=93337856
mem_heap_extra_B=979368
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=36
#-----------
time=1055852997277
mem_heap_B=235166332
mem_heap_extra_B=1020188
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=37
#-----------
time=1079144268791
mem_heap_B=183039779
mem_heap_extra_B=1003077
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=1110144281498
mem_heap_B=256114080
mem_heap_extra_B=1024752
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=39
#-----------
time=1133123405786
mem_heap_B=183060048
mem_heap_extra_B=1005912
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=1165451579681
mem_heap_B=183337521
mem_heap_extra_B=1006679
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=41
#-----------
time=1188044851668
mem_heap_B=177814840
mem_heap_extra_B=1003224
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=42
#-----------
time=1218880371912
mem_heap_B=92326813
mem_heap_extra_B=978387
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=1243408781803
mem_heap_B=183338307
mem_heap_extra_B=1006909
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=44
#-----------
time=1283248763525
mem_heap_B=183109427
mem_heap_extra_B=1006805
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=45
#-----------
time=1317694752013
mem_heap_B=90523331
mem_heap_extra_B=979549
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=1349304052549
mem_heap_B=183080307
mem_heap_extra_B=1006589
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=47
#-----------
time=1379378371185
mem_heap_B=256100035
mem_heap_extra_B=1024101
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=1414220826128
mem_heap_B=93321950
mem_heap_extra_B=978738
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=49
#-----------
time=1445426856340
mem_heap_B=256138216
mem_heap_extra_B=1026464
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=1445834825776
mem_heap_B=256142280
mem_heap_extra_B=1026488
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=51
#-----------
time=1446440421354
mem_heap_B=183355004
mem_heap_extra_B=1007564
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=52
#-----------
time=1448176450426
mem_heap_B=183355131
mem_heap_extra_B=1007605
mem_stacks_B=0
heap_tree=detailed
n5: 183355131 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 159651097 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n3: 159651097 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 86310484 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 80326900 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 80326900 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 64903328 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 8800256 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 8800256 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8800256 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 8800256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8800256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8800256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8800256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8800256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8800256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8800256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8800256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8800256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 8800256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 800128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n1: 4400256 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4400256 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 4400256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4400256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4400256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4400256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4400256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4400256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4400256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4400256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4400256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 4400256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 400128 in 2 places, all below massif's threshold (1.00%)
       n0: 3300768 in 3 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
       n1: 2200256 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 2200256 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 2200256 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 2200256 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 2200256 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 2200256 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 2200256 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 2200256 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 2200256 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 2200256 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 2200256 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n2: 2200256 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 2000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 2000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 2000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 2000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 2000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 2000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 2000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 2000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 2000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 2000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 2000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 2000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n0: 200128 in 2 places, all below massif's threshold (1.00%)
      n1: 15423572 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 15423572 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 15423572 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 15423572 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 15423572 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 15423572 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 15423572 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 15423572 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 15423572 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 15423572 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 15423572 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 15423572 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 15423572 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n2: 15423572 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 14021326 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 14021326 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 14021326 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 14021326 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 14021326 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 14021326 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 14021326 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 14021326 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 14021326 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 14021326 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n0: 1402246 in 2 places, all below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 5901664 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 5901664 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 5901664 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 5901664 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 5901664 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 5901664 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 5901664 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 5901664 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 5901664 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 5901664 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 5901664 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 5901664 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 5901664 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 5901664 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 5901664 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 5901664 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 5901664 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 5901664 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 5901664 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 5901664 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 5901664 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 5901664 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 5901664 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 5901664 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 81920 in 2 places, all below massif's threshold (1.00%)
   n1: 73340613 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 73340613 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 73309501 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 73308773 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 73308773 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 73308773 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 73308773 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 73308773 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 73308773 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 73308773 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 73308773 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 73308773 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 73308773 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n2: 73308773 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 73308773 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n2: 73308773 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 73308773 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 73308773 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 73308773 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 73308773 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 73308773 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 73308773 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 73308773 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 73308773 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 73308773 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 73308773 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 73308773 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 73308773 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 73308773 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 73308773 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
                 n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 728 in 2 places, all below massif's threshold (1.00%)
     n0: 31112 in 5 places, all below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 12333458 in 1141 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n2: 3646405 0x274241: r_object (marshal.c:1391)
              n2: 1884560 0x36235F: read_object.lto_priv.0 (marshal.c:1486)
               n1: 1881464 0x3710A4: UnknownInlinedFun (marshal.c:1795)
                n1: 1881464 0x3710A4: marshal_loads.lto_priv.0 (marshal.c.h:148)
                 n1: 1881464 0x292CC3: cfunction_vectorcall_O.lto_priv.0 (methodobject.c:516)
                  n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:114)
                   n1: 1881464 0x282B79: UnknownInlinedFun (abstract.h:123)
                    n1: 1881464 0x282B79: UnknownInlinedFun (ceval.c:5893)
                     n1: 1881464 0x282B79: _PyEval_EvalFrameDefault (ceval.c:4181)
                      n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                       n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                        n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                         n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:114)
                          n1: 1881464 0x27ECF1: UnknownInlinedFun (abstract.h:123)
                           n1: 1881464 0x27ECF1: UnknownInlinedFun (ceval.c:5893)
                            n1: 1881464 0x27ECF1: _PyEval_EvalFrameDefault (ceval.c:4231)
                             n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                              n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                               n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                 n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                  n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                   n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                    n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                     n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                      n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                       n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:114)
                                        n1: 1881464 0x27DAE7: UnknownInlinedFun (abstract.h:123)
                                         n1: 1881464 0x27DAE7: UnknownInlinedFun (ceval.c:5893)
                                          n1: 1881464 0x27DAE7: _PyEval_EvalFrameDefault (ceval.c:4198)
                                           n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                            n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                             n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                              n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                               n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                 n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                  n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                   n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                    n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                     n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:114)
                                                      n1: 1881464 0x27D9A1: UnknownInlinedFun (abstract.h:123)
                                                       n1: 1881464 0x27D9A1: UnknownInlinedFun (ceval.c:5893)
                                                        n1: 1881464 0x27D9A1: _PyEval_EvalFrameDefault (ceval.c:4213)
                                                         n1: 1881464 0x293AEB: UnknownInlinedFun (pycore_ceval.h:46)
                                                          n1: 1881464 0x293AEB: UnknownInlinedFun (ceval.c:5067)
                                                           n1: 1881464 0x293AEB: _PyFunction_Vectorcall (call.c:342)
                                                            n1: 1881464 0x292F93: UnknownInlinedFun (abstract.h:114)
                                                             n1: 1881464 0x292F93: object_vacall.lto_priv.0 (call.c:734)
                                                              n1: 1881464 0x367E2E: _PyObject_CallMethodIdObjArgs (call.c:825)
                                                               n1: 1881464 0x2A6834: UnknownInlinedFun (import.c:1522)
                                                                n1: 1881464 0x2A6834: PyImport_ImportModuleLevelObject (import.c:1623)
                                                                 n0: 1881464 in 4 places, all below massif's threshold (1.00%)
               n0: 3096 in 1 place, below massif's threshold (1.00%)
              n0: 1761845 in 4 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n2: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2575800 in 186 places, all below massif's threshold (1.00%)
        n0: 1655080 in 2 places, all below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2613320 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=53
#-----------
time=1448476671216
mem_heap_B=178203443
mem_heap_extra_B=1003861
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=54
#-----------
time=1448802567569
mem_heap_B=194197029
mem_heap_extra_B=1010603
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=1449797099643
mem_heap_B=256139688
mem_heap_extra_B=1026184
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=56
#-----------
time=1450205105930
mem_heap_B=256143752
mem_heap_extra_B=1026208
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=1450810488011
mem_heap_B=183126056
mem_heap_extra_B=1007520
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=58
#-----------
time=1452546610881
mem_heap_B=183126183
mem_heap_extra_B=1007513
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=59
#-----------
time=1452846815462
mem_heap_B=178203897
mem_heap_extra_B=1003831
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=60
#-----------
time=1453173033493
mem_heap_B=194197466
mem_heap_extra_B=1010678
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=1454167480733
mem_heap_B=256141186
mem_heap_extra_B=1026254
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=62
#-----------
time=1454575491389
mem_heap_B=256145250
mem_heap_extra_B=1026262
mem_stacks_B=0
heap_tree=detailed
n5: 256145250 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 232706455 0x758E805: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::internal_alloc(unsigned long) (allocator.cpp:195)
  n3: 232706455 0x758EBC9: arcticdb::AllocatorImpl<arcticdb::NullTracingPolicy, arcticdb::util::LinearClock>::aligned_alloc(unsigned long, bool) (allocator.cpp:304)
   n3: 159337570 0x59864A1: arcticdb::ChunkedBufferImpl<3968ul>::add_block(unsigned long, unsigned long) (chunked_buffer.hpp:369)
    n2: 153349890 0x596F573: arcticdb::ChunkedBufferImpl<3968ul>::ensure(unsigned long, bool) (chunked_buffer.hpp:208)
     n2: 153349890 0x59FD466: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::ensure_bytes(unsigned long) (cursored_buffer.hpp:57)
      n11: 123904992 0x5DC9A2B: arcticdb::Column::allocate_data(unsigned long) (column.hpp:536)
       n1: 16800384 0x5DD39AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)12>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8D80: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:28)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 16800384 0x5DD502E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)20>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8DC4: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:32)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 16800384 0x5DD5B6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)28>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8DE6: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:34)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 16800384 0x5DD66AE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)44>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8E08: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:36)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 16800384 0x5DD7D2E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)92>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 16800384 0x5DD8E4C: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:40)
         n1: 16800384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 16800384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 16800384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 16800384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 16800384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 16800384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 16800384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 16800384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 16800384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 16800384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 8000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 8000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 8000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 8000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 8000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 8000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 8000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 8000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 8000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 8000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 8000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 8000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 8000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 8000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 8000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 8000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 8000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 8000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 8000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 8000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 8000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 8000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 800128 in 1 place, below massif's threshold (1.00%)
       n1: 8400384 0x5DD340E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)11>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8400384 0x5DD8D6F: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:27)
         n1: 8400384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8400384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8400384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8400384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8400384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8400384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8400384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8400384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8400384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 8400384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 4000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 4000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 4000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 4000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 4000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 4000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 4000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 4000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 4000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 4000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 400128 in 1 place, below massif's threshold (1.00%)
       n1: 8400384 0x5DD4A8E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)19>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8400384 0x5DD8DB3: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:31)
         n1: 8400384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8400384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8400384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8400384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8400384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8400384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8400384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8400384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8400384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 8400384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 4000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 4000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 4000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 4000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 4000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 4000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 4000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 4000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 4000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 4000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 400128 in 1 place, below massif's threshold (1.00%)
       n1: 8400384 0x5DD55CE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)27>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 8400384 0x5DD8DD5: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:33)
         n1: 8400384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 8400384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 8400384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 8400384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 8400384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 8400384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 8400384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 8400384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 8400384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n3: 8400384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n1: 4000128 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                    n1: 4000128 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                     n1: 4000128 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                      n1: 4000128 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                       n1: 4000128 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                        n1: 4000128 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                         n1: 4000128 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                          n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                           n1: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                            n1: 4000128 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                             n1: 4000128 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                              n0: 4000128 0x5C62136: std::enable_if<!std::is_void<arcticdb::VersionedItem>::value, arcticdb::VersionedItem>::type pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call<arcticdb::VersionedItem, SingleThreadMutexHolder, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&) && (cast.h:1408)
                   n1: 4000128 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                    n1: 4000128 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                     n1: 4000128 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                      n1: 4000128 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                       n1: 4000128 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                        n1: 4000128 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                         n1: 4000128 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                          n1: 4000128 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                           n1: 4000128 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                            n1: 4000128 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                             n1: 4000128 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                              n0: 4000128 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                   n0: 400128 in 1 place, below massif's threshold (1.00%)
       n0: 6301152 in 3 places, all below massif's threshold (1.00%)
       n1: 4200384 0x5DD2E6E: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)10>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4200384 0x5DD8D5E: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:26)
         n1: 4200384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4200384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4200384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4200384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4200384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4200384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4200384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4200384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4200384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 4200384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 4200384 in 3 places, all below massif's threshold (1.00%)
       n1: 4200384 0x5DD44EE: auto arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)18>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0> >) const (codec-inl.hpp:100)
        n1: 4200384 0x5DD8DA2: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)0>, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:30)
         n1: 4200384 0x5DE7B91: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::Column&&) const (types-inl.hpp:81)
          n1: 4200384 0x5DE7D7E: unsigned long arcticdb::decode_ndarray<arcticdb::Column, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
           n1: 4200384 0x5DCC917: unsigned long arcticdb::decode_field<arcticdb::Column>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::Column&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:173)
            n1: 4200384 0x5E019C1: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:527)
             n1: 4200384 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
              n1: 4200384 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
               n1: 4200384 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                n1: 4200384 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                 n1: 4200384 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                  n1: 4200384 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                   n0: 4200384 in 3 places, all below massif's threshold (1.00%)
      n1: 29444898 0x621AE08: arcticdb::StringBlock::allocate(unsigned long) (string_pool.cpp:63)
       n1: 29444898 0x621B1A6: arcticdb::StringPool::allocate_data(unsigned long) (string_pool.cpp:122)
        n1: 29444898 0x5E37AC6: auto arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}::operator()<arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> > >(arcticdb::entity::TypeDescriptorTag<arcticdb::entity::DataTypeTag<(arcticdb::entity::DataType)9>, arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1> >) const (codec-inl.hpp:100)
         n1: 29444898 0x5E3EC12: auto arcticdb::entity::details::visit_dim<arcticdb::entity::DimensionTag<(arcticdb::entity::Dimension)1>, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&>(arcticdb::entity::DataType, arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}&) (types-inl.hpp:25)
          n1: 29444898 0x5E46239: auto arcticdb::entity::TypeDescriptor::visit_tag<arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion)::{lambda(auto:1)#1}>(arcticdb::StringPool&&) const (types-inl.hpp:82)
           n1: 29444898 0x5E46406: unsigned long arcticdb::decode_ndarray<arcticdb::StringPool, arcticdb::EncodedFieldImpl>(arcticdb::entity::TypeDescriptor const&, arcticdb::EncodedFieldImpl const&, unsigned char const*, arcticdb::StringPool&, std::optional<bm::bvector<bm::mem_alloc<bm::block_allocator, bm::ptr_allocator, bm::alloc_pool<bm::block_allocator, bm::ptr_allocator> > > >&, arcticdb::EncodingVersion) (codec-inl.hpp:84)
            n1: 29444898 0x5E009CB: arcticdb::decode_string_pool(arcticdb::SegmentHeader const&, unsigned char const*&, unsigned char const*, unsigned char const*, arcticdb::SegmentInMemory&) (codec.cpp:395)
             n1: 29444898 0x5E01B34: arcticdb::decode_v1(arcticdb::Segment const&, arcticdb::SegmentHeader const&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&, bool) (codec.cpp:542)
              n1: 29444898 0x5E01C44: arcticdb::decode_into_memory_segment(arcticdb::Segment const&, arcticdb::SegmentHeader&, arcticdb::SegmentInMemory&, arcticdb::entity::StreamDescriptor const&) (codec.cpp:557)
               n1: 29444898 0x5E01DD3: arcticdb::decode_segment(arcticdb::Segment&&) (codec.cpp:569)
                n1: 29444898 0x74B8F79: arcticdb::async::DecodeSegmentTask::operator()(arcticdb::storage::KeySegmentPair&&) const (tasks.hpp:431)
                 n1: 29444898 0x7506AD6: arcticdb::async::AsyncStore<arcticdb::util::SysClock>::read_sync(std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> const&, arcticdb::storage::ReadKeyOpts) (async_store.hpp:231)
                  n1: 29444898 0x7904C90: arcticdb::pipelines::SliceAndKey::ensure_segment(std::shared_ptr<arcticdb::Store> const&) const (frame_slice.cpp:23)
                   n3: 29444898 0x7904D3C: arcticdb::pipelines::SliceAndKey::segment(std::shared_ptr<arcticdb::Store> const&) (frame_slice.cpp:27)
                    n1: 14021326 0x778C401: auto arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}::operator()<arcticdb::pipelines::SliceAndKey>(arcticdb::pipelines::SliceAndKey&) const (version_core.cpp:912)
                     n1: 14021326 0x778C4B1: bool __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>::operator()<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >) (predefined_ops.h:318)
                      n1: 14021326 0x778C4FE: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>, std::random_access_iterator_tag) (stl_algobase.h:2069)
                       n1: 14021326 0x7785410: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::__find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}> >(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__ops::_Iter_pred<arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>) (stl_algobase.h:2114)
                        n1: 14021326 0x7746995: __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > > std::find_if<__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}>(__gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, __gnu_cxx::__normal_iterator<arcticdb::pipelines::SliceAndKey*, std::vector<arcticdb::pipelines::SliceAndKey, std::allocator<arcticdb::pipelines::SliceAndKey> > >, arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool)::{lambda(auto:1&)#1}) (stl_algo.h:3910)
                         n1: 14021326 0x7714A02: arcticdb::version_store::read_incompletes_to_pipeline(std::shared_ptr<arcticdb::Store> const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&, arcticdb::pipelines::ReadQuery const&, arcticdb::ReadOptions const&, bool, bool, bool, bool) (version_core.cpp:911)
                          n1: 14021326 0x7741CAD: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1609)
                           n1: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                            n1: 14021326 0x7842175: arcticdb::version_store::PythonVersionStore::compact_incomplete(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) (version_store_api.cpp:725)
                             n1: 14021326 0x5BFA22E: pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}::operator()(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool) const (pybind11.h:109)
                              n0: 14021326 0x5C928B9: arcticdb::VersionedItem pybind11::detail::argument_loader<arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool>::call_impl<arcticdb::VersionedItem, pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul, SingleThreadMutexHolder>(pybind11::cpp_function::cpp_function<arcticdb::VersionedItem, arcticdb::version_store::PythonVersionStore, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg, pybind11::arg, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::arg_v, pybind11::call_guard<SingleThreadMutexHolder>, char [28]>(arcticdb::VersionedItem (arcticdb::version_store::PythonVersionStore::*)(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::arg_v const&, pybind11::call_guard<SingleThreadMutexHolder> const&, char const (&) [28])::{lambda(arcticdb::version_store::PythonVersionStore*, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, bool, bool, bool, bool, std::optional<pybind11::object> const&, bool, bool, bool)#1}&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>, SingleThreadMutexHolder&&) && (cast.h:1439)
                    n1: 14021326 0x77A9E2C: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> arcticdb::do_compact<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow> >(arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, arcticdb::pipelines::PipelineContext::PipelineContextIterator<arcticdb::pipelines::PipelineContextRow>, std::shared_ptr<arcticdb::pipelines::PipelineContext> const&, std::vector<arcticdb::pipelines::FrameSlice, std::allocator<arcticdb::pipelines::FrameSlice> >&, std::shared_ptr<arcticdb::Store> const&, bool, std::optional<unsigned long>, bool, folly::Function<std::variant<arcticdb::Error, std::monostate> (arcticdb::entity::StreamDescriptor const&, arcticdb::entity::StreamDescriptor const&)>&&) (version_core.hpp:308)
                     n1: 14021326 0x774156D: auto arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}::operator()<arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) const (version_core.cpp:1644)
                      n1: 14021326 0x778D327: std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> std::__invoke_impl<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error>, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(std::__invoke_other, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:61)
                       n1: 14021326 0x778780C: std::__invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>::type std::__invoke<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, arcticdb::stream::TimeseriesIndex&, arcticdb::stream::FixedSchema&, arcticdb::stream::DenseColumnPolicy&) (invoke.h:97)
                        n1: 14021326 0x777BD45: std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> > (*)(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&)>, std::integer_sequence<unsigned long, 0ul, 0ul, 0ul> >::__visit_invoke(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1018)
                         n1: 14021326 0x777EE06: decltype(auto) std::__do_visit<std::__detail::__variant::__deduce_visit_result<std::variant<std::vector<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey>, std::allocator<std::variant<arcticdb::entity::AtomKeyImpl, arcticdb::entity::RefKey> > >, arcticdb::Error> >, arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1728)
                          n1: 14021326 0x777EF2B: std::invoke_result<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&>)()))>::type>::type&&>::type, std::conditional<is_lvalue_reference_v<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&, std::variant_alternative<0ul, std::remove_reference<decltype (__as((declval<std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>)()))>::type>::type&&>::type>::type std::visit<arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&>(arcticdb::util::overload<arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>&&, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>&, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>&, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>&) (variant:1768)
                           n1: 14021326 0x77416F5: auto arcticdb::util::variant_match<0ul, 1ul, 2ul, std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy>, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::integer_sequence<unsigned long, 0ul, 1ul, 2ul>, std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:31)
                            n1: 14021326 0x77417A1: auto arcticdb::util::variant_match<std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}>(std::tuple<std::variant<arcticdb::stream::TimeseriesIndex, arcticdb::stream::RowCountIndex, arcticdb::stream::TableIndex, arcticdb::stream::EmptyIndex>, std::variant<arcticdb::stream::FixedSchema, arcticdb::stream::DynamicSchema>, std::variant<arcticdb::stream::DenseColumnPolicy, arcticdb::stream::SparseColumnPolicy> >&&, arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&)::{lambda(auto:1&&, auto:2&&, auto:3&&)#1}) (variant.hpp:38)
                             n1: 14021326 0x7741F4F: arcticdb::version_store::compact_incomplete_impl(std::shared_ptr<arcticdb::Store> const&, std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::UpdateInfo const&, arcticdb::version_store::CompactIncompleteOptions const&, arcticdb::WriteOptions const&, std::shared_ptr<arcticdb::pipelines::PipelineContext>&) (version_core.cpp:1659)
                              n0: 14021326 0x75C5C78: arcticdb::version_store::LocalVersionedEngine::compact_incomplete_dynamic(std::variant<long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> const&, std::optional<arcticc::pb2::descriptors_pb2::UserDefinedMetadata> const&, arcticdb::version_store::CompactIncompleteOptions const&) (local_versioned_engine.cpp:1020)
                    n0: 1402246 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n2: 5901664 0x5DCA009: arcticdb::ChunkedBufferImpl<3968ul>::reserve(unsigned long) (chunked_buffer.hpp:111)
     n1: 5901664 0x5DD1D5A: arcticdb::ChunkedBufferImpl<3968ul>::ChunkedBufferImpl(unsigned long) (chunked_buffer.hpp:95)
      n1: 5901664 0x5DCAF74: arcticdb::CursoredBuffer<arcticdb::ChunkedBufferImpl<3968ul> >::CursoredBuffer(unsigned long, arcticdb::entity::AllocationType) (cursored_buffer.hpp:26)
       n1: 5901664 0x5DC96BF: arcticdb::Column::Column(arcticdb::entity::TypeDescriptor, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (column.hpp:235)
        n1: 5901664 0x612C857: decltype (::new ((void*)(0)) arcticdb::Column((declval<arcticdb::entity::TypeDescriptor const&>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
         n1: 5901664 0x612C927: void std::allocator_traits<std::allocator<arcticdb::Column> >::construct<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>&, arcticdb::Column*, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
          n1: 5901664 0x60E3760: std::_Sp_counted_ptr_inplace<arcticdb::Column, std::allocator<arcticdb::Column>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
           n1: 5901664 0x6086FB2: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::Column*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
            n1: 5901664 0x604AB9D: std::__shared_ptr<arcticdb::Column, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
             n1: 5901664 0x5FF986C: std::shared_ptr<arcticdb::Column>::shared_ptr<std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Column> >, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
              n1: 5901664 0x5FD7CF2: std::shared_ptr<arcticdb::Column> std::allocate_shared<arcticdb::Column, std::allocator<arcticdb::Column>, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::Column> const&, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
               n1: 5901664 0x5FB6197: std::shared_ptr<arcticdb::Column> std::make_shared<arcticdb::Column, arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::TypeDescriptor const&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                n1: 5901664 0x5F776E2: arcticdb::SegmentInMemoryImpl::create_columns(unsigned long, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:98)
                 n1: 5901664 0x5F77A72: arcticdb::SegmentInMemoryImpl::on_descriptor_change(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:139)
                  n1: 5901664 0x5F76E13: arcticdb::SegmentInMemoryImpl::SegmentInMemoryImpl(arcticdb::entity::StreamDescriptor const&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment_impl.cpp:28)
                   n1: 5901664 0x59DB01B: decltype (::new ((void*)(0)) arcticdb::SegmentInMemoryImpl((declval<arcticdb::entity::StreamDescriptor>)(), (declval<unsigned long&>)(), (declval<arcticdb::entity::AllocationType&>)(), (declval<arcticdb::entity::Sparsity&>)(), (declval<arcticdb::entity::DataTypeMode&>)())) std::construct_at<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (stl_construct.h:97)
                    n1: 5901664 0x59DB0D7: void std::allocator_traits<std::allocator<arcticdb::SegmentInMemoryImpl> >::construct<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>&, arcticdb::SegmentInMemoryImpl*, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (alloc_traits.h:518)
                     n1: 5901664 0x59D2D10: std::_Sp_counted_ptr_inplace<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:519)
                      n1: 5901664 0x59C475A: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::SegmentInMemoryImpl*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:650)
                       n1: 5901664 0x59B2119: std::__shared_ptr<arcticdb::SegmentInMemoryImpl, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr_base.h:1342)
                        n1: 5901664 0x599C1EE: std::shared_ptr<arcticdb::SegmentInMemoryImpl>::shared_ptr<std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::SegmentInMemoryImpl> >, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:409)
                         n1: 5901664 0x5987E83: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::allocate_shared<arcticdb::SegmentInMemoryImpl, std::allocator<arcticdb::SegmentInMemoryImpl>, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(std::allocator<arcticdb::SegmentInMemoryImpl> const&, arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:863)
                          n1: 5901664 0x596FB97: std::shared_ptr<arcticdb::SegmentInMemoryImpl> std::make_shared<arcticdb::SegmentInMemoryImpl, arcticdb::entity::StreamDescriptor, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&>(arcticdb::entity::StreamDescriptor&&, unsigned long&, arcticdb::entity::AllocationType&, arcticdb::entity::Sparsity&, arcticdb::entity::DataTypeMode&) (shared_ptr.h:879)
                           n2: 5901664 0x59609AA: arcticdb::SegmentInMemory::SegmentInMemory(arcticdb::entity::StreamDescriptor&&, unsigned long, arcticdb::entity::AllocationType, arcticdb::entity::Sparsity, arcticdb::entity::DataTypeMode) (memory_segment.hpp:48)
                            n1: 5901664 0x5AC13F6: arcticdb::stream::Aggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit_impl(bool) (aggregator-inl.hpp:30)
                             n1: 5901664 0x77BC48C: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::commit() (segment_aggregator.hpp:106)
                              n0: 5901664 0x77BC0D9: arcticdb::stream::SegmentAggregator<arcticdb::stream::TimeseriesIndex, arcticdb::stream::FixedSchema, arcticdb::stream::RowCountSegmentPolicy, arcticdb::stream::DenseColumnPolicy>::add_segment(arcticdb::SegmentInMemory&&, arcticdb::pipelines::FrameSlice const&, bool) (segment_aggregator.hpp:72)
                            n0: 0 in 1 place, below massif's threshold (1.00%)
     n0: 0 in 1 place, below massif's threshold (1.00%)
    n0: 86016 in 2 places, all below massif's threshold (1.00%)
   n1: 73368885 0x59F9BA0: arcticdb::Buffer::resize(unsigned long) (buffer.hpp:232)
    n2: 73368885 0x59F9977: arcticdb::Buffer::ensure(unsigned long) (buffer.hpp:177)
     n2: 73309501 0x59F953D: arcticdb::Buffer::reserve(unsigned long, std::optional<unsigned long> const&) (buffer.hpp:57)
      n1: 73308773 0x5E5F4DF: arcticdb::Buffer::Buffer(unsigned long, std::optional<unsigned long>) (buffer.hpp:62)
       n1: 73308773 0x5EAADC0: decltype (::new ((void*)(0)) arcticdb::Buffer((declval<unsigned long&>)(), (declval<unsigned long const&>)())) std::construct_at<arcticdb::Buffer, unsigned long&, unsigned long const&>(arcticdb::Buffer*, unsigned long&, unsigned long const&) (stl_construct.h:97)
        n1: 73308773 0x5EAAE4E: void std::allocator_traits<std::allocator<arcticdb::Buffer> >::construct<arcticdb::Buffer, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>&, arcticdb::Buffer*, unsigned long&, unsigned long const&) (alloc_traits.h:518)
         n1: 73308773 0x5EAA586: std::_Sp_counted_ptr_inplace<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&) (shared_ptr_base.h:519)
          n1: 73308773 0x5EA8C20: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(arcticdb::Buffer*&, std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:650)
           n1: 73308773 0x5EA7583: std::__shared_ptr<arcticdb::Buffer, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr_base.h:1342)
            n1: 73308773 0x5EA665A: std::shared_ptr<arcticdb::Buffer>::shared_ptr<std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::_Sp_alloc_shared_tag<std::allocator<arcticdb::Buffer> >, unsigned long&, unsigned long const&) (shared_ptr.h:409)
             n1: 73308773 0x5E9D01F: std::shared_ptr<arcticdb::Buffer> std::allocate_shared<arcticdb::Buffer, std::allocator<arcticdb::Buffer>, unsigned long&, unsigned long const&>(std::allocator<arcticdb::Buffer> const&, unsigned long&, unsigned long const&) (shared_ptr.h:863)
              n1: 73308773 0x5E72661: std::shared_ptr<arcticdb::Buffer> std::make_shared<arcticdb::Buffer, unsigned long&, unsigned long const&>(unsigned long&, unsigned long const&) (shared_ptr.h:879)
               n1: 73308773 0x5E5DCC2: arcticdb::encode_v1(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&) (encode_v1.cpp:127)
                n2: 73308773 0x5DFE730: arcticdb::encode_dispatch(arcticdb::SegmentInMemory&&, arcticc::pb2::encoding_pb2::VariantCodec const&, arcticdb::EncodingVersion) (codec.cpp:49)
                 n1: 73308773 0x74B8170: arcticdb::async::EncodeAtomTask::encode() (tasks.hpp:95)
                  n2: 73308773 0x74B82D7: arcticdb::async::EncodeAtomTask::operator()() (tasks.hpp:104)
                   n1: 73308773 0x74E1F3B: std::enable_if<!std::is_same<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<>, void>::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWithNoUnwrap<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:254)
                    n1: 73308773 0x74D5F72: std::enable_if<!folly::isTry<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> >::value, folly::Try<folly::invoke_detail::traits<arcticdb::async::EncodeAtomTask>::result<> > >::type folly::makeTryWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Try-inl.h:276)
                     n1: 73308773 0x74CB318: void folly::Promise<arcticdb::storage::KeySegmentPair>::setWith<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask&&) (Promise-inl.h:152)
                      n1: 73308773 0x74C1D77: folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}::operator()() (FutureExecutor.h:75)
                       n1: 73308773 0x74D602F: void folly::detail::function::FunctionTraits<void ()>::callBig<folly::FutureExecutor<folly::CPUThreadPoolExecutor>::addFuture<arcticdb::async::EncodeAtomTask>(arcticdb::async::EncodeAtomTask)::{lambda()#1}>(folly::detail::function::Data&) (Function.h:359)
                        n1: 73308773 0x596FF68: folly::detail::function::FunctionTraits<void ()>::operator()() (Function.h:374)
                         n1: 73308773 0x827A4E5: catch_exception<folly::Function<void()>&, void (&)(char const*) noexcept, char const*&> (Exception.h:285)
                          n1: 73308773 0x827A4E5: invokeCatchingExns<folly::Function<void()> > (Executor.h:234)
                           n1: 73308773 0x827A4E5: folly::ThreadPoolExecutor::runTask(std::shared_ptr<folly::ThreadPoolExecutor::Thread> const&, folly::ThreadPoolExecutor::Task&&) (ThreadPoolExecutor.cpp:102)
                            n1: 73308773 0x823EFE1: folly::CPUThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) (CPUThreadPoolExecutor.cpp:333)
                             n1: 73308773 0x82855F8: void std::__invoke_impl<void, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(std::__invoke_memfun_deref, void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:74)
                              n1: 73308773 0x82848AE: std::__invoke_result<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>::type std::__invoke<void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&>(void (folly::ThreadPoolExecutor::*&)(std::shared_ptr<folly::ThreadPoolExecutor::Thread>), folly::ThreadPoolExecutor*&, std::shared_ptr<folly::ThreadPoolExecutor::Thread>&) (invoke.h:96)
                               n1: 73308773 0x82837DF: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (functional:420)
                                n0: 73308773 0x82824E6: void std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)>::operator()<, void>() (functional:503)
                   n0: 0 in 1 place, below massif's threshold (1.00%)
                 n0: 0 in 1 place, below massif's threshold (1.00%)
      n0: 728 in 2 places, all below massif's threshold (1.00%)
     n0: 59384 in 5 places, all below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 12068219 in 1141 places, all below massif's threshold (1.00%)
 n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:99)
  n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:572)
   n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:1974)
     n1: 4444629 0x275B47: UnknownInlinedFun (obmalloc.c:685)
      n1: 4444629 0x275B47: UnknownInlinedFun (unicodeobject.c:1463)
       n1: 4444629 0x275B47: _PyUnicode_FromUCS1.lto_priv.0 (unicodeobject.c:2463)
        n1: 4444629 0x273DD4: UnknownInlinedFun (unicodeobject.c:2534)
         n2: 4444629 0x273DD4: r_object (marshal.c:1153)
          n1: 3896703 0x274660: r_object (marshal.c:1215)
           n2: 3896703 0x274241: r_object (marshal.c:1391)
            n1: 3646405 0x27477A: r_object (marshal.c:1215)
             n1: 3646405 0x274241: r_object (marshal.c:1391)
              n0: 3646405 in 5 places, all below massif's threshold (1.00%)
            n0: 250298 in 8 places, all below massif's threshold (1.00%)
          n0: 547926 in 6 places, all below massif's threshold (1.00%)
 n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:99)
  n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:572)
   n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1981)
    n1: 4312627 0x2571A2: UnknownInlinedFun (obmalloc.c:1974)
     n2: 4312627 0x2571A2: PyObject_Malloc (obmalloc.c:685)
      n1: 4230880 0x25B765: UnknownInlinedFun (dictobject.c:600)
       n2: 4230880 0x25B765: dictresize.lto_priv.0 (dictobject.c:1242)
        n1: 2575800 0x263893: UnknownInlinedFun (dictobject.c:1060)
         n1: 2575800 0x263893: insertdict.lto_priv.0 (dictobject.c:1103)
          n0: 2575800 in 186 places, all below massif's threshold (1.00%)
        n0: 1655080 in 2 places, all below massif's threshold (1.00%)
      n0: 81747 in 6 places, all below massif's threshold (1.00%)
 n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:99)
  n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:572)
   n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1981)
    n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:1974)
     n1: 2613320 0x263168: UnknownInlinedFun (obmalloc.c:685)
      n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2280)
       n1: 2613320 0x263168: UnknownInlinedFun (gcmodule.c:2307)
        n1: 2613320 0x263168: PyType_GenericAlloc (typeobject.c:1156)
         n0: 2613320 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=63
#-----------
time=1455181215179
mem_heap_B=183619078
mem_heap_extra_B=1007570
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=64
#-----------
time=1456917300183
mem_heap_B=183619205
mem_heap_extra_B=1007595
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=1457217516876
mem_heap_B=178205363
mem_heap_extra_B=1003829
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=66
#-----------
time=1457543279760
mem_heap_B=194198939
mem_heap_extra_B=1010853
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=67
#-----------
time=1458137654849
mem_heap_B=256114806
mem_heap_extra_B=1024634
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=68
#-----------
time=1458535682629
mem_heap_B=256119203
mem_heap_extra_B=1024653
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=69
#-----------
time=1458943666480
mem_heap_B=256123267
mem_heap_extra_B=1024661
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=70
#-----------
time=1459548643899
mem_heap_B=183071867
mem_heap_extra_B=1005173
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=71
#-----------
time=1461284724384
mem_heap_B=183071994
mem_heap_extra_B=1005214
mem_stacks_B=0
heap_tree=empty
